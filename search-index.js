var N = null;var searchIndex = {};
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","items":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget' past bytes.",N,N],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",N,[[["r"]],["result",["u32"]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash of a buffer.",0,N],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm `size` bytes ago.",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"RollingAdler32"]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting, such as red bold text or blue underlined text, on ANSI terminals.","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix","","Like `ANSIString`, but only displays the difference between two styles.",N,N],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style","","A style is a collection of properties that can format a string using ANSI escape codes.",N,N],[12,"foreground","","The style's foreground colour, if it has one.",0,N],[12,"background","","The style's background colour, if it has one.",0,N],[12,"is_bold","","Whether this style is bold.",0,N],[12,"is_dimmed","","Whether this style is dimmed.",0,N],[12,"is_italic","","Whether this style is italic.",0,N],[12,"is_underline","","Whether this style is underlined.",0,N],[12,"is_blink","","Whether this style is blinking.",0,N],[12,"is_reverse","","Whether this style has reverse colours.",0,N],[12,"is_hidden","","Whether this style is hidden.",0,N],[12,"is_strikethrough","","Whether this style is struckthrough.",0,N],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and a `Style` to display that string.  `ANSIString` and `ANSIByteString` are aliases for this type on `str` and `[u8]`, respectively.",N,N],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order to be written with a minimum of control characters.",N,N],[12,"0","","",1,N],[4,"Colour","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[4,"Color","","A colour is one specific type of ANSI escape code, and can refer to either the foreground or background colour.",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal environments.",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",N,N],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",N,N],[11,"prefix","","The prefix for this style.",0,[[["self"]],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["self"],["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[["self"]],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[["self"]],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["self"],["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[["self"]],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can be written without any control characters.",0,[[["self"]],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this colour.",2,[[["self"]],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["self"],["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",0,[[["self"],["i"]],["ansigenericstring"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI string. This is a short-cut so you don’t have to use `Blue.normal()` just to get blue text.",2,[[["self"],["i"]],["ansigenericstring"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to display it in a terminal.",N,N],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of bytes.  Use `ANSIByteString` when styling text with an unknown encoding.",N,N],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be written with a minimum of control characters.",N,N],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to be written with a minimum of control characters.",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["prefix"]]],[11,"clone","","",4,[[["self"]],["infix"]]],[11,"clone","","",5,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",6,[[["self"]],["ansigenericstring"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground colour set with the `From` trait.",0,[[["colour"]],["style"]]],[11,"from","","",6,[[["i"]],["ansigenericstring"]]],[11,"default","","Returns a style with no properties set. Formatting text using this style returns the exact same text.",0,[[],["style"]]],[11,"eq","","",0,[[["self"],["style"]],["bool"]]],[11,"ne","","",0,[[["self"],["style"]],["bool"]]],[11,"eq","","",2,[[["self"],["colour"]],["bool"]]],[11,"ne","","",2,[[["self"],["colour"]],["bool"]]],[11,"eq","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"ne","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref","","",6,[[["self"]],["s"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`.  This writes the escape sequences for the associated `Style` around the bytes.",9,[[["self"],["w"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal escape sequences for the associated `Style`s around each set of bytes.",10,[[["self"],["w"]],["result"]]]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte position and returns it.",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",1,[[["self"]],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking the capacity.",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element into its place.",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following elements.",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following elements.",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and dropping the rest.",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out elements",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",4,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"from","","",4,[[["a"]],["self"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",4,N],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"as_mut","","",4,N],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",4,N],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",4,N],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",4,N],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"borrow_mut","","",4,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is this a tty?","items":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout","","",0,N],[13,"Stderr","","",0,N],[13,"Stdin","","",0,N],[5,"is","","returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"paths":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to the `trace` function of this crate.",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic accessors to the demangled name, the raw bytes, the raw string, etc.",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[5,"trace","","Inspects the current call-stack, passing all active frames into the closure provided to calculate a stack trace.",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the specified closure.",N,N],[11,"ip","","Returns the current instruction pointer of this frame.",0,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this function.",0,N],[11,"name","","Returns the name of this function.",1,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",1,[[["self"]],["option"]]],[11,"filename","","Returns the file name where this function was defined.",1,[[["self"]],["option",["path"]]]],[11,"lineno","","Returns the line number for where this symbol is currently executing.",1,[[["self"]],["option",["u32"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,N],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is valid utf-8.",2,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,N],[11,"new","","Captures a backtrace at the callsite of this function, returning an owned representation.",3,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any symbols, this simply captures the backtrace as a list of addresses.",3,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",3,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then this function will resolve all addresses in the backtrace to their symbolic names.",3,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",4,N],[11,"symbol_address","","Same as `Frame::symbol_address`",4,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,N],[11,"name","","Same as `Symbol::name`",5,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",5,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",5,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",5,[[["self"]],["option",["u32"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["backtrace"]]],[11,"clone","","",4,[[["self"]],["backtraceframe"]]],[11,"clone","","",5,[[["self"]],["backtracesymbol"]]],[11,"from","","",3,[[["vec",["backtraceframe"]]],["self"]]],[11,"into","","",3,[[["self"]],["vec",["backtraceframe"]]]],[11,"default","","",3,[[],["backtrace"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style bitmask flags. It is useful for creating typesafe wrappers for C APIs.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured library for parsing command line arguments and subcommands when writing console/terminal applications.","items":[[3,"Arg","clap","The abstract representation of a command line argument. Used to set all the options and relationships that define a valid argument for the program.",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way for you to express, \"Any of these arguments\". By placing arguments in a logical group, you can create easier requirement and exclusion rules instead of having to list each argument individually, or when you want a rule to apply \"any but not all\" arguments.",N,N],[3,"ArgMatches","","Used to get information about the arguments that where supplied to the program at runtime by the user. New instances of this struct are obtained by using the [`App::get_matches`] family of methods.",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`] method. Usage of this iterator allows values which contain invalid UTF-8 code points unlike [`Values`].",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"Values","","An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`] method.",N,N],[3,"App","","Used to create a representation of a command line program and all possible command line arguments. Application settings are set using the \"builder pattern\" with the [`App::get_matches`] family of methods being the terminal methods that starts the runtime-parsing process. These methods then return information about the user supplied arguments (or lack there of).",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",0,N],[12,"kind","","The type of error",0,N],[12,"info","","Any additional information passed along, such as the argument name that caused the error",0,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set, unset, and checked via getter/setter methods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]",N,N],[13,"Required","","The argument must be used",1,N],[13,"Multiple","","The argument may be used multiple times such as `--flag --flag`",1,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,N],[13,"Global","","The argument should be propagated down through all child [`SubCommands`] [`SubCommand`]: ./struct.SubCommand.html",1,N],[13,"Hidden","","The argument should not be shown in help text",1,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via a delimiter",1,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple values",1,N],[13,"HidePossibleValues","","Hides the possible values from the help string",1,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,N],[13,"RequireEquals","","Require options use `--option=val` syntax",1,N],[13,"Last","","Specifies that the arg is the last positional argument and may be accessed early via `--` syntax",1,N],[13,"HideDefaultValue","","Hides the default value from the help string",1,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues","","Hides ENV values in the help message",1,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`] operates",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be treated as an error. This is the default behavior of `clap`.",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all arguments.",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument values, such as negative numbers like `-10`. (which would otherwise be parsed as another flag or option)",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar to `AllowLeadingHyphen` except that it only allows numbers, all other undefined leading hyphens will fail to parse.",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where positionals can be used out of order.",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which would otherwise cause a [`ErrorKind::UnknownArgument`] error, should instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates [subcommands] being used after. By default `clap` allows arguments between subcommands such as `<cmd> [cmd_args] <cmd2> [cmd2_args] <cmd3> [cmd3_args]`. This setting disables that functionality and says that arguments can only follow the final subcommand. For instance using this setting makes only the following invocations possible:",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then exit gracefully), if no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a terminal or TTY.",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the output is going to a terminal/TTY.",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going to a terminal/TTY, or not.",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`] was used.",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s (Defaults to `false`; application does have a version flag)",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help message in the order that they were declared in, and not alphabetically which is the default.",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for all child [`SubCommand`]s. (Defaults to `false`; subcommands have independent version strings from their parents.)",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from help messages",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying help information. This can be useful if there are many values, or they are explained elsewhere.",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or their [aliases]. For example to match a subcommand named `test`, one could use `t`, `te`, `tes`, and `test`.",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first argument passed is the binary name. This is normally the case when using a \"daemon\" style mode, or an interactive CLI where one one would not normally type the binary or program name for each command.",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after the argument.",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to propagate values up or down",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the parent command. For example if you had a subcommand or top level application with a required argument that is only required as long as there is no subcommand present, using this setting would allow you to set those arguments to [`Arg::required(true)`] and yet receive no error so long as the user uses a valid subcommand instead.",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before exiting gracefully) if no [`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be treated as an error and fail with a [`ErrorKind::InvalidUtf8`] error.",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at runtime, error and exit gracefully.",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\" and that `clap` should not attempt to parse any further args.",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more unified help message (a la `getopts` or `docopt` style).",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s (Defaults to `false`; subcommands do have version flags.)",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to continue...\" and wait for user before exiting",2,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and the user provides a value which isn't in that set.",3,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or subcommand which isn't defined.",3,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for being similar enough to an existing subcommand. If it doesn't meet the threshold, or the 'suggestions' feature is disabled, the more general [`UnknownArgument`] error is returned.",3,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized [`SubCommand`] which either doesn't meet the threshold for being similar enough to an existing subcommand, or the 'suggestions' feature is disabled. Otherwise the more detailed [`InvalidSubcommand`] error is returned.",3,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option that does not allow empty values.",3,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with a custom validation and the value fails that validation.",3,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument than were defined by setting [`Arg::max_values`].",3,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument than were defined by setting [`Arg::min_values`].",3,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values for an argument than what's been defined by setting [`Arg::number_of_values`] or than was implicitly set by [`Arg::value_names`].",3,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict with each other and can't be used together.",3,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required arguments.",3,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]), but the user does not provide one.",3,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is required, as defined by [`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.",3,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an argument which doesn't allow that.",3,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid UTF-8 for an argument and [`AppSettings::StrictUtf8`] is set.",3,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was used. The help message will be sent to `stdout`.",3,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was used. The message will be sent to `stdout`.",3,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value into type `T`, but the argument you requested wasn't used. I.e. you asked for an argument with name `config` to be converted, but `config` wasn't used by the user. [`value_t!`]: ./macro.value_t!.html [`values_t!`]: ./macro.values_t!.html",3,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to `stderr` or `stdout` or reading a configuration file. [I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html",3,N],[13,"Format","","Represents a [Format error] (which is a part of [`Display`]). Typically caused by writing to `stderr` or `stdout`. [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html [Format error]: https://doc.rust-lang.org/std/fmt/struct.Error.html",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again SHell (BASH)",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly Interactive SHell (fish)",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[11,"new","","Creates a new instance of an application requiring a name. The name may be, but doesn't have to be same as the binary. The name will be displayed to the user when they request to print version or help and usage information.",5,[[["s"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name, but uses the [`crate_authors!`] and [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.",5,[[["s"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the user when they request the help information with `--help` or `-h`.",5,[[["self"],["s"]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should only be used when absolutely necessary, such as when the binary name for your application is misleading, or perhaps not how the user should invoke your program.",5,[[["self"],["s"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will be displayed when displaying help information with `-h`.",5,[[["self"],["s"]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will be displayed when displaying help information.",5,[[["self"],["s"]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when displaying help information.",5,[[["self"],["s"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed after the auto-generated help information. This is often used to describe how to use the arguments, or caveats to be noted.",5,[[["self"],["s"]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in addition to auto-generated help. This information is displayed before the auto-generated help information. This is often used for header information.",5,[[["self"],["s"]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when displaying version or help information with `-V`.",5,[[["self"],["s"]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when displaying version or help information with `--version`.",5,[[["self"],["s"]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated usage string.",5,[[["self"],["s"]],["self"]]],[11,"help","","Sets a custom help message and overrides the auto-generated one. This should only be used when the auto-generated message does not suffice.",5,[[["self"],["s"]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version` argument.",5,[[["self"],["s"]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version` argument.",5,[[["self"],["s"]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default format.",5,[[["self"],["s"]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["self"],["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,N],[11,"global_setting","","Enables a single setting that is propagated down through all child [`SubCommand`]s.",5,[[["self"],["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down through all child [`SubCommand`]s.",5,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["self"],["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level settings.",5,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will ignore terminal widths and use source formatting.",5,[[["self"],["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal widths and use source formatting.",5,[[["self"],["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["self"],["a"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a usage type string. The string used follows the same rules and syntax as [`Arg::from_usage`]",5,[[["self"],["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one per line. See [`Arg::from_usage`] for details on the syntax and rules supported.",5,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as \"hidden\" subcommands that automatically dispatch as if this subcommand was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",5,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions exactly like those defined with [`App::alias`], except that they are visible inside the help message.",5,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined with [`App::aliases`], except that they are visible inside the help message.",5,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments. By placing them in a logical group, you can build easier requirement and exclusion rules. For instance, you can make an entire [`ArgGroup`] required, meaning that one (and only one) argument from that group must be present at runtime.",5,[[["self"],["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities. Subcommands are effectively sub-[`App`]s, because they can contain their own arguments, subcommands, version, usage, etc. They also function just like [`App`]s, in that they get their own auto generated help, version, and usage.",5,[[["self"],["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid possibilities by iterating over an [`IntoIterator`] of [`SubCommand`]s",5,[[["self"],["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used subcommands, or prioritize those towards the top of the list. Duplicate values are allowed. Subcommands with duplicate display orders will be displayed in alphabetical order.",5,[[["self"],["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `-h` to request the help message",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same method as if someone ran `--help` to request the help message",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `-h`",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a [`io::Write`] object in the same method as if the user ran `--help`",5,[[["self"],["w"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`] object as if the user ran `-V`.",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`] object",5,[[["self"],["w"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at compile time.",5,[[["self"],["s"],["shell"],["t"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at runtime.  Until `cargo install` can install extra files like a completion script, this may be used e.g. in a command that outputs the contents of the completion script, to be redirected into a file by the user.",5,[[["self"],["s"],["shell"],["w"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error will be displayed to the user and the process will exit with the appropriate error code. By default this method gets all user provided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points, which are legal on many platforms.",5,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting the process on failed parse. By default this method gets matches from [`env::args_os`]",5,[[["self"]],["clapresult",["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`] and will automatically exit with an error message. This method, however, lets you specify what iterator to use when performing matches, such as a [`Vec`] of your making.",5,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of [`App::get_matches_from`], and [`App::get_matches_safe`]",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`] struct `self`. This is normally not the desired functionality, instead prefer [`App::get_matches_from_safe`] which does consume `self`.",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string name. The name will be used to get information about whether or not the argument was used at runtime, get values, set relationships with other args, etc..",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings for the [`Arg`]. The syntax is flexible, but there are some rules to follow.",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the preceding `-`.",6,[[["self"],["s"]],["self"]]],[11,"long","","Sets the long version of the argument without the preceding `--`.",6,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden arguments as one only needs to check for the existence of this command, and not all variants.",6,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\" arguments that automatically dispatch as if this argument was used. This is more efficient, and easier than creating multiple hidden subcommands as one only needs to check for the existence of this command, and not all variants.",6,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like those defined with [`Arg::alias`], except that they are visible inside the help message.",6,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions exactly like those defined with [`Arg::aliases`], except that they are visible inside the help message.",6,N],[11,"help","","Sets the short help text of the argument that will be displayed to the user when they print the help information with `-h`. Typically, this is a short (one line) description of the arg.",6,[[["self"],["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be displayed to the user when they print the help information with `--help`. Typically this a more detailed (multi-line) message that describes the arg.",6,[[["self"],["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional argument (i.e. has the highest index) and is only able to be accessed via the `--` syntax (i.e. `$ prog args -- last_arg`). Even, if no other arguments are left to parse, if the user omits the `--` syntax they will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also allows one to access this arg early using the `--` syntax. Accessing an arg early, even with the `--` syntax is otherwise not possible.",6,[[["self"],["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default. Required by default means it is required, when no other conflicting rules have been evaluated. Conflicting rules take precedence over being required. Default: `false`",6,[[["self"],["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e. an equals between the option and associated value) Default: `false`",6,[[["self"],["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["self"],["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting. (i.e. this arg will be required unless this other argument is present).",6,[[["self"],["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e. this arg will be required unless all these other arguments are present).",6,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting. (i.e. this arg will be required unless at least one of these other arguments are present).",6,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this argument, the following argument can't be present and vice versa.",6,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per argument.",6,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,[[["self"],["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e. this argument and the following argument will override each other in POSIX style (whichever argument was specified at runtime last \"wins\")",6,N],[11,"requires","","Sets an argument by name that is required when this one is present I.e. when using this argument, the following argument must be present.",6,[[["self"],["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will only become valid if this arg's value equals `val`.",6,[[["self"],["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement will only become valid if this arg's value equals `val`.",6,N],[11,"required_if","","Allows specifying that an argument is [required] conditionally. The requirement will only become valid if the specified `arg`'s value equals `val`.",6,[[["self"],["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on multiple conditions. The conditions are set up in a `(arg, val)` style tuple. The requirement will only become valid if one of the specified `arg`'s value equals it's corresponding `val`.",6,N],[11,"requires_all","","Sets multiple arguments by names that are required when this one is present I.e. when using this argument, the following arguments must be present.",6,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["self"],["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show possible values)",6,[[["self"],["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be displayed in the help text or not. Defaults to `false` (i.e. show default value)",6,[[["self"],["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["self"],["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For flags, this results in the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d` would count as three occurrences. For options there is a distinct difference in multiple occurrences vs multiple values.",6,[[["self"],["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a give argument. By default when one sets [`multiple(true)`] on an argument, clap will continue parsing values for that argument until it reaches another valid argument, or one of the other more specific settings for multiple values is used (such as [`min_values`], [`max_values`] or [`number_of_values`]).",6,[[["self"],["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child [`SubCommand`]s.",6,[[["self"],["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An empty value must be specified at the command line with an explicit `\"\"`, or `''`",6,[[["self"],["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["self"],["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At runtime, `clap` verifies that only one of the specified values was used, or fails with an error message.",6,N],[11,"possible_value","","Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies that only one of the specified values was used, or fails with error message.",6,[[["self"],["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the argument value to pass validation even if the case differs from that of the specified `possible_value`.",6,[[["self"],["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument belongs to.",6,[[["self"],["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the argument belongs to.",6,N],[11,"number_of_values","","Specifies how many values are required to satisfy this argument. For example, if you had a `-f <file>` argument where you wanted exactly 3 'files' you would set `.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided 3 and only 3 values.",6,[[["self"],["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument value. You provide a closure which accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a message displayed to the user.",6,[[["self"],["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used with values that could contain non UTF-8 formatted strings.",6,[[["self"],["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this argument. For example, if you had a `-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and this argument would be satisfied if the user provided, 1, 2, or 3 values.",6,[[["self"],["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument. For example, if you had a `-f <file>` argument where you wanted at least 2 'files' you would set `.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more values.",6,[[["self"],["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping of multiple values via a delimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`, and `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the value delimiter for all arguments that accept values (options and positional arguments)",6,[[["self"],["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the delimiter. This means if an if an option is encountered, and no delimiter is found, it automatically assumed that no additional values for that option follow. This is unlike the default, where it is generally assumed that more values will follow regardless of whether or not a delimiter is used.",6,[[["self"],["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped together, defaults to `,` (comma).",6,[[["self"],["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments. These names are cosmetic only, used for help and usage strings only. The names are not used to access arguments. The values of the arguments are accessed in numeric order (i.e. if you specify two names `one` and `two` `one` will be the first matched value, `two` will be the second).",6,N],[11,"value_name","","Specifies the name for value of [option] or [positional] arguments inside of help documentation. This name is cosmetic only, the name is not used to access arguments. This setting can be very helpful when describing the type of input the user should be using, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to use all capital letters for the value name.",6,[[["self"],["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at runtime.",6,[[["self"],["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as [`Arg::default_value`] only using [`OsStr`]s instead. [`Arg::default_value`]: ./struct.Arg.html#method.default_value [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,[[["self"],["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used at runtime. If `val` is set to `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"` then `arg` must be present at runtime and have the value `val`.",6,[[["self"],["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same manner as [`Arg::default_value_if`] only using [`OsStr`]s instead. [`Arg::default_value_if`]: ./struct.Arg.html#method.default_value_if [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,[[["self"],["str"],["option",["osstr"]],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`]. The method takes a slice of tuples in the `(arg, Option<val>, default)` format.",6,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact same manner as [`Arg::default_value_ifs`] only using [`OsStr`]s instead. [`Arg::default_value_ifs`]: ./struct.Arg.html#method.default_value_ifs [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html",6,N],[11,"env","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment, if available. If it is not present in the environment, then default rules will apply.",6,[[["self"],["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an argument, that it should be retrieved from the environment if available in the exact same manner as [`Arg::env`] only using [`OsStr`]s instead.",6,[[["self"],["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["self"],["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on the line after the argument and indented once. This can be helpful for arguments with very long or complex help messages. This can also be helpful for arguments with very long flag names, or many/long value names.",6,[[["self"],["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message. Args with a lower value will be displayed first in the help message. This is helpful when one would like to emphasise frequently used args, or prioritize those towards the top of the list. Duplicate values are allowed. Args with duplicate display orders will be displayed in alphabetical order.",6,[[["self"],["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not be parsed individually, but rather passed in their entirety. It is worth noting that setting this requires all values to come after a `--` to indicate they should all be captured. For example:",6,[[["self"],["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["self"],["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["self"],["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument [`ArgSettings`]: ./enum.ArgSettings.html",6,[[["self"],["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes an additional value at runtime). If the option wasn't present at runtime it returns `None`.",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the argument wasn't present at runtime it returns `None`. A lossy value is one which contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument value may contain invalid UTF-8 code points.",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument (i.e. an argument that takes multiple values at runtime). If the option wasn't present at runtime it returns `None`",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the option wasn't present at runtime it returns `None`. A lossy value is one where if it contains invalid UTF-8 code points, those invalid points will be replaced with `\\u{FFFD}`",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a specific argument. If the option wasn't present at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes, regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid filename as an argument value on Linux (for example) may contain invalid UTF-8 code points.",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime, otherwise `false`.",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at runtime. If an argument isn't present it will return `0`.",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other arguments. Indices are similar to argv indices, but are not exactly 1:1.",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if the subcommand wasn't present at runtime.",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`] as well.But simply getting the sub-[`ArgMatches`] doesn't help much if we don't also know which subcommand was actually used. This method returns the name of the subcommand that was used at runtime, or `None` if one wasn't.",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`] by returning a tuple with both pieces of information.",7,N],[11,"usage","","Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name. The name will be displayed to the user when they print version or help and usage information.",8,[[["str"]],["app"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string name. The name will be used to get values from the group or refer to the group inside of conflict and requirement rules.",9,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",9,[[["self"],["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",9,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be used. (Default: `false`)",9,[[["self"],["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will be displayed in the usage string of the application in the format `<arg|arg2|arg3>`. A required `ArgGroup` simply states that one argument from this group must be present at runtime (unless conflicting with another argument).",9,[[["self"],["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when any one of the arguments from this group is used.",9,[[["self"],["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to be confused with a [required group]. Requirement rules function just like [argument requirement rules], you can name other arguments or groups that must be present when one of the arguments from this group is used.",9,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",9,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules function just like [argument exclusion rules], you can name other arguments or groups that must not be present when one of the arguments from this group are used.",9,N],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,N],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[6,"Result","","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] from an argument value. This macro returns a `Result<T,String>` which allows you as the developer to decide what you'd like to do on a failed parse. There are two types of errors, parse failures and those where the argument wasn't present (such as a non-required argument). You can use it to get a single value, or a iterator as with the [`ArgMatches::values_of`]",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T` implements [`std::str::FromStr`] or exiting upon error, instead of returning a [`Result`] type.",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] This macro returns a [`clap::Result<Vec<T>>`] which allows you as the developer to decide what you'd like to do on a failed parse.",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where `T` implements [`std::str::FromStr`] or exiting upon error.",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to it.  The result is a compile-time evaluable expression, suitable for use as a static array size, or the value of a `const`.",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with variants to be used as a type when parsing arguments. This enum also provides a `variants()` function which can be used to retrieve a `Vec<&'static str>` of the variant names, as well as implementing [`FromStr`] and [`Display`] automatically.",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at compile time as `MAJOR.MINOR.PATCH_PKGVERSION_PRE`",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your Cargo.toml at compile time in the form: `\"author1 lastname <author1@example.com>:author2 lastname <author2@example.com>\"`",N,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at compile time.",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at compile time.",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your Cargo.toml at compile time.",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with Usage-string like input but without the associated parsing runtime cost.",N,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["subcommand"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",9,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"next","","",11,[[["self"]],["option",["str"]]]],[11,"size_hint","","",11,N],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["arggroup"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"next_back","","",11,[[["self"]],["option",["str"]]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color quantizer based on the NEUQUANT quantization algorithm by Anthony Dekker. ### Usage `let data = vec![0; 40]; let nq = color_quant::NeuQuant::new(10, 256, &data); let indixes: Vec<u8> = data.chunks(4).map(|pix| nq.index_of(pix) as u8).collect(); let color_map = nq.color_map_rgba();`","items":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",N,N],[11,"new","","Creates a new neuronal network and trains it with the supplied data.",0,N],[11,"init","","Initializes the neuronal network and trains it with the supplied data.",0,N],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in the color map.",0,N],[11,"index_of","","Finds the best-matching index in the color map.",0,N],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"NeuQuant"]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","items":[[3,"Deque","crossbeam_deque","A concurrent work-stealing deque.",N,N],[3,"Stealer","","A stealer that steals elements from the top of a deque.",N,N],[4,"Steal","","Possible outcomes of a steal operation.",N,N],[13,"Empty","","The deque was empty at the time of stealing.",0,N],[13,"Data","","Some data has been successfully stolen.",0,N],[13,"Retry","","Lost the race for stealing data to another concurrent operation. Try again.",0,N],[11,"new","","Returns a new deque.",1,[[],["deque"]]],[11,"with_min_capacity","","Returns a new deque with the specified minimum capacity.",1,[[["usize"]],["deque"]]],[11,"is_empty","","Returns `true` if the deque is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",1,[[["self"]],["usize"]]],[11,"push","","Pushes an element into the bottom of the deque.",1,[[["self"],["t"]]]],[11,"pop","","Pops an element from the bottom of the deque.",1,[[["self"]],["option"]]],[11,"steal","","Steals an element from the top of the deque.",1,[[["self"]],["steal"]]],[11,"stealer","","Creates a stealer that can be shared with other threads.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the deque is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",2,[[["self"]],["usize"]]],[11,"steal","","Steals an element from the top of the deque.",2,[[["self"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"clone","","Creates another stealer.",2,[[["self"]],["stealer"]]],[11,"partial_cmp","","",0,[[["self"],["steal"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["steal"]],["bool"]]],[11,"le","","",0,[[["self"],["steal"]],["bool"]]],[11,"gt","","",0,[[["self"],["steal"]],["bool"]]],[11,"ge","","",0,[[["self"],["steal"]],["bool"]]],[11,"default","","",1,[[],["deque"]]],[11,"eq","","",0,[[["self"],["steal"]],["bool"]]],[11,"ne","","",0,[[["self"],["steal"]],["bool"]]],[11,"cmp","","",0,[[["self"],["steal"]],["ordering"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Steal"],[3,"Deque"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",N,N],[12,"current","","The value in the atomic pointer at the time of the failed operation.",0,N],[12,"new","","The new value, which the operation failed to store.",0,N],[3,"Owned","","An owned heap-allocated object.",N,N],[3,"Shared","","A pointer to an object protected by the epoch GC.",N,N],[3,"Guard","","A guard that keeps the current thread pinned.",N,N],[3,"Collector","","An epoch-based garbage collector.",N,N],[3,"Handle","","A handle to a garbage collector.",N,N],[5,"unprotected","","Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.",N,[[],["guard"]]],[5,"default_handle","","Returns the default handle associated with the current thread.",N,[[],["handle"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin","","Pins the current thread.",N,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic pointer pointing to it.",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["self"],["ordering"],["guard"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic pointer.",1,[[["self"],["p"],["ordering"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous `Shared`.",1,[[["self"],["p"],["ordering"],["guard"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"new","","Allocates `value` on the heap and returns a new owned pointer pointing to it.",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,N],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["self"],["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[["self"]],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",2,[[["self"],["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,N],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],["option"]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[["self"]],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"handle","","Creates a new handle for the collector.",4,[[["self"]],["handle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"defer","","Stores a function so that it can be executed at some point after all currently pinned threads get unpinned.",6,[[["self"],["f"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by executing them or moving into the global cache.",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function and then re-pins the thread.",6,[[["self"],["f"]],["r"]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",N,N],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,N],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,N],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["guard"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"Handle"],[3,"Guard"],[8,"CompareAndSetOrdering"]]};
searchIndex["crossbeam_utils"]={"doc":"","items":[[0,"cache_padded","crossbeam_utils","",N,N],[3,"CachePadded","crossbeam_utils::cache_padded","Pads `T` to the length of a cache line.",N,N],[11,"new","","Pads a value to the length of a cache line.",0,[[["t"]],["cachepadded"]]],[0,"atomic_option","crossbeam_utils","",N,N],[3,"AtomicOption","crossbeam_utils::atomic_option","",N,N],[11,"new","","",1,[[],["self"]]],[11,"swap_box","","",1,[[["self"],["box"],["ordering"]],["option",["box"]]]],[11,"swap","","",1,[[["self"],["t"],["ordering"]],["option"]]],[11,"take","","",1,[[["self"],["ordering"]],["option"]]],[0,"scoped","crossbeam_utils","",N,N],[3,"Scope","crossbeam_utils::scoped","",N,N],[3,"ScopedJoinHandle","","A handle to a scoped thread",N,N],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control over the properties and behavior of new scoped threads.",N,N],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",N,[[["f"]],["joinhandle"]]],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the closure bounds.",N,[[["builder"],["f"]],["result",["joinhandle"]]]],[5,"scope","","Create a new `scope`, for deferred destructors.",N,[[["f"]],["r"]]],[11,"defer","","Schedule code to be executed when exiting the scope.",2,[[["self"],["f"]]]],[11,"spawn","","Create a scoped thread.",2,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",2,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Names the thread-to-be. Currently the name is used for identification only in panic messages.",3,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",3,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",3,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Join the scoped thread, returning the result it produced.",4,[[["self"]],["t"]]],[11,"thread","","Get the underlying thread handle.",4,[[["self"]],["thread"]]],[11,"from","crossbeam_utils::cache_padded","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic_option","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::scoped","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","crossbeam_utils::cache_padded","",0,[[["self"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","crossbeam_utils::atomic_option","",1,[[["self"]]]],[11,"drop","crossbeam_utils::scoped","",2,[[["self"]]]],[11,"default","crossbeam_utils::cache_padded","",0,[[],["self"]]],[11,"default","crossbeam_utils::atomic_option","",1,[[],["self"]]],[11,"fmt","crossbeam_utils::cache_padded","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::atomic_option","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::scoped","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"deref","crossbeam_utils::cache_padded","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]]],"paths":[[3,"CachePadded"],[3,"AtomicOption"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression algorightm in pure rust.","items":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or compression function.",N,N],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for matches.",0,N],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,N],[12,"matching_type","","Whether to use lazy or greedy matching.",0,N],[12,"special","","Force fixed/stored blocks (Not implemented yet). * Default value: `SpecialOptions::Normal`",0,N],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal","","Compress normally.",1,N],[13,"_ForceFixed","","Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,"Compression","","An enum describing the level of compression to be used by the encoder",N,N],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default","","Default level (`CompressionOptions::default()`).",2,N],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",2,N],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a match right away if found.",3,N],[13,"Lazy","","Use lazy matching: after finding a match, the next input byte is checked, to see if there is a better match starting at that byte.",3,N],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",N,N],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression using the default compression level.",N,N],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.",N,N],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer, using the default compression level.",N,N],[11,"high","","Returns compression settings rouhgly corresponding to the `HIGH(9)` setting in miniz.",0,[[],["compressionoptions"]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions"]]],[11,"huffman_only","","Returns a set of compression settings that makes the compressor only compress using huffman coding. (Ignoring any length/distance matching)",0,[[],["compressionoptions"]]],[11,"rle","","Returns a set of compression settings that makes the compressor compress only using run-length encoding (i.e only looking for matches one byte back).",0,[[],["compressionoptions"]]],[0,"write","","Encoders implementing a `Write` interface.",N,N],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",N,N],[3,"ZlibEncoder","","A Zlib encoder/compressor.",N,N],[11,"from","deflate","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","deflate::write","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","deflate","",2,[[["self"]],["compression"]]],[11,"clone","","",1,[[["self"]],["specialoptions"]]],[11,"clone","","",0,[[["self"]],["compressionoptions"]]],[11,"clone","","",3,[[["self"]],["matchingtype"]]],[11,"from","","",0,[[["compression"]],["compressionoptions"]]],[11,"drop","deflate::write","When the encoder is dropped, output the rest of the data.",4,[[["self"]]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[["self"]]]],[11,"partial_cmp","deflate","",2,[[["self"],["compression"]],["option",["ordering"]]]],[11,"partial_cmp","","",3,[[["self"],["matchingtype"]],["option",["ordering"]]]],[11,"default","","",2,[[],["compression"]]],[11,"default","","",1,[[],["specialoptions"]]],[11,"default","","Returns the options describing the default compression level.",0,[[],["compressionoptions"]]],[11,"eq","","",2,[[["self"],["compression"]],["bool"]]],[11,"eq","","",1,[[["self"],["specialoptions"]],["bool"]]],[11,"eq","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"ne","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"eq","","",3,[[["self"],["matchingtype"]],["bool"]]],[11,"cmp","","",2,[[["self"],["compression"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["matchingtype"]],["ordering"]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"write","deflate::write","",4,N],[11,"flush","","Flush the encoder.",4,[[["self"]],["result"]]],[11,"write","","",5,N],[11,"flush","","Flush the encoder.",5,[[["self"]],["result"]]],[11,"new","","Creates a new encoder using the provided compression options.",4,[[["w"],["o"]],["deflateencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume this `DeflateEncoder`, and return the contained writer if writing succeeds.",4,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options), replacing the current writer with a new one, returning the old one.",4,[[["self"],["w"]],["result"]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression options.",5,[[["w"],["o"]],["zlibencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume this `ZlibEncoder`, and return the contained writer if writing succeeds.",5,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options), replacing the current writer with a new one, returning the old one.",5,[[["self"],["w"]],["result"]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]]],"paths":[[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"Compression"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"hash","","",0,N],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"into","","",0,[[["self"]],["result"]]]],"paths":[[4,"Either"]]};
searchIndex["event_loop"]={"doc":"A Piston event loop for games and interactive applications","items":[[3,"EventSettings","event_loop","Stores event loop settings.",N,N],[12,"max_fps","","The maximum number of frames per second",0,N],[12,"ups","","The number of updates per second",0,N],[12,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",0,N],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",0,N],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",0,N],[12,"lazy","","Enable or disable rendering only when receiving input. When enabled, update and idle events are disabled.",0,N],[3,"Events","","An event loop iterator",N,N],[17,"DEFAULT_UPS","","The default updates per second.",N,N],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",N,N],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",N,N],[8,"EventLoop","","Methods implemented for changing event loop settings.",N,N],[10,"get_event_settings","","Returns event loop settings.",1,[[["self"]],["eventsettings"]]],[10,"set_event_settings","","Sets event loop settings.",1,[[["self"],["eventsettings"]]]],[11,"set_ups","","The number of updates per second",1,[[["self"],["u64"]]]],[11,"ups","","The number of updates per second",1,[[["self"],["u64"]],["self"]]],[11,"set_ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,[[["self"],["u64"]]]],[11,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,[[["self"],["u64"]],["self"]]],[11,"set_max_fps","","The maximum number of frames per second",1,[[["self"],["u64"]]]],[11,"max_fps","","The maximum number of frames per second",1,[[["self"],["u64"]],["self"]]],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",1,[[["self"],["bool"]]]],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",1,[[["self"],["bool"]],["self"]]],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,[[["self"],["bool"]]]],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,[[["self"],["bool"]],["self"]]],[11,"set_lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,[[["self"],["bool"]]]],[11,"lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,[[["self"],["bool"]],["self"]]],[11,"new","","Creates new with default settings.",0,[[],["eventsettings"]]],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",2,[[["eventsettings"]],["events"]]],[11,"next","","Returns the next event.",2,[[["self"],["w"]],["option",["event"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"get_event_settings","","",0,[[["self"]],["self"]]],[11,"set_event_settings","","",0,[[["self"],["self"]]]],[11,"get_event_settings","","",2,[[["self"]],["eventsettings"]]],[11,"set_event_settings","","",2,[[["self"],["eventsettings"]]]],[11,"clone","","",0,[[["self"]],["eventsettings"]]],[11,"clone","","",2,[[["self"]],["events"]]],[11,"default","","",0,[[],["eventsettings"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"EventSettings"],[8,"EventLoop"],[3,"Events"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style introduction is available here.","items":[[3,"Backtrace","failure","A `Backtrace`.",N,N],[3,"Compat","","A compatibility wrapper around an error type from this crate.",N,N],[3,"Context","","An error with context around it.",N,N],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error","","The `Error` type, which can contain any failure.",N,N],[3,"Causes","","A iterator over the causes of a `Fail`",N,N],[5,"err_msg","","Constructs a `Fail` type from a string.",N,[[["d"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real backtrace if the crate is compiled in std mode and the `RUST_BACKTRACE` environmental variable is activated.",0,[[],["backtrace"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[["self"]],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function to the contained context.",2,[[["self"],["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement `Fail`.",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this `Error` contains.",4,[[["self"]],["fail"]]],[11,"cause","","Returns a reference to the underlying cause of this `Error`. Unlike the method on `Fail`, this does not return an `Option`. The `Error` type always has an underlying failure.",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail` type.",4,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in the cause chain which does not return an underlying `cause`.",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the cause of the fail as the first item and the `root_cause` as the final item.",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the current as the first item up to the `root_cause` as the final item.",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail` type by reference.",4,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail` type by mutable reference.",4,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",N,N],[8,"AsFail","","The `AsFail` trait",N,N],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object of `Fail`.",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",N,N],[10,"compat","","Wraps the error in `Compat` to make it compatible with older error handling APIs that expect `std::error::Error`.",6,[[["self"]],["result",["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["self"],["d"]],["result",["context"]]]],[10,"with_context","","Wraps the error type in a context type generated by looking at the error value.",6,[[["self"],["f"]],["result",["context"]]]],[8,"Fail","","The `Fail` trait.",N,N],[11,"cause","","Returns a reference to the underlying cause of this failure, if it is an error that wraps other errors.",7,[[["self"]],["option",["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this failure, if it carries one.",7,[[["self"]],["option",["backtrace"]]]],[11,"context","","Provides context for this failure.",7,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that implements `std::error::Error`.",7,[[["self"]],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by reference.",7,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by mutable reference.",7,[[["self"]],["option"]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value in the cause chain which does not return an underlying `cause`.",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the cause of this fail as the first item and the `root_cause` as the final item.",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the current as the first item up to the `root_cause` as the final item.",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",N,N],[14,"ensure","","Exits a function early with an `Error` if the condition is not satisfied.",N,N],[14,"format_err","","Constructs an `Error` using the standard string interpolation syntax.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"next","","",8,[[["self"]],["option",["fail"]]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"hash","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":"","items":[[24,"Fail","failure_derive","",N,N]],"paths":[]};
searchIndex["float"]={"doc":"Traits for generic floats in game programming","items":[[8,"Float","float","Convenience trait for floats.",N,N],[8,"Min","","Minimum value.",N,N],[10,"min","","Returns the minimum value of self or other.",0,[[["self"],["self"]],["self"]]],[8,"Max","","Maximum value.",N,N],[10,"max","","Returns the maximum value of self or other.",1,[[["self"],["self"]],["self"]]],[8,"Signum","","The sign of the number.",N,N],[10,"signum","","Returns number representing the sign of self",2,[[["self"]],["self"]]],[8,"Powf","","Floating number power.",N,N],[10,"powf","","Returns floating power of the number.",3,[[["self"],["self"]],["self"]]],[8,"Radians","","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",4,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",4,[[["self"]],["self"]]],[8,"One","","Number 1.",N,N],[10,"one","","Returns 1.",5,[[],["self"]]],[8,"Zero","","Number 0.",N,N],[10,"zero","","Returns 0.",6,[[],["self"]]],[8,"Sqrt","","Square root.",N,N],[10,"sqrt","","Returns square root.",7,[[["self"]],["self"]]],[8,"Trig","","Basic trigonometry functions",N,N],[10,"sin","","Returns sine of self.",8,[[["self"]],["self"]]],[10,"cos","","Returns cosine of self.",8,[[["self"]],["self"]]],[10,"tan","","Returns tangent of self.",8,[[["self"]],["self"]]],[10,"asin","","Returns inverse sine of self.",8,[[["self"]],["self"]]],[10,"acos","","Returns inverse cosine of self.",8,[[["self"]],["self"]]],[10,"atan","","Returns inverse tangent of self.",8,[[["self"]],["self"]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other (x).",8,[[["self"],["self"]],["self"]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[["self"]],["self"]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[["self"]],["self"]]],[8,"Cast","","Casts into another type.",N,N],[10,"cast","","Casts into other type.",9,[[["self"]],["t"]]],[8,"FromPrimitive","","Trait for converting from different numeric types",N,N],[10,"from_f64","","from a f64",10,[[["f64"]],["self"]]],[10,"from_f32","","from a f32",10,[[["f32"]],["self"]]],[10,"from_isize","","from a isze",10,[[["isize"]],["self"]]],[10,"from_u32","","from a u32",10,[[["u32"]],["self"]]],[10,"from_i32","","from a i32",10,[[["i32"]],["self"]]]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding to the hash `key`.",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","items":[[3,"Frame","gif","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",0,N],[12,"dispose","","Disposal method.",0,N],[12,"transparent","","Transparent index (if available).",0,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",0,N],[12,"top","","Offset from the top border of the canvas.",0,N],[12,"left","","Offset from the left border of the canvas.",0,N],[12,"width","","Width of the frame.",0,N],[12,"height","","Height of the frame.",0,N],[12,"interlaced","","True if the image is interlaced.",0,N],[12,"palette","","Frame local color palette if available.",0,N],[12,"buffer","","Buffer containing the image data. Only indices unless configured differently.",0,N],[3,"StreamingDecoder","","GIF decoder which supports streaming",N,N],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means that there is no memory limit set.",N,N],[12,"0","","",1,N],[3,"Reader","","GIF decoder",N,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[4,"Block","","Known GIF block types",N,N],[13,"Image","","Image block.",2,N],[13,"Extension","","Extension block.",2,N],[13,"Trailer","","Image trailer.",2,N],[4,"Extension","","Known GIF extensions",N,N],[13,"Text","","Text extension.",3,N],[13,"Control","","Control extension.",3,N],[13,"Comment","","Comment extension.",3,N],[13,"Application","","Application extension.",3,N],[4,"DisposalMethod","","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",4,N],[13,"Keep","","Do not dispose.",4,N],[13,"Background","","Restore to background color.",4,N],[13,"Previous","","Restore to previous.",4,N],[4,"Decoded","","Indicates whether a certain object has been decoded",N,N],[13,"Nothing","","Decoded nothing.",5,N],[13,"GlobalPalette","","Global palette.",5,N],[13,"BackgroundColor","","Index of the background color in the global palette.",5,N],[13,"Trailer","","Decoded the image trailer.",5,N],[13,"BlockStart","","The start of a block.",5,N],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame","","Decoded all information of the next frame. The returned frame does not any image data.",5,N],[13,"Data","","Decoded some data of the current frame.",5,N],[13,"DataEnd","","No more data available the current frame.",5,N],[4,"DecodingError","","Decoding error.",N,N],[13,"Format","","Returned if the image is found to be malformed.",6,N],[13,"Internal","","Internal (logic) error.",6,N],[13,"Io","","Wraps `std::io::Error`.",6,N],[4,"ColorOutput","","Output mode for the image data",N,N],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This affects:",7,N],[13,"Indexed","","The decoder returns the raw indexed data.",7,N],[4,"Extensions","","Configures how extensions should be handled",N,N],[13,"Save","","Saves all extention data",8,N],[13,"Skip","","Skips the data of unknown extensions and extracts the data from known ones",8,N],[4,"ExtensionData","","Extension data.",N,N],[13,"Control","","Control extension. Use `ExtensionData::new_control_ext` to construct.",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay","","Frame delay.",9,N],[12,"trns","","Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat","","Number of repetitions",N,N],[13,"Finite","","Finite number of repetitions",10,N],[13,"Infinite","","Infinite number of repetitions",10,N],[11,"from_u8","","Converts `u8` to `Option<Self>`",4,[[["u8"]],["option",["disposalmethod"]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",2,[[["u8"]],["option",["block"]]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,[[["u8"]],["option",["extension"]]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format.",0,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels",0,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette",0,N],[11,"from_rgb","","Creates a frame from pixels in RGB format.",0,N],[11,"new","","Creates a new streaming decoder",11,[[],["streamingdecoder"]]],[11,"update","","Updates the internal state of the decoder. ",11,N],[11,"last_ext","","Returns the data of the last extension that has been decoded.",11,N],[11,"current_frame_mut","","Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame","","Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width","","Width of the image",11,[[["self"]],["u16"]]],[11,"height","","Height of the image",11,[[["self"]],["u16"]]],[11,"new","","Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info","","Reads the logical screen descriptor including the global color palette",12,[[["self"]],["result",["reader","decodingerror"]]]],[11,"next_frame_info","","Returns the next frame info",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_next_frame","","Reads the next frame from the image.",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated buffer.",13,N],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated buffer until the buffer has been filled completely.",13,N],[11,"buffer_size","","Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length","","Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette","","Returns the color palette relevant for the current (next) frame",13,[[["self"]],["result",["decodingerror"]]]],[11,"global_palette","","The global color palette",13,[[["self"]],["option"]]],[11,"width","","Width of the image",13,[[["self"]],["u16"]]],[11,"height","","Height of the image",13,[[["self"]],["u16"]]],[11,"bg_color","","Index of the background color in the global palette",13,[[["self"]],["option",["usize"]]]],[11,"new_control_ext","","Constructor for control extension data.",9,[[["u16"],["disposalmethod"],["bool"],["option",["u8"]]],["extensiondata"]]],[11,"new","","Creates a new encoder.",14,N],[11,"write_global_palette","","Writes the global color palette.",14,N],[11,"write_frame","","Writes a frame to the image.",14,[[["self"],["frame"]],["result"]]],[11,"write_extension","","Writes an extension to the image.",14,[[["self"],["extensiondata"]],["result"]]],[11,"write_raw_extension","","Writes a raw extension to the image.",14,N],[8,"SetParameter","","Implemented for objects that have parameters.",N,N],[11,"set","","Sets `value` as a parameter of `self`.",15,N],[8,"Parameter","","Configuration parameter trait.",N,N],[16,"Result","","Result type of `set_param`.",16,N],[10,"set_param","","Sets `self` as a parameter of `Object`.",16,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"set_param","","",8,[[["self"],["streamingdecoder"]]]],[11,"set_param","","",7,[[["self"],["decoder"]]]],[11,"set_param","","",1,[[["self"],["decoder"]]]],[11,"set_param","","",10,N],[11,"clone","","",4,[[["self"]],["disposalmethod"]]],[11,"clone","","",2,[[["self"]],["block"]]],[11,"clone","","",3,[[["self"]],["extension"]]],[11,"clone","","",0,[[["self"]],["frame"]]],[11,"from","","",6,[[["error"]],["self"]]],[11,"drop","","",14,[[["self"]]]],[11,"default","","",0,[[],["frame"]]],[11,"eq","","",4,[[["self"],["disposalmethod"]],["bool"]]],[11,"eq","","",2,[[["self"],["block"]],["bool"]]],[11,"eq","","",3,[[["self"],["extension"]],["bool"]]],[11,"eq","","",8,[[["self"],["extensions"]],["bool"]]],[11,"eq","","",7,[[["self"],["coloroutput"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],["option",["error"]]]],[11,"set","","Sets `value` as a parameter of `self`.",15,N]],"paths":[[3,"Frame"],[3,"MemoryLimit"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"ExtensionData"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,"SetParameter"],[8,"Parameter"]]};
searchIndex["gl"]={"doc":"Usage","items":[[3,"FnPtr","gl","",N,N],[5,"ActiveShaderProgram","","",N,N],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",N,N],[5,"AttachShader","","Fallbacks: AttachObjectARB",N,N],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",N,N],[5,"BeginQuery","","Fallbacks: BeginQueryARB",N,N],[5,"BeginQueryIndexed","","",N,N],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",N,N],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",N,N],[5,"BindBuffer","","Fallbacks: BindBufferARB",N,N],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",N,N],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",N,N],[5,"BindBuffersBase","","",N,N],[5,"BindBuffersRange","","",N,N],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",N,N],[5,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",N,N],[5,"BindFramebuffer","","",N,N],[5,"BindImageTexture","","",N,N],[5,"BindImageTextures","","",N,N],[5,"BindProgramPipeline","","",N,N],[5,"BindRenderbuffer","","",N,N],[5,"BindSampler","","",N,N],[5,"BindSamplers","","",N,N],[5,"BindTexture","","Fallbacks: BindTextureEXT",N,N],[5,"BindTextureUnit","","",N,N],[5,"BindTextures","","",N,N],[5,"BindTransformFeedback","","",N,N],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",N,N],[5,"BindVertexBuffer","","",N,N],[5,"BindVertexBuffers","","",N,N],[5,"BlendColor","","Fallbacks: BlendColorEXT",N,N],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",N,N],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",N,N],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",N,N],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",N,N],[5,"BlendFunc","","",N,N],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",N,N],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",N,N],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",N,N],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",N,N],[5,"BlitNamedFramebuffer","","",N,N],[5,"BufferData","","Fallbacks: BufferDataARB",N,N],[5,"BufferStorage","","Fallbacks: BufferStorageEXT",N,N],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",N,N],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",N,[[["glenum"]],["glenum"]]],[5,"CheckNamedFramebufferStatus","","",N,[[["gluint"],["glenum"]],["glenum"]]],[5,"ClampColor","","Fallbacks: ClampColorARB",N,N],[5,"Clear","","",N,N],[5,"ClearBufferData","","",N,N],[5,"ClearBufferSubData","","",N,N],[5,"ClearBufferfi","","",N,N],[5,"ClearBufferfv","","",N,N],[5,"ClearBufferiv","","",N,N],[5,"ClearBufferuiv","","",N,N],[5,"ClearColor","","",N,N],[5,"ClearDepth","","",N,N],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",N,N],[5,"ClearNamedBufferData","","",N,N],[5,"ClearNamedBufferSubData","","",N,N],[5,"ClearNamedFramebufferfi","","",N,N],[5,"ClearNamedFramebufferfv","","",N,N],[5,"ClearNamedFramebufferiv","","",N,N],[5,"ClearNamedFramebufferuiv","","",N,N],[5,"ClearStencil","","",N,N],[5,"ClearTexImage","","Fallbacks: ClearTexImageEXT",N,N],[5,"ClearTexSubImage","","Fallbacks: ClearTexSubImageEXT",N,N],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",N,[[["glsync"],["glbitfield"],["gluint64"]],["glenum"]]],[5,"ClipControl","","",N,N],[5,"ColorMask","","",N,N],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",N,N],[5,"ColorP3ui","","",N,N],[5,"ColorP3uiv","","",N,N],[5,"ColorP4ui","","",N,N],[5,"ColorP4uiv","","",N,N],[5,"CompileShader","","Fallbacks: CompileShaderARB",N,N],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",N,N],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",N,N],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",N,N],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",N,N],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",N,N],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",N,N],[5,"CompressedTextureSubImage1D","","",N,N],[5,"CompressedTextureSubImage2D","","",N,N],[5,"CompressedTextureSubImage3D","","",N,N],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",N,N],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",N,N],[5,"CopyNamedBufferSubData","","",N,N],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",N,N],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",N,N],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",N,N],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",N,N],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",N,N],[5,"CopyTextureSubImage1D","","",N,N],[5,"CopyTextureSubImage2D","","",N,N],[5,"CopyTextureSubImage3D","","",N,N],[5,"CreateBuffers","","",N,N],[5,"CreateFramebuffers","","",N,N],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",N,[[],["gluint"]]],[5,"CreateProgramPipelines","","",N,N],[5,"CreateQueries","","",N,N],[5,"CreateRenderbuffers","","",N,N],[5,"CreateSamplers","","",N,N],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",N,[[["glenum"]],["gluint"]]],[5,"CreateShaderProgramv","","",N,N],[5,"CreateTextures","","",N,N],[5,"CreateTransformFeedbacks","","",N,N],[5,"CreateVertexArrays","","",N,N],[5,"CullFace","","",N,N],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",N,N],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",N,N],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",N,N],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",N,N],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",N,N],[5,"DeleteProgram","","",N,N],[5,"DeleteProgramPipelines","","",N,N],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",N,N],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",N,N],[5,"DeleteSamplers","","",N,N],[5,"DeleteShader","","",N,N],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",N,N],[5,"DeleteTextures","","",N,N],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",N,N],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",N,N],[5,"DepthFunc","","",N,N],[5,"DepthMask","","",N,N],[5,"DepthRange","","",N,N],[5,"DepthRangeArrayv","","",N,N],[5,"DepthRangeIndexed","","",N,N],[5,"DepthRangef","","Fallbacks: DepthRangefOES",N,N],[5,"DetachShader","","Fallbacks: DetachObjectARB",N,N],[5,"Disable","","",N,N],[5,"DisableVertexArrayAttrib","","",N,N],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",N,N],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",N,N],[5,"DispatchCompute","","",N,N],[5,"DispatchComputeIndirect","","",N,N],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",N,N],[5,"DrawArraysIndirect","","",N,N],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",N,N],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",N,N],[5,"DrawBuffer","","",N,N],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",N,N],[5,"DrawElements","","",N,N],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",N,N],[5,"DrawElementsIndirect","","",N,N],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",N,N],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",N,N],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",N,N],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",N,N],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",N,N],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",N,N],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackEXT, DrawTransformFeedbackNV",N,N],[5,"DrawTransformFeedbackInstanced","","Fallbacks: DrawTransformFeedbackInstancedEXT",N,N],[5,"DrawTransformFeedbackStream","","",N,N],[5,"DrawTransformFeedbackStreamInstanced","","",N,N],[5,"Enable","","",N,N],[5,"EnableVertexArrayAttrib","","",N,N],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",N,N],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",N,N],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",N,N],[5,"EndQuery","","Fallbacks: EndQueryARB",N,N],[5,"EndQueryIndexed","","",N,N],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",N,N],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",N,[[["glenum"],["glbitfield"]],["glsync"]]],[5,"Finish","","",N,N],[5,"Flush","","",N,N],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",N,N],[5,"FlushMappedNamedBufferRange","","",N,N],[5,"FramebufferParameteri","","",N,N],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",N,N],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",N,N],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",N,N],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",N,N],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",N,N],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",N,N],[5,"FrontFace","","",N,N],[5,"GenBuffers","","Fallbacks: GenBuffersARB",N,N],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",N,N],[5,"GenProgramPipelines","","",N,N],[5,"GenQueries","","Fallbacks: GenQueriesARB",N,N],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",N,N],[5,"GenSamplers","","",N,N],[5,"GenTextures","","",N,N],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",N,N],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",N,N],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",N,N],[5,"GenerateTextureMipmap","","",N,N],[5,"GetActiveAtomicCounterBufferiv","","",N,N],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",N,N],[5,"GetActiveSubroutineName","","",N,N],[5,"GetActiveSubroutineUniformName","","",N,N],[5,"GetActiveSubroutineUniformiv","","",N,N],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",N,N],[5,"GetActiveUniformBlockName","","",N,N],[5,"GetActiveUniformBlockiv","","",N,N],[5,"GetActiveUniformName","","",N,N],[5,"GetActiveUniformsiv","","",N,N],[5,"GetAttachedShaders","","",N,N],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",N,N],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",N,N],[5,"GetBooleanv","","",N,N],[5,"GetBufferParameteri64v","","",N,N],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",N,N],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",N,N],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",N,N],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",N,N],[5,"GetCompressedTextureImage","","",N,N],[5,"GetCompressedTextureSubImage","","",N,N],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",N,N],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",N,N],[5,"GetDoublev","","",N,N],[5,"GetError","","",N,[[],["glenum"]]],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV, GetFloati_vOES",N,N],[5,"GetFloatv","","",N,N],[5,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",N,N],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",N,N],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",N,N],[5,"GetFramebufferParameteriv","","",N,N],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",N,[[],["glenum"]]],[5,"GetInteger64i_v","","",N,N],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",N,N],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",N,N],[5,"GetIntegerv","","",N,N],[5,"GetInternalformati64v","","",N,N],[5,"GetInternalformativ","","",N,N],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",N,N],[5,"GetNamedBufferParameteri64v","","",N,N],[5,"GetNamedBufferParameteriv","","",N,N],[5,"GetNamedBufferPointerv","","",N,N],[5,"GetNamedBufferSubData","","",N,N],[5,"GetNamedFramebufferAttachmentParameteriv","","",N,N],[5,"GetNamedFramebufferParameteriv","","",N,N],[5,"GetNamedRenderbufferParameteriv","","",N,N],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",N,N],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",N,N],[5,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",N,N],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",N,N],[5,"GetProgramInfoLog","","",N,N],[5,"GetProgramInterfaceiv","","",N,N],[5,"GetProgramPipelineInfoLog","","",N,N],[5,"GetProgramPipelineiv","","",N,N],[5,"GetProgramResourceIndex","","",N,N],[5,"GetProgramResourceLocation","","",N,N],[5,"GetProgramResourceLocationIndex","","",N,N],[5,"GetProgramResourceName","","",N,N],[5,"GetProgramResourceiv","","",N,N],[5,"GetProgramStageiv","","",N,N],[5,"GetProgramiv","","",N,N],[5,"GetQueryBufferObjecti64v","","",N,N],[5,"GetQueryBufferObjectiv","","",N,N],[5,"GetQueryBufferObjectui64v","","",N,N],[5,"GetQueryBufferObjectuiv","","",N,N],[5,"GetQueryIndexediv","","",N,N],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",N,N],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",N,N],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",N,N],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",N,N],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",N,N],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",N,N],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",N,N],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",N,N],[5,"GetSamplerParameterfv","","",N,N],[5,"GetSamplerParameteriv","","",N,N],[5,"GetShaderInfoLog","","",N,N],[5,"GetShaderPrecisionFormat","","",N,N],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",N,N],[5,"GetShaderiv","","",N,N],[5,"GetString","","",N,N],[5,"GetStringi","","",N,N],[5,"GetSubroutineIndex","","",N,N],[5,"GetSubroutineUniformLocation","","",N,N],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",N,N],[5,"GetTexImage","","",N,N],[5,"GetTexLevelParameterfv","","",N,N],[5,"GetTexLevelParameteriv","","",N,N],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",N,N],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",N,N],[5,"GetTexParameterfv","","",N,N],[5,"GetTexParameteriv","","",N,N],[5,"GetTextureImage","","",N,N],[5,"GetTextureLevelParameterfv","","",N,N],[5,"GetTextureLevelParameteriv","","",N,N],[5,"GetTextureParameterIiv","","",N,N],[5,"GetTextureParameterIuiv","","",N,N],[5,"GetTextureParameterfv","","",N,N],[5,"GetTextureParameteriv","","",N,N],[5,"GetTextureSubImage","","",N,N],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",N,N],[5,"GetTransformFeedbacki64_v","","",N,N],[5,"GetTransformFeedbacki_v","","",N,N],[5,"GetTransformFeedbackiv","","",N,N],[5,"GetUniformBlockIndex","","",N,N],[5,"GetUniformIndices","","",N,N],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",N,N],[5,"GetUniformSubroutineuiv","","",N,N],[5,"GetUniformdv","","",N,N],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",N,N],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",N,N],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",N,N],[5,"GetVertexArrayIndexed64iv","","",N,N],[5,"GetVertexArrayIndexediv","","",N,N],[5,"GetVertexArrayiv","","",N,N],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",N,N],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",N,N],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",N,N],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",N,N],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",N,N],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",N,N],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",N,N],[5,"GetnColorTable","","",N,N],[5,"GetnCompressedTexImage","","",N,N],[5,"GetnConvolutionFilter","","",N,N],[5,"GetnHistogram","","",N,N],[5,"GetnMapdv","","",N,N],[5,"GetnMapfv","","",N,N],[5,"GetnMapiv","","",N,N],[5,"GetnMinmax","","",N,N],[5,"GetnPixelMapfv","","",N,N],[5,"GetnPixelMapuiv","","",N,N],[5,"GetnPixelMapusv","","",N,N],[5,"GetnPolygonStipple","","",N,N],[5,"GetnSeparableFilter","","",N,N],[5,"GetnTexImage","","",N,N],[5,"GetnUniformdv","","",N,N],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR",N,N],[5,"GetnUniformiv","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR",N,N],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",N,N],[5,"Hint","","",N,N],[5,"InvalidateBufferData","","",N,N],[5,"InvalidateBufferSubData","","",N,N],[5,"InvalidateFramebuffer","","",N,N],[5,"InvalidateNamedFramebufferData","","",N,N],[5,"InvalidateNamedFramebufferSubData","","",N,N],[5,"InvalidateSubFramebuffer","","",N,N],[5,"InvalidateTexImage","","",N,N],[5,"InvalidateTexSubImage","","",N,N],[5,"IsBuffer","","Fallbacks: IsBufferARB",N,[[["gluint"]],["glboolean"]]],[5,"IsEnabled","","",N,[[["glenum"]],["glboolean"]]],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",N,[[["glenum"],["gluint"]],["glboolean"]]],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",N,[[["gluint"]],["glboolean"]]],[5,"IsProgram","","",N,[[["gluint"]],["glboolean"]]],[5,"IsProgramPipeline","","",N,[[["gluint"]],["glboolean"]]],[5,"IsQuery","","Fallbacks: IsQueryARB",N,[[["gluint"]],["glboolean"]]],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",N,[[["gluint"]],["glboolean"]]],[5,"IsSampler","","",N,[[["gluint"]],["glboolean"]]],[5,"IsShader","","",N,[[["gluint"]],["glboolean"]]],[5,"IsSync","","Fallbacks: IsSyncAPPLE",N,[[["glsync"]],["glboolean"]]],[5,"IsTexture","","",N,[[["gluint"]],["glboolean"]]],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",N,[[["gluint"]],["glboolean"]]],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",N,[[["gluint"]],["glboolean"]]],[5,"LineWidth","","",N,N],[5,"LinkProgram","","Fallbacks: LinkProgramARB",N,N],[5,"LogicOp","","",N,N],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",N,N],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",N,N],[5,"MapNamedBuffer","","",N,N],[5,"MapNamedBufferRange","","",N,N],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",N,N],[5,"MemoryBarrierByRegion","","",N,N],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",N,N],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",N,N],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",N,N],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",N,N],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",N,N],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",N,N],[5,"MultiTexCoordP1ui","","",N,N],[5,"MultiTexCoordP1uiv","","",N,N],[5,"MultiTexCoordP2ui","","",N,N],[5,"MultiTexCoordP2uiv","","",N,N],[5,"MultiTexCoordP3ui","","",N,N],[5,"MultiTexCoordP3uiv","","",N,N],[5,"MultiTexCoordP4ui","","",N,N],[5,"MultiTexCoordP4uiv","","",N,N],[5,"NamedBufferData","","",N,N],[5,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",N,N],[5,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",N,N],[5,"NamedFramebufferDrawBuffer","","",N,N],[5,"NamedFramebufferDrawBuffers","","",N,N],[5,"NamedFramebufferParameteri","","",N,N],[5,"NamedFramebufferReadBuffer","","",N,N],[5,"NamedFramebufferRenderbuffer","","",N,N],[5,"NamedFramebufferTexture","","",N,N],[5,"NamedFramebufferTextureLayer","","",N,N],[5,"NamedRenderbufferStorage","","",N,N],[5,"NamedRenderbufferStorageMultisample","","",N,N],[5,"NormalP3ui","","",N,N],[5,"NormalP3uiv","","",N,N],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",N,N],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",N,N],[5,"PatchParameterfv","","",N,N],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",N,N],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",N,N],[5,"PixelStoref","","",N,N],[5,"PixelStorei","","",N,N],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",N,N],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",N,N],[5,"PointParameteri","","Fallbacks: PointParameteriNV",N,N],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",N,N],[5,"PointSize","","",N,N],[5,"PolygonMode","","Fallbacks: PolygonModeNV",N,N],[5,"PolygonOffset","","",N,N],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",N,N],[5,"PrimitiveRestartIndex","","",N,N],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",N,N],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",N,N],[5,"ProgramUniform1d","","",N,N],[5,"ProgramUniform1dv","","",N,N],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",N,N],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",N,N],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",N,N],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",N,N],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",N,N],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",N,N],[5,"ProgramUniform2d","","",N,N],[5,"ProgramUniform2dv","","",N,N],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",N,N],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",N,N],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",N,N],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",N,N],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",N,N],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",N,N],[5,"ProgramUniform3d","","",N,N],[5,"ProgramUniform3dv","","",N,N],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",N,N],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",N,N],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",N,N],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",N,N],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",N,N],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",N,N],[5,"ProgramUniform4d","","",N,N],[5,"ProgramUniform4dv","","",N,N],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",N,N],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",N,N],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",N,N],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",N,N],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",N,N],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",N,N],[5,"ProgramUniformMatrix2dv","","",N,N],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",N,N],[5,"ProgramUniformMatrix2x3dv","","",N,N],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",N,N],[5,"ProgramUniformMatrix2x4dv","","",N,N],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",N,N],[5,"ProgramUniformMatrix3dv","","",N,N],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",N,N],[5,"ProgramUniformMatrix3x2dv","","",N,N],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",N,N],[5,"ProgramUniformMatrix3x4dv","","",N,N],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",N,N],[5,"ProgramUniformMatrix4dv","","",N,N],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",N,N],[5,"ProgramUniformMatrix4x2dv","","",N,N],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",N,N],[5,"ProgramUniformMatrix4x3dv","","",N,N],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",N,N],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",N,N],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",N,N],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",N,N],[5,"ReadBuffer","","",N,N],[5,"ReadPixels","","",N,N],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",N,N],[5,"ReleaseShaderCompiler","","",N,N],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",N,N],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",N,N],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",N,N],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",N,N],[5,"SampleMaski","","",N,N],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",N,N],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",N,N],[5,"SamplerParameterf","","",N,N],[5,"SamplerParameterfv","","",N,N],[5,"SamplerParameteri","","",N,N],[5,"SamplerParameteriv","","",N,N],[5,"Scissor","","",N,N],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES",N,N],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES",N,N],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES",N,N],[5,"SecondaryColorP3ui","","",N,N],[5,"SecondaryColorP3uiv","","",N,N],[5,"ShaderBinary","","",N,N],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",N,N],[5,"ShaderStorageBlockBinding","","",N,N],[5,"StencilFunc","","",N,N],[5,"StencilFuncSeparate","","",N,N],[5,"StencilMask","","",N,N],[5,"StencilMaskSeparate","","",N,N],[5,"StencilOp","","",N,N],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",N,N],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",N,N],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",N,N],[5,"TexCoordP1ui","","",N,N],[5,"TexCoordP1uiv","","",N,N],[5,"TexCoordP2ui","","",N,N],[5,"TexCoordP2uiv","","",N,N],[5,"TexCoordP3ui","","",N,N],[5,"TexCoordP3uiv","","",N,N],[5,"TexCoordP4ui","","",N,N],[5,"TexCoordP4uiv","","",N,N],[5,"TexImage1D","","",N,N],[5,"TexImage2D","","",N,N],[5,"TexImage2DMultisample","","",N,N],[5,"TexImage3D","","Fallbacks: TexImage3DEXT",N,N],[5,"TexImage3DMultisample","","",N,N],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",N,N],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",N,N],[5,"TexParameterf","","",N,N],[5,"TexParameterfv","","",N,N],[5,"TexParameteri","","",N,N],[5,"TexParameteriv","","",N,N],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",N,N],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",N,N],[5,"TexStorage2DMultisample","","",N,N],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",N,N],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",N,N],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",N,N],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",N,N],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",N,N],[5,"TextureBarrier","","",N,N],[5,"TextureBuffer","","",N,N],[5,"TextureBufferRange","","",N,N],[5,"TextureParameterIiv","","",N,N],[5,"TextureParameterIuiv","","",N,N],[5,"TextureParameterf","","",N,N],[5,"TextureParameterfv","","",N,N],[5,"TextureParameteri","","",N,N],[5,"TextureParameteriv","","",N,N],[5,"TextureStorage1D","","",N,N],[5,"TextureStorage2D","","",N,N],[5,"TextureStorage2DMultisample","","",N,N],[5,"TextureStorage3D","","",N,N],[5,"TextureStorage3DMultisample","","",N,N],[5,"TextureSubImage1D","","",N,N],[5,"TextureSubImage2D","","",N,N],[5,"TextureSubImage3D","","",N,N],[5,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",N,N],[5,"TransformFeedbackBufferBase","","",N,N],[5,"TransformFeedbackBufferRange","","",N,N],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",N,N],[5,"Uniform1d","","",N,N],[5,"Uniform1dv","","",N,N],[5,"Uniform1f","","Fallbacks: Uniform1fARB",N,N],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",N,N],[5,"Uniform1i","","Fallbacks: Uniform1iARB",N,N],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",N,N],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",N,N],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",N,N],[5,"Uniform2d","","",N,N],[5,"Uniform2dv","","",N,N],[5,"Uniform2f","","Fallbacks: Uniform2fARB",N,N],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",N,N],[5,"Uniform2i","","Fallbacks: Uniform2iARB",N,N],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",N,N],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",N,N],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",N,N],[5,"Uniform3d","","",N,N],[5,"Uniform3dv","","",N,N],[5,"Uniform3f","","Fallbacks: Uniform3fARB",N,N],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",N,N],[5,"Uniform3i","","Fallbacks: Uniform3iARB",N,N],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",N,N],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",N,N],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",N,N],[5,"Uniform4d","","",N,N],[5,"Uniform4dv","","",N,N],[5,"Uniform4f","","Fallbacks: Uniform4fARB",N,N],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",N,N],[5,"Uniform4i","","Fallbacks: Uniform4iARB",N,N],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",N,N],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",N,N],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",N,N],[5,"UniformBlockBinding","","",N,N],[5,"UniformMatrix2dv","","",N,N],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",N,N],[5,"UniformMatrix2x3dv","","",N,N],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",N,N],[5,"UniformMatrix2x4dv","","",N,N],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",N,N],[5,"UniformMatrix3dv","","",N,N],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",N,N],[5,"UniformMatrix3x2dv","","",N,N],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",N,N],[5,"UniformMatrix3x4dv","","",N,N],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",N,N],[5,"UniformMatrix4dv","","",N,N],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",N,N],[5,"UniformMatrix4x2dv","","",N,N],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",N,N],[5,"UniformMatrix4x3dv","","",N,N],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",N,N],[5,"UniformSubroutinesuiv","","",N,N],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",N,[[["glenum"]],["glboolean"]]],[5,"UnmapNamedBuffer","","",N,[[["gluint"]],["glboolean"]]],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",N,N],[5,"UseProgramStages","","",N,N],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",N,N],[5,"ValidateProgramPipeline","","",N,N],[5,"VertexArrayAttribBinding","","",N,N],[5,"VertexArrayAttribFormat","","",N,N],[5,"VertexArrayAttribIFormat","","",N,N],[5,"VertexArrayAttribLFormat","","",N,N],[5,"VertexArrayBindingDivisor","","",N,N],[5,"VertexArrayElementBuffer","","",N,N],[5,"VertexArrayVertexBuffer","","",N,N],[5,"VertexArrayVertexBuffers","","",N,N],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",N,N],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",N,N],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",N,N],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",N,N],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",N,N],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",N,N],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",N,N],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",N,N],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",N,N],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",N,N],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",N,N],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",N,N],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",N,N],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",N,N],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",N,N],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",N,N],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",N,N],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",N,N],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",N,N],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",N,N],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",N,N],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",N,N],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",N,N],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",N,N],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",N,N],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",N,N],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",N,N],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",N,N],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",N,N],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",N,N],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",N,N],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",N,N],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",N,N],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",N,N],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",N,N],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",N,N],[5,"VertexAttribBinding","","",N,N],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",N,N],[5,"VertexAttribFormat","","",N,N],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",N,N],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",N,N],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",N,N],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",N,N],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",N,N],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",N,N],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",N,N],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",N,N],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",N,N],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",N,N],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",N,N],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",N,N],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",N,N],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",N,N],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",N,N],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",N,N],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",N,N],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",N,N],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",N,N],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",N,N],[5,"VertexAttribIFormat","","",N,N],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",N,N],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",N,N],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",N,N],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",N,N],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",N,N],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",N,N],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",N,N],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",N,N],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",N,N],[5,"VertexAttribLFormat","","",N,N],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",N,N],[5,"VertexAttribP1ui","","",N,N],[5,"VertexAttribP1uiv","","",N,N],[5,"VertexAttribP2ui","","",N,N],[5,"VertexAttribP2uiv","","",N,N],[5,"VertexAttribP3ui","","",N,N],[5,"VertexAttribP3uiv","","",N,N],[5,"VertexAttribP4ui","","",N,N],[5,"VertexAttribP4uiv","","",N,N],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",N,N],[5,"VertexBindingDivisor","","",N,N],[5,"VertexP2ui","","",N,N],[5,"VertexP2uiv","","",N,N],[5,"VertexP3ui","","",N,N],[5,"VertexP3uiv","","",N,N],[5,"VertexP4ui","","",N,N],[5,"VertexP4uiv","","",N,N],[5,"Viewport","","",N,N],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES",N,N],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV",N,N],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV",N,N],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",N,N],[5,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the use of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`. ~~~ignore gl::load_with(|s| glfw.get_proc_address(s)); ~~~",N,[[["f"]]]],[0,"types","","",N,N],[4,"__GLsync","gl::types","",N,N],[4,"_cl_context","","",N,N],[4,"_cl_event","","",N,N],[6,"GLenum","","",N,N],[6,"GLboolean","","",N,N],[6,"GLbitfield","","",N,N],[6,"GLvoid","","",N,N],[6,"GLbyte","","",N,N],[6,"GLshort","","",N,N],[6,"GLint","","",N,N],[6,"GLclampx","","",N,N],[6,"GLubyte","","",N,N],[6,"GLushort","","",N,N],[6,"GLuint","","",N,N],[6,"GLsizei","","",N,N],[6,"GLfloat","","",N,N],[6,"GLclampf","","",N,N],[6,"GLdouble","","",N,N],[6,"GLclampd","","",N,N],[6,"GLeglImageOES","","",N,N],[6,"GLchar","","",N,N],[6,"GLcharARB","","",N,N],[6,"GLhandleARB","","",N,N],[6,"GLhalfARB","","",N,N],[6,"GLhalf","","",N,N],[6,"GLfixed","","",N,N],[6,"GLintptr","","",N,N],[6,"GLsizeiptr","","",N,N],[6,"GLint64","","",N,N],[6,"GLuint64","","",N,N],[6,"GLintptrARB","","",N,N],[6,"GLsizeiptrARB","","",N,N],[6,"GLint64EXT","","",N,N],[6,"GLuint64EXT","","",N,N],[6,"GLsync","","",N,N],[6,"GLDEBUGPROC","","",N,N],[6,"GLDEBUGPROCARB","","",N,N],[6,"GLDEBUGPROCKHR","","",N,N],[6,"GLDEBUGPROCAMD","","",N,N],[6,"GLhalfNV","","",N,N],[6,"GLvdpauSurfaceNV","","",N,N],[0,"ActiveShaderProgram","gl","",N,N],[5,"is_loaded","gl::ActiveShaderProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ActiveTexture","gl","",N,N],[5,"is_loaded","gl::ActiveTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"AttachShader","gl","",N,N],[5,"is_loaded","gl::AttachShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginConditionalRender","gl","",N,N],[5,"is_loaded","gl::BeginConditionalRender","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginQuery","gl","",N,N],[5,"is_loaded","gl::BeginQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginQueryIndexed","gl","",N,N],[5,"is_loaded","gl::BeginQueryIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginTransformFeedback","gl","",N,N],[5,"is_loaded","gl::BeginTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindAttribLocation","gl","",N,N],[5,"is_loaded","gl::BindAttribLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffer","gl","",N,N],[5,"is_loaded","gl::BindBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBufferBase","gl","",N,N],[5,"is_loaded","gl::BindBufferBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBufferRange","gl","",N,N],[5,"is_loaded","gl::BindBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffersBase","gl","",N,N],[5,"is_loaded","gl::BindBuffersBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffersRange","gl","",N,N],[5,"is_loaded","gl::BindBuffersRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFragDataLocation","gl","",N,N],[5,"is_loaded","gl::BindFragDataLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFragDataLocationIndexed","gl","",N,N],[5,"is_loaded","gl::BindFragDataLocationIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFramebuffer","gl","",N,N],[5,"is_loaded","gl::BindFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindImageTexture","gl","",N,N],[5,"is_loaded","gl::BindImageTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindImageTextures","gl","",N,N],[5,"is_loaded","gl::BindImageTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindProgramPipeline","gl","",N,N],[5,"is_loaded","gl::BindProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindRenderbuffer","gl","",N,N],[5,"is_loaded","gl::BindRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindSampler","gl","",N,N],[5,"is_loaded","gl::BindSampler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindSamplers","gl","",N,N],[5,"is_loaded","gl::BindSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTexture","gl","",N,N],[5,"is_loaded","gl::BindTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTextureUnit","gl","",N,N],[5,"is_loaded","gl::BindTextureUnit","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTextures","gl","",N,N],[5,"is_loaded","gl::BindTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTransformFeedback","gl","",N,N],[5,"is_loaded","gl::BindTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexArray","gl","",N,N],[5,"is_loaded","gl::BindVertexArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexBuffer","gl","",N,N],[5,"is_loaded","gl::BindVertexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexBuffers","gl","",N,N],[5,"is_loaded","gl::BindVertexBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendColor","gl","",N,N],[5,"is_loaded","gl::BlendColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquation","gl","",N,N],[5,"is_loaded","gl::BlendEquation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationSeparate","gl","",N,N],[5,"is_loaded","gl::BlendEquationSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationSeparatei","gl","",N,N],[5,"is_loaded","gl::BlendEquationSeparatei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationi","gl","",N,N],[5,"is_loaded","gl::BlendEquationi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFunc","gl","",N,N],[5,"is_loaded","gl::BlendFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFuncSeparate","gl","",N,N],[5,"is_loaded","gl::BlendFuncSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFuncSeparatei","gl","",N,N],[5,"is_loaded","gl::BlendFuncSeparatei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFunci","gl","",N,N],[5,"is_loaded","gl::BlendFunci","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlitFramebuffer","gl","",N,N],[5,"is_loaded","gl::BlitFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlitNamedFramebuffer","gl","",N,N],[5,"is_loaded","gl::BlitNamedFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferData","gl","",N,N],[5,"is_loaded","gl::BufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferStorage","gl","",N,N],[5,"is_loaded","gl::BufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferSubData","gl","",N,N],[5,"is_loaded","gl::BufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CheckFramebufferStatus","gl","",N,N],[5,"is_loaded","gl::CheckFramebufferStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CheckNamedFramebufferStatus","gl","",N,N],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClampColor","gl","",N,N],[5,"is_loaded","gl::ClampColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Clear","gl","",N,N],[5,"is_loaded","gl::Clear","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferData","gl","",N,N],[5,"is_loaded","gl::ClearBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferSubData","gl","",N,N],[5,"is_loaded","gl::ClearBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferfi","gl","",N,N],[5,"is_loaded","gl::ClearBufferfi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferfv","gl","",N,N],[5,"is_loaded","gl::ClearBufferfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferiv","gl","",N,N],[5,"is_loaded","gl::ClearBufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferuiv","gl","",N,N],[5,"is_loaded","gl::ClearBufferuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearColor","gl","",N,N],[5,"is_loaded","gl::ClearColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearDepth","gl","",N,N],[5,"is_loaded","gl::ClearDepth","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearDepthf","gl","",N,N],[5,"is_loaded","gl::ClearDepthf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedBufferData","gl","",N,N],[5,"is_loaded","gl::ClearNamedBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::ClearNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferfi","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferfi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferfv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferiv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferuiv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearStencil","gl","",N,N],[5,"is_loaded","gl::ClearStencil","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearTexImage","gl","",N,N],[5,"is_loaded","gl::ClearTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearTexSubImage","gl","",N,N],[5,"is_loaded","gl::ClearTexSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClientWaitSync","gl","",N,N],[5,"is_loaded","gl::ClientWaitSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClipControl","gl","",N,N],[5,"is_loaded","gl::ClipControl","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorMask","gl","",N,N],[5,"is_loaded","gl::ColorMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorMaski","gl","",N,N],[5,"is_loaded","gl::ColorMaski","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP3ui","gl","",N,N],[5,"is_loaded","gl::ColorP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP3uiv","gl","",N,N],[5,"is_loaded","gl::ColorP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP4ui","gl","",N,N],[5,"is_loaded","gl::ColorP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP4uiv","gl","",N,N],[5,"is_loaded","gl::ColorP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompileShader","gl","",N,N],[5,"is_loaded","gl::CompileShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyBufferSubData","gl","",N,N],[5,"is_loaded","gl::CopyBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyImageSubData","gl","",N,N],[5,"is_loaded","gl::CopyImageSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::CopyNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage3D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateBuffers","gl","",N,N],[5,"is_loaded","gl::CreateBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateFramebuffers","gl","",N,N],[5,"is_loaded","gl::CreateFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateProgram","gl","",N,N],[5,"is_loaded","gl::CreateProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateProgramPipelines","gl","",N,N],[5,"is_loaded","gl::CreateProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateQueries","gl","",N,N],[5,"is_loaded","gl::CreateQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateRenderbuffers","gl","",N,N],[5,"is_loaded","gl::CreateRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateSamplers","gl","",N,N],[5,"is_loaded","gl::CreateSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateShader","gl","",N,N],[5,"is_loaded","gl::CreateShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateShaderProgramv","gl","",N,N],[5,"is_loaded","gl::CreateShaderProgramv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateTextures","gl","",N,N],[5,"is_loaded","gl::CreateTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::CreateTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateVertexArrays","gl","",N,N],[5,"is_loaded","gl::CreateVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CullFace","gl","",N,N],[5,"is_loaded","gl::CullFace","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageCallback","gl","",N,N],[5,"is_loaded","gl::DebugMessageCallback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageControl","gl","",N,N],[5,"is_loaded","gl::DebugMessageControl","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageInsert","gl","",N,N],[5,"is_loaded","gl::DebugMessageInsert","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteBuffers","gl","",N,N],[5,"is_loaded","gl::DeleteBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteFramebuffers","gl","",N,N],[5,"is_loaded","gl::DeleteFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteProgram","gl","",N,N],[5,"is_loaded","gl::DeleteProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteProgramPipelines","gl","",N,N],[5,"is_loaded","gl::DeleteProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteQueries","gl","",N,N],[5,"is_loaded","gl::DeleteQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteRenderbuffers","gl","",N,N],[5,"is_loaded","gl::DeleteRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteSamplers","gl","",N,N],[5,"is_loaded","gl::DeleteSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteShader","gl","",N,N],[5,"is_loaded","gl::DeleteShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteSync","gl","",N,N],[5,"is_loaded","gl::DeleteSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteTextures","gl","",N,N],[5,"is_loaded","gl::DeleteTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::DeleteTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteVertexArrays","gl","",N,N],[5,"is_loaded","gl::DeleteVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthFunc","gl","",N,N],[5,"is_loaded","gl::DepthFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthMask","gl","",N,N],[5,"is_loaded","gl::DepthMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRange","gl","",N,N],[5,"is_loaded","gl::DepthRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangeArrayv","gl","",N,N],[5,"is_loaded","gl::DepthRangeArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangeIndexed","gl","",N,N],[5,"is_loaded","gl::DepthRangeIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangef","gl","",N,N],[5,"is_loaded","gl::DepthRangef","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DetachShader","gl","",N,N],[5,"is_loaded","gl::DetachShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Disable","gl","",N,N],[5,"is_loaded","gl::Disable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DisableVertexArrayAttrib","gl","",N,N],[5,"is_loaded","gl::DisableVertexArrayAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DisableVertexAttribArray","gl","",N,N],[5,"is_loaded","gl::DisableVertexAttribArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Disablei","gl","",N,N],[5,"is_loaded","gl::Disablei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DispatchCompute","gl","",N,N],[5,"is_loaded","gl::DispatchCompute","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DispatchComputeIndirect","gl","",N,N],[5,"is_loaded","gl::DispatchComputeIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArrays","gl","",N,N],[5,"is_loaded","gl::DrawArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysIndirect","gl","",N,N],[5,"is_loaded","gl::DrawArraysIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysInstanced","gl","",N,N],[5,"is_loaded","gl::DrawArraysInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysInstancedBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawBuffer","gl","",N,N],[5,"is_loaded","gl::DrawBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawBuffers","gl","",N,N],[5,"is_loaded","gl::DrawBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElements","gl","",N,N],[5,"is_loaded","gl::DrawElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsIndirect","gl","",N,N],[5,"is_loaded","gl::DrawElementsIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstanced","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawRangeElements","gl","",N,N],[5,"is_loaded","gl::DrawRangeElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawRangeElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedback","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackInstanced","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackStream","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackStream","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackStreamInstanced","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Enable","gl","",N,N],[5,"is_loaded","gl::Enable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EnableVertexArrayAttrib","gl","",N,N],[5,"is_loaded","gl::EnableVertexArrayAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EnableVertexAttribArray","gl","",N,N],[5,"is_loaded","gl::EnableVertexAttribArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Enablei","gl","",N,N],[5,"is_loaded","gl::Enablei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndConditionalRender","gl","",N,N],[5,"is_loaded","gl::EndConditionalRender","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndQuery","gl","",N,N],[5,"is_loaded","gl::EndQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndQueryIndexed","gl","",N,N],[5,"is_loaded","gl::EndQueryIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndTransformFeedback","gl","",N,N],[5,"is_loaded","gl::EndTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FenceSync","gl","",N,N],[5,"is_loaded","gl::FenceSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Finish","gl","",N,N],[5,"is_loaded","gl::Finish","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Flush","gl","",N,N],[5,"is_loaded","gl::Flush","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FlushMappedBufferRange","gl","",N,N],[5,"is_loaded","gl::FlushMappedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FlushMappedNamedBufferRange","gl","",N,N],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferParameteri","gl","",N,N],[5,"is_loaded","gl::FramebufferParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferRenderbuffer","gl","",N,N],[5,"is_loaded","gl::FramebufferRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture1D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture2D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture3D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTextureLayer","gl","",N,N],[5,"is_loaded","gl::FramebufferTextureLayer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FrontFace","gl","",N,N],[5,"is_loaded","gl::FrontFace","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenBuffers","gl","",N,N],[5,"is_loaded","gl::GenBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenFramebuffers","gl","",N,N],[5,"is_loaded","gl::GenFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenProgramPipelines","gl","",N,N],[5,"is_loaded","gl::GenProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenQueries","gl","",N,N],[5,"is_loaded","gl::GenQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenRenderbuffers","gl","",N,N],[5,"is_loaded","gl::GenRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenSamplers","gl","",N,N],[5,"is_loaded","gl::GenSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenTextures","gl","",N,N],[5,"is_loaded","gl::GenTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::GenTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenVertexArrays","gl","",N,N],[5,"is_loaded","gl::GenVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenerateMipmap","gl","",N,N],[5,"is_loaded","gl::GenerateMipmap","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenerateTextureMipmap","gl","",N,N],[5,"is_loaded","gl::GenerateTextureMipmap","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveAtomicCounterBufferiv","gl","",N,N],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveAttrib","gl","",N,N],[5,"is_loaded","gl::GetActiveAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineName","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineUniformName","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineUniformiv","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniform","gl","",N,N],[5,"is_loaded","gl::GetActiveUniform","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformBlockName","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformBlockName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformBlockiv","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformBlockiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformName","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformsiv","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformsiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetAttachedShaders","gl","",N,N],[5,"is_loaded","gl::GetAttachedShaders","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetAttribLocation","gl","",N,N],[5,"is_loaded","gl::GetAttribLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBooleani_v","gl","",N,N],[5,"is_loaded","gl::GetBooleani_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBooleanv","gl","",N,N],[5,"is_loaded","gl::GetBooleanv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferParameteri64v","gl","",N,N],[5,"is_loaded","gl::GetBufferParameteri64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetBufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferPointerv","gl","",N,N],[5,"is_loaded","gl::GetBufferPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferSubData","gl","",N,N],[5,"is_loaded","gl::GetBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTexImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTextureImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTextureImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTextureSubImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTextureSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDebugMessageLog","gl","",N,N],[5,"is_loaded","gl::GetDebugMessageLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDoublei_v","gl","",N,N],[5,"is_loaded","gl::GetDoublei_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDoublev","gl","",N,N],[5,"is_loaded","gl::GetDoublev","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetError","gl","",N,N],[5,"is_loaded","gl::GetError","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFloati_v","gl","",N,N],[5,"is_loaded","gl::GetFloati_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFloatv","gl","",N,N],[5,"is_loaded","gl::GetFloatv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFragDataIndex","gl","",N,N],[5,"is_loaded","gl::GetFragDataIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFragDataLocation","gl","",N,N],[5,"is_loaded","gl::GetFragDataLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFramebufferAttachmentParameteriv","gl","",N,N],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFramebufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetFramebufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetGraphicsResetStatus","gl","",N,N],[5,"is_loaded","gl::GetGraphicsResetStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInteger64i_v","gl","",N,N],[5,"is_loaded","gl::GetInteger64i_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInteger64v","gl","",N,N],[5,"is_loaded","gl::GetInteger64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetIntegeri_v","gl","",N,N],[5,"is_loaded","gl::GetIntegeri_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetIntegerv","gl","",N,N],[5,"is_loaded","gl::GetIntegerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInternalformati64v","gl","",N,N],[5,"is_loaded","gl::GetInternalformati64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInternalformativ","gl","",N,N],[5,"is_loaded","gl::GetInternalformativ","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetMultisamplefv","gl","",N,N],[5,"is_loaded","gl::GetMultisamplefv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferParameteri64v","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferPointerv","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedFramebufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedRenderbufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetObjectLabel","gl","",N,N],[5,"is_loaded","gl::GetObjectLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetObjectPtrLabel","gl","",N,N],[5,"is_loaded","gl::GetObjectPtrLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetPointerv","gl","",N,N],[5,"is_loaded","gl::GetPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramBinary","gl","",N,N],[5,"is_loaded","gl::GetProgramBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramInfoLog","gl","",N,N],[5,"is_loaded","gl::GetProgramInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramInterfaceiv","gl","",N,N],[5,"is_loaded","gl::GetProgramInterfaceiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramPipelineInfoLog","gl","",N,N],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramPipelineiv","gl","",N,N],[5,"is_loaded","gl::GetProgramPipelineiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceIndex","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceLocation","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceLocationIndex","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceName","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceiv","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramStageiv","gl","",N,N],[5,"is_loaded","gl::GetProgramStageiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramiv","gl","",N,N],[5,"is_loaded","gl::GetProgramiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjecti64v","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectiv","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectui64v","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectuiv","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryIndexediv","gl","",N,N],[5,"is_loaded","gl::GetQueryIndexediv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjecti64v","gl","",N,N],[5,"is_loaded","gl::GetQueryObjecti64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectiv","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectui64v","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectui64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectuiv","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryiv","gl","",N,N],[5,"is_loaded","gl::GetQueryiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetRenderbufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetRenderbufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterfv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameteriv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderInfoLog","gl","",N,N],[5,"is_loaded","gl::GetShaderInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderPrecisionFormat","gl","",N,N],[5,"is_loaded","gl::GetShaderPrecisionFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderSource","gl","",N,N],[5,"is_loaded","gl::GetShaderSource","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderiv","gl","",N,N],[5,"is_loaded","gl::GetShaderiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetString","gl","",N,N],[5,"is_loaded","gl::GetString","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetStringi","gl","",N,N],[5,"is_loaded","gl::GetStringi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSubroutineIndex","gl","",N,N],[5,"is_loaded","gl::GetSubroutineIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSubroutineUniformLocation","gl","",N,N],[5,"is_loaded","gl::GetSubroutineUniformLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSynciv","gl","",N,N],[5,"is_loaded","gl::GetSynciv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexImage","gl","",N,N],[5,"is_loaded","gl::GetTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexLevelParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTexLevelParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexLevelParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTexLevelParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTexParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureImage","gl","",N,N],[5,"is_loaded","gl::GetTextureImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureLevelParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTextureLevelParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureLevelParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTextureLevelParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureSubImage","gl","",N,N],[5,"is_loaded","gl::GetTextureSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbackVarying","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbackVarying","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbacki64_v","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbacki_v","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbacki_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbackiv","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbackiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformBlockIndex","gl","",N,N],[5,"is_loaded","gl::GetUniformBlockIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformIndices","gl","",N,N],[5,"is_loaded","gl::GetUniformIndices","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformLocation","gl","",N,N],[5,"is_loaded","gl::GetUniformLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformSubroutineuiv","gl","",N,N],[5,"is_loaded","gl::GetUniformSubroutineuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformdv","gl","",N,N],[5,"is_loaded","gl::GetUniformdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformfv","gl","",N,N],[5,"is_loaded","gl::GetUniformfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformiv","gl","",N,N],[5,"is_loaded","gl::GetUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformuiv","gl","",N,N],[5,"is_loaded","gl::GetUniformuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayIndexed64iv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayIndexediv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayIndexediv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayiv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribIiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribIuiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribLdv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribLdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribPointerv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribdv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribfv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnColorTable","gl","",N,N],[5,"is_loaded","gl::GetnColorTable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnCompressedTexImage","gl","",N,N],[5,"is_loaded","gl::GetnCompressedTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnConvolutionFilter","gl","",N,N],[5,"is_loaded","gl::GetnConvolutionFilter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnHistogram","gl","",N,N],[5,"is_loaded","gl::GetnHistogram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapdv","gl","",N,N],[5,"is_loaded","gl::GetnMapdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapfv","gl","",N,N],[5,"is_loaded","gl::GetnMapfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapiv","gl","",N,N],[5,"is_loaded","gl::GetnMapiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMinmax","gl","",N,N],[5,"is_loaded","gl::GetnMinmax","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapfv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapuiv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapusv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapusv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPolygonStipple","gl","",N,N],[5,"is_loaded","gl::GetnPolygonStipple","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnSeparableFilter","gl","",N,N],[5,"is_loaded","gl::GetnSeparableFilter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnTexImage","gl","",N,N],[5,"is_loaded","gl::GetnTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformdv","gl","",N,N],[5,"is_loaded","gl::GetnUniformdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformfv","gl","",N,N],[5,"is_loaded","gl::GetnUniformfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformiv","gl","",N,N],[5,"is_loaded","gl::GetnUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformuiv","gl","",N,N],[5,"is_loaded","gl::GetnUniformuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Hint","gl","",N,N],[5,"is_loaded","gl::Hint","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateBufferData","gl","",N,N],[5,"is_loaded","gl::InvalidateBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateBufferSubData","gl","",N,N],[5,"is_loaded","gl::InvalidateBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateFramebuffer","gl","",N,N],[5,"is_loaded","gl::InvalidateFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateNamedFramebufferData","gl","",N,N],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateNamedFramebufferSubData","gl","",N,N],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateSubFramebuffer","gl","",N,N],[5,"is_loaded","gl::InvalidateSubFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateTexImage","gl","",N,N],[5,"is_loaded","gl::InvalidateTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateTexSubImage","gl","",N,N],[5,"is_loaded","gl::InvalidateTexSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsBuffer","gl","",N,N],[5,"is_loaded","gl::IsBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsEnabled","gl","",N,N],[5,"is_loaded","gl::IsEnabled","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsEnabledi","gl","",N,N],[5,"is_loaded","gl::IsEnabledi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsFramebuffer","gl","",N,N],[5,"is_loaded","gl::IsFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsProgram","gl","",N,N],[5,"is_loaded","gl::IsProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsProgramPipeline","gl","",N,N],[5,"is_loaded","gl::IsProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsQuery","gl","",N,N],[5,"is_loaded","gl::IsQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsRenderbuffer","gl","",N,N],[5,"is_loaded","gl::IsRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsSampler","gl","",N,N],[5,"is_loaded","gl::IsSampler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsShader","gl","",N,N],[5,"is_loaded","gl::IsShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsSync","gl","",N,N],[5,"is_loaded","gl::IsSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsTexture","gl","",N,N],[5,"is_loaded","gl::IsTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsTransformFeedback","gl","",N,N],[5,"is_loaded","gl::IsTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsVertexArray","gl","",N,N],[5,"is_loaded","gl::IsVertexArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LineWidth","gl","",N,N],[5,"is_loaded","gl::LineWidth","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LinkProgram","gl","",N,N],[5,"is_loaded","gl::LinkProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LogicOp","gl","",N,N],[5,"is_loaded","gl::LogicOp","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapBuffer","gl","",N,N],[5,"is_loaded","gl::MapBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapBufferRange","gl","",N,N],[5,"is_loaded","gl::MapBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapNamedBuffer","gl","",N,N],[5,"is_loaded","gl::MapNamedBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapNamedBufferRange","gl","",N,N],[5,"is_loaded","gl::MapNamedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MemoryBarrier","gl","",N,N],[5,"is_loaded","gl::MemoryBarrier","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MemoryBarrierByRegion","gl","",N,N],[5,"is_loaded","gl::MemoryBarrierByRegion","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MinSampleShading","gl","",N,N],[5,"is_loaded","gl::MinSampleShading","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawArrays","gl","",N,N],[5,"is_loaded","gl::MultiDrawArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawArraysIndirect","gl","",N,N],[5,"is_loaded","gl::MultiDrawArraysIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElements","gl","",N,N],[5,"is_loaded","gl::MultiDrawElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElementsIndirect","gl","",N,N],[5,"is_loaded","gl::MultiDrawElementsIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP1ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP1uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP2ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP2uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP3ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP3uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP4ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP4uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferData","gl","",N,N],[5,"is_loaded","gl::NamedBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferStorage","gl","",N,N],[5,"is_loaded","gl::NamedBufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::NamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferDrawBuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferDrawBuffers","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferParameteri","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferReadBuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferRenderbuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferTexture","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferTextureLayer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedRenderbufferStorage","gl","",N,N],[5,"is_loaded","gl::NamedRenderbufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedRenderbufferStorageMultisample","gl","",N,N],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NormalP3ui","gl","",N,N],[5,"is_loaded","gl::NormalP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NormalP3uiv","gl","",N,N],[5,"is_loaded","gl::NormalP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ObjectLabel","gl","",N,N],[5,"is_loaded","gl::ObjectLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ObjectPtrLabel","gl","",N,N],[5,"is_loaded","gl::ObjectPtrLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PatchParameterfv","gl","",N,N],[5,"is_loaded","gl::PatchParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PatchParameteri","gl","",N,N],[5,"is_loaded","gl::PatchParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PauseTransformFeedback","gl","",N,N],[5,"is_loaded","gl::PauseTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PixelStoref","gl","",N,N],[5,"is_loaded","gl::PixelStoref","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PixelStorei","gl","",N,N],[5,"is_loaded","gl::PixelStorei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameterf","gl","",N,N],[5,"is_loaded","gl::PointParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameterfv","gl","",N,N],[5,"is_loaded","gl::PointParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameteri","gl","",N,N],[5,"is_loaded","gl::PointParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameteriv","gl","",N,N],[5,"is_loaded","gl::PointParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointSize","gl","",N,N],[5,"is_loaded","gl::PointSize","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PolygonMode","gl","",N,N],[5,"is_loaded","gl::PolygonMode","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PolygonOffset","gl","",N,N],[5,"is_loaded","gl::PolygonOffset","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PopDebugGroup","gl","",N,N],[5,"is_loaded","gl::PopDebugGroup","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PrimitiveRestartIndex","gl","",N,N],[5,"is_loaded","gl::PrimitiveRestartIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramBinary","gl","",N,N],[5,"is_loaded","gl::ProgramBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramParameteri","gl","",N,N],[5,"is_loaded","gl::ProgramParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProvokingVertex","gl","",N,N],[5,"is_loaded","gl::ProvokingVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PushDebugGroup","gl","",N,N],[5,"is_loaded","gl::PushDebugGroup","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"QueryCounter","gl","",N,N],[5,"is_loaded","gl::QueryCounter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadBuffer","gl","",N,N],[5,"is_loaded","gl::ReadBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadPixels","gl","",N,N],[5,"is_loaded","gl::ReadPixels","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadnPixels","gl","",N,N],[5,"is_loaded","gl::ReadnPixels","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReleaseShaderCompiler","gl","",N,N],[5,"is_loaded","gl::ReleaseShaderCompiler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"RenderbufferStorage","gl","",N,N],[5,"is_loaded","gl::RenderbufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"RenderbufferStorageMultisample","gl","",N,N],[5,"is_loaded","gl::RenderbufferStorageMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ResumeTransformFeedback","gl","",N,N],[5,"is_loaded","gl::ResumeTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SampleCoverage","gl","",N,N],[5,"is_loaded","gl::SampleCoverage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SampleMaski","gl","",N,N],[5,"is_loaded","gl::SampleMaski","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterIiv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterIuiv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterf","gl","",N,N],[5,"is_loaded","gl::SamplerParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterfv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameteri","gl","",N,N],[5,"is_loaded","gl::SamplerParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameteriv","gl","",N,N],[5,"is_loaded","gl::SamplerParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Scissor","gl","",N,N],[5,"is_loaded","gl::Scissor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorArrayv","gl","",N,N],[5,"is_loaded","gl::ScissorArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorIndexed","gl","",N,N],[5,"is_loaded","gl::ScissorIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorIndexedv","gl","",N,N],[5,"is_loaded","gl::ScissorIndexedv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SecondaryColorP3ui","gl","",N,N],[5,"is_loaded","gl::SecondaryColorP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SecondaryColorP3uiv","gl","",N,N],[5,"is_loaded","gl::SecondaryColorP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderBinary","gl","",N,N],[5,"is_loaded","gl::ShaderBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderSource","gl","",N,N],[5,"is_loaded","gl::ShaderSource","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderStorageBlockBinding","gl","",N,N],[5,"is_loaded","gl::ShaderStorageBlockBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilFunc","gl","",N,N],[5,"is_loaded","gl::StencilFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilFuncSeparate","gl","",N,N],[5,"is_loaded","gl::StencilFuncSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilMask","gl","",N,N],[5,"is_loaded","gl::StencilMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilMaskSeparate","gl","",N,N],[5,"is_loaded","gl::StencilMaskSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilOp","gl","",N,N],[5,"is_loaded","gl::StencilOp","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilOpSeparate","gl","",N,N],[5,"is_loaded","gl::StencilOpSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexBuffer","gl","",N,N],[5,"is_loaded","gl::TexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexBufferRange","gl","",N,N],[5,"is_loaded","gl::TexBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP1ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP1uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP2ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP2uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP3ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP3uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP4ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP4uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage1D","gl","",N,N],[5,"is_loaded","gl::TexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage2D","gl","",N,N],[5,"is_loaded","gl::TexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TexImage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage3D","gl","",N,N],[5,"is_loaded","gl::TexImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TexImage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterIiv","gl","",N,N],[5,"is_loaded","gl::TexParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterIuiv","gl","",N,N],[5,"is_loaded","gl::TexParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterf","gl","",N,N],[5,"is_loaded","gl::TexParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterfv","gl","",N,N],[5,"is_loaded","gl::TexParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameteri","gl","",N,N],[5,"is_loaded","gl::TexParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameteriv","gl","",N,N],[5,"is_loaded","gl::TexParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage1D","gl","",N,N],[5,"is_loaded","gl::TexStorage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage2D","gl","",N,N],[5,"is_loaded","gl::TexStorage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TexStorage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage3D","gl","",N,N],[5,"is_loaded","gl::TexStorage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TexStorage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage1D","gl","",N,N],[5,"is_loaded","gl::TexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage2D","gl","",N,N],[5,"is_loaded","gl::TexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage3D","gl","",N,N],[5,"is_loaded","gl::TexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBarrier","gl","",N,N],[5,"is_loaded","gl::TextureBarrier","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBuffer","gl","",N,N],[5,"is_loaded","gl::TextureBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBufferRange","gl","",N,N],[5,"is_loaded","gl::TextureBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterIiv","gl","",N,N],[5,"is_loaded","gl::TextureParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterIuiv","gl","",N,N],[5,"is_loaded","gl::TextureParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterf","gl","",N,N],[5,"is_loaded","gl::TextureParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterfv","gl","",N,N],[5,"is_loaded","gl::TextureParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameteri","gl","",N,N],[5,"is_loaded","gl::TextureParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameteriv","gl","",N,N],[5,"is_loaded","gl::TextureParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage1D","gl","",N,N],[5,"is_loaded","gl::TextureStorage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage2D","gl","",N,N],[5,"is_loaded","gl::TextureStorage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TextureStorage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage3D","gl","",N,N],[5,"is_loaded","gl::TextureStorage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TextureStorage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureView","gl","",N,N],[5,"is_loaded","gl::TextureView","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackBufferBase","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackBufferBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackBufferRange","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackVaryings","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackVaryings","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1d","gl","",N,N],[5,"is_loaded","gl::Uniform1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1dv","gl","",N,N],[5,"is_loaded","gl::Uniform1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1f","gl","",N,N],[5,"is_loaded","gl::Uniform1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1fv","gl","",N,N],[5,"is_loaded","gl::Uniform1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1i","gl","",N,N],[5,"is_loaded","gl::Uniform1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1iv","gl","",N,N],[5,"is_loaded","gl::Uniform1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1ui","gl","",N,N],[5,"is_loaded","gl::Uniform1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1uiv","gl","",N,N],[5,"is_loaded","gl::Uniform1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2d","gl","",N,N],[5,"is_loaded","gl::Uniform2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2dv","gl","",N,N],[5,"is_loaded","gl::Uniform2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2f","gl","",N,N],[5,"is_loaded","gl::Uniform2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2fv","gl","",N,N],[5,"is_loaded","gl::Uniform2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2i","gl","",N,N],[5,"is_loaded","gl::Uniform2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2iv","gl","",N,N],[5,"is_loaded","gl::Uniform2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2ui","gl","",N,N],[5,"is_loaded","gl::Uniform2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2uiv","gl","",N,N],[5,"is_loaded","gl::Uniform2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3d","gl","",N,N],[5,"is_loaded","gl::Uniform3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3dv","gl","",N,N],[5,"is_loaded","gl::Uniform3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3f","gl","",N,N],[5,"is_loaded","gl::Uniform3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3fv","gl","",N,N],[5,"is_loaded","gl::Uniform3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3i","gl","",N,N],[5,"is_loaded","gl::Uniform3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3iv","gl","",N,N],[5,"is_loaded","gl::Uniform3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3ui","gl","",N,N],[5,"is_loaded","gl::Uniform3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3uiv","gl","",N,N],[5,"is_loaded","gl::Uniform3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4d","gl","",N,N],[5,"is_loaded","gl::Uniform4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4dv","gl","",N,N],[5,"is_loaded","gl::Uniform4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4f","gl","",N,N],[5,"is_loaded","gl::Uniform4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4fv","gl","",N,N],[5,"is_loaded","gl::Uniform4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4i","gl","",N,N],[5,"is_loaded","gl::Uniform4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4iv","gl","",N,N],[5,"is_loaded","gl::Uniform4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4ui","gl","",N,N],[5,"is_loaded","gl::Uniform4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4uiv","gl","",N,N],[5,"is_loaded","gl::Uniform4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformBlockBinding","gl","",N,N],[5,"is_loaded","gl::UniformBlockBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformSubroutinesuiv","gl","",N,N],[5,"is_loaded","gl::UniformSubroutinesuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UnmapBuffer","gl","",N,N],[5,"is_loaded","gl::UnmapBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UnmapNamedBuffer","gl","",N,N],[5,"is_loaded","gl::UnmapNamedBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UseProgram","gl","",N,N],[5,"is_loaded","gl::UseProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UseProgramStages","gl","",N,N],[5,"is_loaded","gl::UseProgramStages","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ValidateProgram","gl","",N,N],[5,"is_loaded","gl::ValidateProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ValidateProgramPipeline","gl","",N,N],[5,"is_loaded","gl::ValidateProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribBinding","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribIFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribIFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribLFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribLFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayBindingDivisor","gl","",N,N],[5,"is_loaded","gl::VertexArrayBindingDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayElementBuffer","gl","",N,N],[5,"is_loaded","gl::VertexArrayElementBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayVertexBuffer","gl","",N,N],[5,"is_loaded","gl::VertexArrayVertexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayVertexBuffers","gl","",N,N],[5,"is_loaded","gl::VertexArrayVertexBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nbv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nbv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Niv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Niv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nsv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nsv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nub","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nub","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nubv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nuiv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nusv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nusv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4bv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4bv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4iv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4ubv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4ubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4usv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4usv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribBinding","gl","",N,N],[5,"is_loaded","gl::VertexAttribBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribDivisor","gl","",N,N],[5,"is_loaded","gl::VertexAttribDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4bv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4bv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4sv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4ubv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4ubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4usv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4usv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribIFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribIFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribIPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribIPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL1d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL1dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL2d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL2dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL3d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL3dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL4d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL4dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribLFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribLFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribLPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribLPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP1ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP1uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP2ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP2uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP3ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP3uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP4ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexBindingDivisor","gl","",N,N],[5,"is_loaded","gl::VertexBindingDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP2ui","gl","",N,N],[5,"is_loaded","gl::VertexP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP2uiv","gl","",N,N],[5,"is_loaded","gl::VertexP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP3ui","gl","",N,N],[5,"is_loaded","gl::VertexP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP3uiv","gl","",N,N],[5,"is_loaded","gl::VertexP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP4ui","gl","",N,N],[5,"is_loaded","gl::VertexP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP4uiv","gl","",N,N],[5,"is_loaded","gl::VertexP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Viewport","gl","",N,N],[5,"is_loaded","gl::Viewport","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportArrayv","gl","",N,N],[5,"is_loaded","gl::ViewportArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportIndexedf","gl","",N,N],[5,"is_loaded","gl::ViewportIndexedf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportIndexedfv","gl","",N,N],[5,"is_loaded","gl::ViewportIndexedfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"WaitSync","gl","",N,N],[5,"is_loaded","gl::WaitSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","gl","",N,N],[17,"ACTIVE_ATTRIBUTES","","",N,N],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",N,N],[17,"ACTIVE_PROGRAM","","",N,N],[17,"ACTIVE_RESOURCES","","",N,N],[17,"ACTIVE_SUBROUTINES","","",N,N],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",N,N],[17,"ACTIVE_TEXTURE","","",N,N],[17,"ACTIVE_UNIFORMS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCKS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",N,N],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",N,N],[17,"ACTIVE_VARIABLES","","",N,N],[17,"ALIASED_LINE_WIDTH_RANGE","","",N,N],[17,"ALL_BARRIER_BITS","","",N,N],[17,"ALL_SHADER_BITS","","",N,N],[17,"ALPHA","","",N,N],[17,"ALREADY_SIGNALED","","",N,N],[17,"ALWAYS","","",N,N],[17,"AND","","",N,N],[17,"AND_INVERTED","","",N,N],[17,"AND_REVERSE","","",N,N],[17,"ANY_SAMPLES_PASSED","","",N,N],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",N,N],[17,"ARRAY_BUFFER","","",N,N],[17,"ARRAY_BUFFER_BINDING","","",N,N],[17,"ARRAY_SIZE","","",N,N],[17,"ARRAY_STRIDE","","",N,N],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",N,N],[17,"ATOMIC_COUNTER_BUFFER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_START","","",N,N],[17,"ATTACHED_SHADERS","","",N,N],[17,"AUTO_GENERATE_MIPMAP","","",N,N],[17,"BACK","","",N,N],[17,"BACK_LEFT","","",N,N],[17,"BACK_RIGHT","","",N,N],[17,"BGR","","",N,N],[17,"BGRA","","",N,N],[17,"BGRA_INTEGER","","",N,N],[17,"BGR_INTEGER","","",N,N],[17,"BLEND","","",N,N],[17,"BLEND_COLOR","","",N,N],[17,"BLEND_DST","","",N,N],[17,"BLEND_DST_ALPHA","","",N,N],[17,"BLEND_DST_RGB","","",N,N],[17,"BLEND_EQUATION","","",N,N],[17,"BLEND_EQUATION_ALPHA","","",N,N],[17,"BLEND_EQUATION_RGB","","",N,N],[17,"BLEND_SRC","","",N,N],[17,"BLEND_SRC_ALPHA","","",N,N],[17,"BLEND_SRC_RGB","","",N,N],[17,"BLOCK_INDEX","","",N,N],[17,"BLUE","","",N,N],[17,"BLUE_INTEGER","","",N,N],[17,"BOOL","","",N,N],[17,"BOOL_VEC2","","",N,N],[17,"BOOL_VEC3","","",N,N],[17,"BOOL_VEC4","","",N,N],[17,"BUFFER","","",N,N],[17,"BUFFER_ACCESS","","",N,N],[17,"BUFFER_ACCESS_FLAGS","","",N,N],[17,"BUFFER_BINDING","","",N,N],[17,"BUFFER_DATA_SIZE","","",N,N],[17,"BUFFER_IMMUTABLE_STORAGE","","",N,N],[17,"BUFFER_MAPPED","","",N,N],[17,"BUFFER_MAP_LENGTH","","",N,N],[17,"BUFFER_MAP_OFFSET","","",N,N],[17,"BUFFER_MAP_POINTER","","",N,N],[17,"BUFFER_SIZE","","",N,N],[17,"BUFFER_STORAGE_FLAGS","","",N,N],[17,"BUFFER_UPDATE_BARRIER_BIT","","",N,N],[17,"BUFFER_USAGE","","",N,N],[17,"BUFFER_VARIABLE","","",N,N],[17,"BYTE","","",N,N],[17,"CAVEAT_SUPPORT","","",N,N],[17,"CCW","","",N,N],[17,"CLAMP_READ_COLOR","","",N,N],[17,"CLAMP_TO_BORDER","","",N,N],[17,"CLAMP_TO_EDGE","","",N,N],[17,"CLEAR","","",N,N],[17,"CLEAR_BUFFER","","",N,N],[17,"CLEAR_TEXTURE","","",N,N],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",N,N],[17,"CLIENT_STORAGE_BIT","","",N,N],[17,"CLIP_DEPTH_MODE","","",N,N],[17,"CLIP_DISTANCE0","","",N,N],[17,"CLIP_DISTANCE1","","",N,N],[17,"CLIP_DISTANCE2","","",N,N],[17,"CLIP_DISTANCE3","","",N,N],[17,"CLIP_DISTANCE4","","",N,N],[17,"CLIP_DISTANCE5","","",N,N],[17,"CLIP_DISTANCE6","","",N,N],[17,"CLIP_DISTANCE7","","",N,N],[17,"CLIP_ORIGIN","","",N,N],[17,"COLOR","","",N,N],[17,"COLOR_ATTACHMENT0","","",N,N],[17,"COLOR_ATTACHMENT1","","",N,N],[17,"COLOR_ATTACHMENT10","","",N,N],[17,"COLOR_ATTACHMENT11","","",N,N],[17,"COLOR_ATTACHMENT12","","",N,N],[17,"COLOR_ATTACHMENT13","","",N,N],[17,"COLOR_ATTACHMENT14","","",N,N],[17,"COLOR_ATTACHMENT15","","",N,N],[17,"COLOR_ATTACHMENT16","","",N,N],[17,"COLOR_ATTACHMENT17","","",N,N],[17,"COLOR_ATTACHMENT18","","",N,N],[17,"COLOR_ATTACHMENT19","","",N,N],[17,"COLOR_ATTACHMENT2","","",N,N],[17,"COLOR_ATTACHMENT20","","",N,N],[17,"COLOR_ATTACHMENT21","","",N,N],[17,"COLOR_ATTACHMENT22","","",N,N],[17,"COLOR_ATTACHMENT23","","",N,N],[17,"COLOR_ATTACHMENT24","","",N,N],[17,"COLOR_ATTACHMENT25","","",N,N],[17,"COLOR_ATTACHMENT26","","",N,N],[17,"COLOR_ATTACHMENT27","","",N,N],[17,"COLOR_ATTACHMENT28","","",N,N],[17,"COLOR_ATTACHMENT29","","",N,N],[17,"COLOR_ATTACHMENT3","","",N,N],[17,"COLOR_ATTACHMENT30","","",N,N],[17,"COLOR_ATTACHMENT31","","",N,N],[17,"COLOR_ATTACHMENT4","","",N,N],[17,"COLOR_ATTACHMENT5","","",N,N],[17,"COLOR_ATTACHMENT6","","",N,N],[17,"COLOR_ATTACHMENT7","","",N,N],[17,"COLOR_ATTACHMENT8","","",N,N],[17,"COLOR_ATTACHMENT9","","",N,N],[17,"COLOR_BUFFER_BIT","","",N,N],[17,"COLOR_CLEAR_VALUE","","",N,N],[17,"COLOR_COMPONENTS","","",N,N],[17,"COLOR_ENCODING","","",N,N],[17,"COLOR_LOGIC_OP","","",N,N],[17,"COLOR_RENDERABLE","","",N,N],[17,"COLOR_WRITEMASK","","",N,N],[17,"COMMAND_BARRIER_BIT","","",N,N],[17,"COMPARE_REF_TO_TEXTURE","","",N,N],[17,"COMPATIBLE_SUBROUTINES","","",N,N],[17,"COMPILE_STATUS","","",N,N],[17,"COMPRESSED_R11_EAC","","",N,N],[17,"COMPRESSED_RED","","",N,N],[17,"COMPRESSED_RED_RGTC1","","",N,N],[17,"COMPRESSED_RG","","",N,N],[17,"COMPRESSED_RG11_EAC","","",N,N],[17,"COMPRESSED_RGB","","",N,N],[17,"COMPRESSED_RGB8_ETC2","","",N,N],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_RGBA","","",N,N],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",N,N],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",N,N],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",N,N],[17,"COMPRESSED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SIGNED_R11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",N,N],[17,"COMPRESSED_SIGNED_RG11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SRGB","","",N,N],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_SRGB8_ETC2","","",N,N],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_SRGB_ALPHA","","",N,N],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",N,N],[17,"COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"COMPUTE_SHADER","","",N,N],[17,"COMPUTE_SHADER_BIT","","",N,N],[17,"COMPUTE_SUBROUTINE","","",N,N],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",N,N],[17,"COMPUTE_TEXTURE","","",N,N],[17,"COMPUTE_WORK_GROUP_SIZE","","",N,N],[17,"CONDITION_SATISFIED","","",N,N],[17,"CONSTANT_ALPHA","","",N,N],[17,"CONSTANT_COLOR","","",N,N],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",N,N],[17,"CONTEXT_CORE_PROFILE_BIT","","",N,N],[17,"CONTEXT_FLAGS","","",N,N],[17,"CONTEXT_FLAG_DEBUG_BIT","","",N,N],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",N,N],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",N,N],[17,"CONTEXT_LOST","","",N,N],[17,"CONTEXT_PROFILE_MASK","","",N,N],[17,"CONTEXT_RELEASE_BEHAVIOR","","",N,N],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",N,N],[17,"COPY","","",N,N],[17,"COPY_INVERTED","","",N,N],[17,"COPY_READ_BUFFER","","",N,N],[17,"COPY_READ_BUFFER_BINDING","","",N,N],[17,"COPY_WRITE_BUFFER","","",N,N],[17,"COPY_WRITE_BUFFER_BINDING","","",N,N],[17,"CULL_FACE","","",N,N],[17,"CULL_FACE_MODE","","",N,N],[17,"CURRENT_PROGRAM","","",N,N],[17,"CURRENT_QUERY","","",N,N],[17,"CURRENT_VERTEX_ATTRIB","","",N,N],[17,"CW","","",N,N],[17,"DEBUG_CALLBACK_FUNCTION","","",N,N],[17,"DEBUG_CALLBACK_USER_PARAM","","",N,N],[17,"DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"DEBUG_LOGGED_MESSAGES","","",N,N],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",N,N],[17,"DEBUG_OUTPUT","","",N,N],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",N,N],[17,"DEBUG_SEVERITY_HIGH","","",N,N],[17,"DEBUG_SEVERITY_LOW","","",N,N],[17,"DEBUG_SEVERITY_MEDIUM","","",N,N],[17,"DEBUG_SEVERITY_NOTIFICATION","","",N,N],[17,"DEBUG_SOURCE_API","","",N,N],[17,"DEBUG_SOURCE_APPLICATION","","",N,N],[17,"DEBUG_SOURCE_OTHER","","",N,N],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",N,N],[17,"DEBUG_SOURCE_THIRD_PARTY","","",N,N],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",N,N],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",N,N],[17,"DEBUG_TYPE_ERROR","","",N,N],[17,"DEBUG_TYPE_MARKER","","",N,N],[17,"DEBUG_TYPE_OTHER","","",N,N],[17,"DEBUG_TYPE_PERFORMANCE","","",N,N],[17,"DEBUG_TYPE_POP_GROUP","","",N,N],[17,"DEBUG_TYPE_PORTABILITY","","",N,N],[17,"DEBUG_TYPE_PUSH_GROUP","","",N,N],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",N,N],[17,"DECR","","",N,N],[17,"DECR_WRAP","","",N,N],[17,"DELETE_STATUS","","",N,N],[17,"DEPTH","","",N,N],[17,"DEPTH24_STENCIL8","","",N,N],[17,"DEPTH32F_STENCIL8","","",N,N],[17,"DEPTH_ATTACHMENT","","",N,N],[17,"DEPTH_BUFFER_BIT","","",N,N],[17,"DEPTH_CLAMP","","",N,N],[17,"DEPTH_CLEAR_VALUE","","",N,N],[17,"DEPTH_COMPONENT","","",N,N],[17,"DEPTH_COMPONENT16","","",N,N],[17,"DEPTH_COMPONENT24","","",N,N],[17,"DEPTH_COMPONENT32","","",N,N],[17,"DEPTH_COMPONENT32F","","",N,N],[17,"DEPTH_COMPONENTS","","",N,N],[17,"DEPTH_FUNC","","",N,N],[17,"DEPTH_RANGE","","",N,N],[17,"DEPTH_RENDERABLE","","",N,N],[17,"DEPTH_STENCIL","","",N,N],[17,"DEPTH_STENCIL_ATTACHMENT","","",N,N],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",N,N],[17,"DEPTH_TEST","","",N,N],[17,"DEPTH_WRITEMASK","","",N,N],[17,"DISPATCH_INDIRECT_BUFFER","","",N,N],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",N,N],[17,"DISPLAY_LIST","","",N,N],[17,"DITHER","","",N,N],[17,"DONT_CARE","","",N,N],[17,"DOUBLE","","",N,N],[17,"DOUBLEBUFFER","","",N,N],[17,"DOUBLE_MAT2","","",N,N],[17,"DOUBLE_MAT2x3","","",N,N],[17,"DOUBLE_MAT2x4","","",N,N],[17,"DOUBLE_MAT3","","",N,N],[17,"DOUBLE_MAT3x2","","",N,N],[17,"DOUBLE_MAT3x4","","",N,N],[17,"DOUBLE_MAT4","","",N,N],[17,"DOUBLE_MAT4x2","","",N,N],[17,"DOUBLE_MAT4x3","","",N,N],[17,"DOUBLE_VEC2","","",N,N],[17,"DOUBLE_VEC3","","",N,N],[17,"DOUBLE_VEC4","","",N,N],[17,"DRAW_BUFFER","","",N,N],[17,"DRAW_BUFFER0","","",N,N],[17,"DRAW_BUFFER1","","",N,N],[17,"DRAW_BUFFER10","","",N,N],[17,"DRAW_BUFFER11","","",N,N],[17,"DRAW_BUFFER12","","",N,N],[17,"DRAW_BUFFER13","","",N,N],[17,"DRAW_BUFFER14","","",N,N],[17,"DRAW_BUFFER15","","",N,N],[17,"DRAW_BUFFER2","","",N,N],[17,"DRAW_BUFFER3","","",N,N],[17,"DRAW_BUFFER4","","",N,N],[17,"DRAW_BUFFER5","","",N,N],[17,"DRAW_BUFFER6","","",N,N],[17,"DRAW_BUFFER7","","",N,N],[17,"DRAW_BUFFER8","","",N,N],[17,"DRAW_BUFFER9","","",N,N],[17,"DRAW_FRAMEBUFFER","","",N,N],[17,"DRAW_FRAMEBUFFER_BINDING","","",N,N],[17,"DRAW_INDIRECT_BUFFER","","",N,N],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",N,N],[17,"DST_ALPHA","","",N,N],[17,"DST_COLOR","","",N,N],[17,"DYNAMIC_COPY","","",N,N],[17,"DYNAMIC_DRAW","","",N,N],[17,"DYNAMIC_READ","","",N,N],[17,"DYNAMIC_STORAGE_BIT","","",N,N],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",N,N],[17,"ELEMENT_ARRAY_BUFFER","","",N,N],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",N,N],[17,"EQUAL","","",N,N],[17,"EQUIV","","",N,N],[17,"EXTENSIONS","","",N,N],[17,"FALSE","","",N,N],[17,"FASTEST","","",N,N],[17,"FILL","","",N,N],[17,"FILTER","","",N,N],[17,"FIRST_VERTEX_CONVENTION","","",N,N],[17,"FIXED","","",N,N],[17,"FIXED_ONLY","","",N,N],[17,"FLOAT","","",N,N],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",N,N],[17,"FLOAT_MAT2","","",N,N],[17,"FLOAT_MAT2x3","","",N,N],[17,"FLOAT_MAT2x4","","",N,N],[17,"FLOAT_MAT3","","",N,N],[17,"FLOAT_MAT3x2","","",N,N],[17,"FLOAT_MAT3x4","","",N,N],[17,"FLOAT_MAT4","","",N,N],[17,"FLOAT_MAT4x2","","",N,N],[17,"FLOAT_MAT4x3","","",N,N],[17,"FLOAT_VEC2","","",N,N],[17,"FLOAT_VEC3","","",N,N],[17,"FLOAT_VEC4","","",N,N],[17,"FRACTIONAL_EVEN","","",N,N],[17,"FRACTIONAL_ODD","","",N,N],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",N,N],[17,"FRAGMENT_SHADER","","",N,N],[17,"FRAGMENT_SHADER_BIT","","",N,N],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",N,N],[17,"FRAGMENT_SUBROUTINE","","",N,N],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",N,N],[17,"FRAGMENT_TEXTURE","","",N,N],[17,"FRAMEBUFFER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",N,N],[17,"FRAMEBUFFER_BARRIER_BIT","","",N,N],[17,"FRAMEBUFFER_BINDING","","",N,N],[17,"FRAMEBUFFER_BLEND","","",N,N],[17,"FRAMEBUFFER_COMPLETE","","",N,N],[17,"FRAMEBUFFER_DEFAULT","","",N,N],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",N,N],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",N,N],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",N,N],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",N,N],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",N,N],[17,"FRAMEBUFFER_RENDERABLE","","",N,N],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",N,N],[17,"FRAMEBUFFER_SRGB","","",N,N],[17,"FRAMEBUFFER_UNDEFINED","","",N,N],[17,"FRAMEBUFFER_UNSUPPORTED","","",N,N],[17,"FRONT","","",N,N],[17,"FRONT_AND_BACK","","",N,N],[17,"FRONT_FACE","","",N,N],[17,"FRONT_LEFT","","",N,N],[17,"FRONT_RIGHT","","",N,N],[17,"FULL_SUPPORT","","",N,N],[17,"FUNC_ADD","","",N,N],[17,"FUNC_REVERSE_SUBTRACT","","",N,N],[17,"FUNC_SUBTRACT","","",N,N],[17,"GEOMETRY_INPUT_TYPE","","",N,N],[17,"GEOMETRY_OUTPUT_TYPE","","",N,N],[17,"GEOMETRY_SHADER","","",N,N],[17,"GEOMETRY_SHADER_BIT","","",N,N],[17,"GEOMETRY_SHADER_INVOCATIONS","","",N,N],[17,"GEOMETRY_SUBROUTINE","","",N,N],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",N,N],[17,"GEOMETRY_TEXTURE","","",N,N],[17,"GEOMETRY_VERTICES_OUT","","",N,N],[17,"GEQUAL","","",N,N],[17,"GET_TEXTURE_IMAGE_FORMAT","","",N,N],[17,"GET_TEXTURE_IMAGE_TYPE","","",N,N],[17,"GREATER","","",N,N],[17,"GREEN","","",N,N],[17,"GREEN_INTEGER","","",N,N],[17,"GUILTY_CONTEXT_RESET","","",N,N],[17,"HALF_FLOAT","","",N,N],[17,"HIGH_FLOAT","","",N,N],[17,"HIGH_INT","","",N,N],[17,"IMAGE_1D","","",N,N],[17,"IMAGE_1D_ARRAY","","",N,N],[17,"IMAGE_2D","","",N,N],[17,"IMAGE_2D_ARRAY","","",N,N],[17,"IMAGE_2D_MULTISAMPLE","","",N,N],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"IMAGE_2D_RECT","","",N,N],[17,"IMAGE_3D","","",N,N],[17,"IMAGE_BINDING_ACCESS","","",N,N],[17,"IMAGE_BINDING_FORMAT","","",N,N],[17,"IMAGE_BINDING_LAYER","","",N,N],[17,"IMAGE_BINDING_LAYERED","","",N,N],[17,"IMAGE_BINDING_LEVEL","","",N,N],[17,"IMAGE_BINDING_NAME","","",N,N],[17,"IMAGE_BUFFER","","",N,N],[17,"IMAGE_CLASS_10_10_10_2","","",N,N],[17,"IMAGE_CLASS_11_11_10","","",N,N],[17,"IMAGE_CLASS_1_X_16","","",N,N],[17,"IMAGE_CLASS_1_X_32","","",N,N],[17,"IMAGE_CLASS_1_X_8","","",N,N],[17,"IMAGE_CLASS_2_X_16","","",N,N],[17,"IMAGE_CLASS_2_X_32","","",N,N],[17,"IMAGE_CLASS_2_X_8","","",N,N],[17,"IMAGE_CLASS_4_X_16","","",N,N],[17,"IMAGE_CLASS_4_X_32","","",N,N],[17,"IMAGE_CLASS_4_X_8","","",N,N],[17,"IMAGE_COMPATIBILITY_CLASS","","",N,N],[17,"IMAGE_CUBE","","",N,N],[17,"IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",N,N],[17,"IMAGE_PIXEL_FORMAT","","",N,N],[17,"IMAGE_PIXEL_TYPE","","",N,N],[17,"IMAGE_TEXEL_SIZE","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",N,N],[17,"INCR","","",N,N],[17,"INCR_WRAP","","",N,N],[17,"INDEX","","",N,N],[17,"INFO_LOG_LENGTH","","",N,N],[17,"INNOCENT_CONTEXT_RESET","","",N,N],[17,"INT","","",N,N],[17,"INTERLEAVED_ATTRIBS","","",N,N],[17,"INTERNALFORMAT_ALPHA_SIZE","","",N,N],[17,"INTERNALFORMAT_ALPHA_TYPE","","",N,N],[17,"INTERNALFORMAT_BLUE_SIZE","","",N,N],[17,"INTERNALFORMAT_BLUE_TYPE","","",N,N],[17,"INTERNALFORMAT_DEPTH_SIZE","","",N,N],[17,"INTERNALFORMAT_DEPTH_TYPE","","",N,N],[17,"INTERNALFORMAT_GREEN_SIZE","","",N,N],[17,"INTERNALFORMAT_GREEN_TYPE","","",N,N],[17,"INTERNALFORMAT_PREFERRED","","",N,N],[17,"INTERNALFORMAT_RED_SIZE","","",N,N],[17,"INTERNALFORMAT_RED_TYPE","","",N,N],[17,"INTERNALFORMAT_SHARED_SIZE","","",N,N],[17,"INTERNALFORMAT_STENCIL_SIZE","","",N,N],[17,"INTERNALFORMAT_STENCIL_TYPE","","",N,N],[17,"INTERNALFORMAT_SUPPORTED","","",N,N],[17,"INT_2_10_10_10_REV","","",N,N],[17,"INT_IMAGE_1D","","",N,N],[17,"INT_IMAGE_1D_ARRAY","","",N,N],[17,"INT_IMAGE_2D","","",N,N],[17,"INT_IMAGE_2D_ARRAY","","",N,N],[17,"INT_IMAGE_2D_MULTISAMPLE","","",N,N],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"INT_IMAGE_2D_RECT","","",N,N],[17,"INT_IMAGE_3D","","",N,N],[17,"INT_IMAGE_BUFFER","","",N,N],[17,"INT_IMAGE_CUBE","","",N,N],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"INT_SAMPLER_1D","","",N,N],[17,"INT_SAMPLER_1D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D","","",N,N],[17,"INT_SAMPLER_2D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_RECT","","",N,N],[17,"INT_SAMPLER_3D","","",N,N],[17,"INT_SAMPLER_BUFFER","","",N,N],[17,"INT_SAMPLER_CUBE","","",N,N],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"INT_VEC2","","",N,N],[17,"INT_VEC3","","",N,N],[17,"INT_VEC4","","",N,N],[17,"INVALID_ENUM","","",N,N],[17,"INVALID_FRAMEBUFFER_OPERATION","","",N,N],[17,"INVALID_INDEX","","",N,N],[17,"INVALID_OPERATION","","",N,N],[17,"INVALID_VALUE","","",N,N],[17,"INVERT","","",N,N],[17,"ISOLINES","","",N,N],[17,"IS_PER_PATCH","","",N,N],[17,"IS_ROW_MAJOR","","",N,N],[17,"KEEP","","",N,N],[17,"LAST_VERTEX_CONVENTION","","",N,N],[17,"LAYER_PROVOKING_VERTEX","","",N,N],[17,"LEFT","","",N,N],[17,"LEQUAL","","",N,N],[17,"LESS","","",N,N],[17,"LINE","","",N,N],[17,"LINEAR","","",N,N],[17,"LINEAR_MIPMAP_LINEAR","","",N,N],[17,"LINEAR_MIPMAP_NEAREST","","",N,N],[17,"LINES","","",N,N],[17,"LINES_ADJACENCY","","",N,N],[17,"LINE_LOOP","","",N,N],[17,"LINE_SMOOTH","","",N,N],[17,"LINE_SMOOTH_HINT","","",N,N],[17,"LINE_STRIP","","",N,N],[17,"LINE_STRIP_ADJACENCY","","",N,N],[17,"LINE_WIDTH","","",N,N],[17,"LINE_WIDTH_GRANULARITY","","",N,N],[17,"LINE_WIDTH_RANGE","","",N,N],[17,"LINK_STATUS","","",N,N],[17,"LOCATION","","",N,N],[17,"LOCATION_COMPONENT","","",N,N],[17,"LOCATION_INDEX","","",N,N],[17,"LOGIC_OP_MODE","","",N,N],[17,"LOSE_CONTEXT_ON_RESET","","",N,N],[17,"LOWER_LEFT","","",N,N],[17,"LOW_FLOAT","","",N,N],[17,"LOW_INT","","",N,N],[17,"MAJOR_VERSION","","",N,N],[17,"MANUAL_GENERATE_MIPMAP","","",N,N],[17,"MAP_COHERENT_BIT","","",N,N],[17,"MAP_FLUSH_EXPLICIT_BIT","","",N,N],[17,"MAP_INVALIDATE_BUFFER_BIT","","",N,N],[17,"MAP_INVALIDATE_RANGE_BIT","","",N,N],[17,"MAP_PERSISTENT_BIT","","",N,N],[17,"MAP_READ_BIT","","",N,N],[17,"MAP_UNSYNCHRONIZED_BIT","","",N,N],[17,"MAP_WRITE_BIT","","",N,N],[17,"MATRIX_STRIDE","","",N,N],[17,"MAX","","",N,N],[17,"MAX_3D_TEXTURE_SIZE","","",N,N],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",N,N],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",N,N],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",N,N],[17,"MAX_CLIP_DISTANCES","","",N,N],[17,"MAX_COLOR_ATTACHMENTS","","",N,N],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",N,N],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",N,N],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",N,N],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_DIMENSIONS","","",N,N],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",N,N],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",N,N],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",N,N],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",N,N],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",N,N],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",N,N],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",N,N],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",N,N],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",N,N],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",N,N],[17,"MAX_CULL_DISTANCES","","",N,N],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",N,N],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",N,N],[17,"MAX_DEPTH","","",N,N],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",N,N],[17,"MAX_DRAW_BUFFERS","","",N,N],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",N,N],[17,"MAX_ELEMENTS_INDICES","","",N,N],[17,"MAX_ELEMENTS_VERTICES","","",N,N],[17,"MAX_ELEMENT_INDEX","","",N,N],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",N,N],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",N,N],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",N,N],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",N,N],[17,"MAX_FRAMEBUFFER_HEIGHT","","",N,N],[17,"MAX_FRAMEBUFFER_LAYERS","","",N,N],[17,"MAX_FRAMEBUFFER_SAMPLES","","",N,N],[17,"MAX_FRAMEBUFFER_WIDTH","","",N,N],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",N,N],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",N,N],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",N,N],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",N,N],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_HEIGHT","","",N,N],[17,"MAX_IMAGE_SAMPLES","","",N,N],[17,"MAX_IMAGE_UNITS","","",N,N],[17,"MAX_INTEGER_SAMPLES","","",N,N],[17,"MAX_LABEL_LENGTH","","",N,N],[17,"MAX_LAYERS","","",N,N],[17,"MAX_NAME_LENGTH","","",N,N],[17,"MAX_NUM_ACTIVE_VARIABLES","","",N,N],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",N,N],[17,"MAX_PATCH_VERTICES","","",N,N],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",N,N],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",N,N],[17,"MAX_RENDERBUFFER_SIZE","","",N,N],[17,"MAX_SAMPLES","","",N,N],[17,"MAX_SAMPLE_MASK_WORDS","","",N,N],[17,"MAX_SERVER_WAIT_TIMEOUT","","",N,N],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",N,N],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",N,N],[17,"MAX_SUBROUTINES","","",N,N],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",N,N],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",N,N],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",N,N],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",N,N],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",N,N],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",N,N],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",N,N],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_TESS_GEN_LEVEL","","",N,N],[17,"MAX_TESS_PATCH_COMPONENTS","","",N,N],[17,"MAX_TEXTURE_BUFFER_SIZE","","",N,N],[17,"MAX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TEXTURE_LOD_BIAS","","",N,N],[17,"MAX_TEXTURE_SIZE","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",N,N],[17,"MAX_UNIFORM_BLOCK_SIZE","","",N,N],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",N,N],[17,"MAX_UNIFORM_LOCATIONS","","",N,N],[17,"MAX_VARYING_COMPONENTS","","",N,N],[17,"MAX_VARYING_FLOATS","","",N,N],[17,"MAX_VARYING_VECTORS","","",N,N],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",N,N],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_VERTEX_ATTRIBS","","",N,N],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",N,N],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",N,N],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",N,N],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",N,N],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_VERTEX_STREAMS","","",N,N],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",N,N],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",N,N],[17,"MAX_VIEWPORTS","","",N,N],[17,"MAX_VIEWPORT_DIMS","","",N,N],[17,"MAX_WIDTH","","",N,N],[17,"MEDIUM_FLOAT","","",N,N],[17,"MEDIUM_INT","","",N,N],[17,"MIN","","",N,N],[17,"MINOR_VERSION","","",N,N],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",N,N],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",N,N],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",N,N],[17,"MIN_SAMPLE_SHADING_VALUE","","",N,N],[17,"MIPMAP","","",N,N],[17,"MIRRORED_REPEAT","","",N,N],[17,"MIRROR_CLAMP_TO_EDGE","","",N,N],[17,"MULTISAMPLE","","",N,N],[17,"NAME_LENGTH","","",N,N],[17,"NAND","","",N,N],[17,"NEAREST","","",N,N],[17,"NEAREST_MIPMAP_LINEAR","","",N,N],[17,"NEAREST_MIPMAP_NEAREST","","",N,N],[17,"NEGATIVE_ONE_TO_ONE","","",N,N],[17,"NEVER","","",N,N],[17,"NICEST","","",N,N],[17,"NONE","","",N,N],[17,"NOOP","","",N,N],[17,"NOR","","",N,N],[17,"NOTEQUAL","","",N,N],[17,"NO_ERROR","","",N,N],[17,"NO_RESET_NOTIFICATION","","",N,N],[17,"NUM_ACTIVE_VARIABLES","","",N,N],[17,"NUM_COMPATIBLE_SUBROUTINES","","",N,N],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"NUM_EXTENSIONS","","",N,N],[17,"NUM_PROGRAM_BINARY_FORMATS","","",N,N],[17,"NUM_SAMPLE_COUNTS","","",N,N],[17,"NUM_SHADER_BINARY_FORMATS","","",N,N],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",N,N],[17,"OBJECT_TYPE","","",N,N],[17,"OFFSET","","",N,N],[17,"ONE","","",N,N],[17,"ONE_MINUS_CONSTANT_ALPHA","","",N,N],[17,"ONE_MINUS_CONSTANT_COLOR","","",N,N],[17,"ONE_MINUS_DST_ALPHA","","",N,N],[17,"ONE_MINUS_DST_COLOR","","",N,N],[17,"ONE_MINUS_SRC1_ALPHA","","",N,N],[17,"ONE_MINUS_SRC1_COLOR","","",N,N],[17,"ONE_MINUS_SRC_ALPHA","","",N,N],[17,"ONE_MINUS_SRC_COLOR","","",N,N],[17,"OR","","",N,N],[17,"OR_INVERTED","","",N,N],[17,"OR_REVERSE","","",N,N],[17,"OUT_OF_MEMORY","","",N,N],[17,"PACK_ALIGNMENT","","",N,N],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",N,N],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"PACK_IMAGE_HEIGHT","","",N,N],[17,"PACK_LSB_FIRST","","",N,N],[17,"PACK_ROW_LENGTH","","",N,N],[17,"PACK_SKIP_IMAGES","","",N,N],[17,"PACK_SKIP_PIXELS","","",N,N],[17,"PACK_SKIP_ROWS","","",N,N],[17,"PACK_SWAP_BYTES","","",N,N],[17,"PATCHES","","",N,N],[17,"PATCH_DEFAULT_INNER_LEVEL","","",N,N],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",N,N],[17,"PATCH_VERTICES","","",N,N],[17,"PIXEL_BUFFER_BARRIER_BIT","","",N,N],[17,"PIXEL_PACK_BUFFER","","",N,N],[17,"PIXEL_PACK_BUFFER_BINDING","","",N,N],[17,"PIXEL_UNPACK_BUFFER","","",N,N],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",N,N],[17,"POINT","","",N,N],[17,"POINTS","","",N,N],[17,"POINT_FADE_THRESHOLD_SIZE","","",N,N],[17,"POINT_SIZE","","",N,N],[17,"POINT_SIZE_GRANULARITY","","",N,N],[17,"POINT_SIZE_RANGE","","",N,N],[17,"POINT_SPRITE_COORD_ORIGIN","","",N,N],[17,"POLYGON_MODE","","",N,N],[17,"POLYGON_OFFSET_FACTOR","","",N,N],[17,"POLYGON_OFFSET_FILL","","",N,N],[17,"POLYGON_OFFSET_LINE","","",N,N],[17,"POLYGON_OFFSET_POINT","","",N,N],[17,"POLYGON_OFFSET_UNITS","","",N,N],[17,"POLYGON_SMOOTH","","",N,N],[17,"POLYGON_SMOOTH_HINT","","",N,N],[17,"PRIMITIVES_GENERATED","","",N,N],[17,"PRIMITIVE_RESTART","","",N,N],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",N,N],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",N,N],[17,"PRIMITIVE_RESTART_INDEX","","",N,N],[17,"PROGRAM","","",N,N],[17,"PROGRAM_BINARY_FORMATS","","",N,N],[17,"PROGRAM_BINARY_LENGTH","","",N,N],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",N,N],[17,"PROGRAM_INPUT","","",N,N],[17,"PROGRAM_OUTPUT","","",N,N],[17,"PROGRAM_PIPELINE","","",N,N],[17,"PROGRAM_PIPELINE_BINDING","","",N,N],[17,"PROGRAM_POINT_SIZE","","",N,N],[17,"PROGRAM_SEPARABLE","","",N,N],[17,"PROVOKING_VERTEX","","",N,N],[17,"PROXY_TEXTURE_1D","","",N,N],[17,"PROXY_TEXTURE_1D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D","","",N,N],[17,"PROXY_TEXTURE_2D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"PROXY_TEXTURE_3D","","",N,N],[17,"PROXY_TEXTURE_CUBE_MAP","","",N,N],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",N,N],[17,"PROXY_TEXTURE_RECTANGLE","","",N,N],[17,"QUADS","","",N,N],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",N,N],[17,"QUERY","","",N,N],[17,"QUERY_BUFFER","","",N,N],[17,"QUERY_BUFFER_BARRIER_BIT","","",N,N],[17,"QUERY_BUFFER_BINDING","","",N,N],[17,"QUERY_BY_REGION_NO_WAIT","","",N,N],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",N,N],[17,"QUERY_BY_REGION_WAIT","","",N,N],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",N,N],[17,"QUERY_COUNTER_BITS","","",N,N],[17,"QUERY_NO_WAIT","","",N,N],[17,"QUERY_NO_WAIT_INVERTED","","",N,N],[17,"QUERY_RESULT","","",N,N],[17,"QUERY_RESULT_AVAILABLE","","",N,N],[17,"QUERY_RESULT_NO_WAIT","","",N,N],[17,"QUERY_TARGET","","",N,N],[17,"QUERY_WAIT","","",N,N],[17,"QUERY_WAIT_INVERTED","","",N,N],[17,"R11F_G11F_B10F","","",N,N],[17,"R16","","",N,N],[17,"R16F","","",N,N],[17,"R16I","","",N,N],[17,"R16UI","","",N,N],[17,"R16_SNORM","","",N,N],[17,"R32F","","",N,N],[17,"R32I","","",N,N],[17,"R32UI","","",N,N],[17,"R3_G3_B2","","",N,N],[17,"R8","","",N,N],[17,"R8I","","",N,N],[17,"R8UI","","",N,N],[17,"R8_SNORM","","",N,N],[17,"RASTERIZER_DISCARD","","",N,N],[17,"READ_BUFFER","","",N,N],[17,"READ_FRAMEBUFFER","","",N,N],[17,"READ_FRAMEBUFFER_BINDING","","",N,N],[17,"READ_ONLY","","",N,N],[17,"READ_PIXELS","","",N,N],[17,"READ_PIXELS_FORMAT","","",N,N],[17,"READ_PIXELS_TYPE","","",N,N],[17,"READ_WRITE","","",N,N],[17,"RED","","",N,N],[17,"RED_INTEGER","","",N,N],[17,"REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"RENDERBUFFER","","",N,N],[17,"RENDERBUFFER_ALPHA_SIZE","","",N,N],[17,"RENDERBUFFER_BINDING","","",N,N],[17,"RENDERBUFFER_BLUE_SIZE","","",N,N],[17,"RENDERBUFFER_DEPTH_SIZE","","",N,N],[17,"RENDERBUFFER_GREEN_SIZE","","",N,N],[17,"RENDERBUFFER_HEIGHT","","",N,N],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",N,N],[17,"RENDERBUFFER_RED_SIZE","","",N,N],[17,"RENDERBUFFER_SAMPLES","","",N,N],[17,"RENDERBUFFER_STENCIL_SIZE","","",N,N],[17,"RENDERBUFFER_WIDTH","","",N,N],[17,"RENDERER","","",N,N],[17,"REPEAT","","",N,N],[17,"REPLACE","","",N,N],[17,"RESET_NOTIFICATION_STRATEGY","","",N,N],[17,"RG","","",N,N],[17,"RG16","","",N,N],[17,"RG16F","","",N,N],[17,"RG16I","","",N,N],[17,"RG16UI","","",N,N],[17,"RG16_SNORM","","",N,N],[17,"RG32F","","",N,N],[17,"RG32I","","",N,N],[17,"RG32UI","","",N,N],[17,"RG8","","",N,N],[17,"RG8I","","",N,N],[17,"RG8UI","","",N,N],[17,"RG8_SNORM","","",N,N],[17,"RGB","","",N,N],[17,"RGB10","","",N,N],[17,"RGB10_A2","","",N,N],[17,"RGB10_A2UI","","",N,N],[17,"RGB12","","",N,N],[17,"RGB16","","",N,N],[17,"RGB16F","","",N,N],[17,"RGB16I","","",N,N],[17,"RGB16UI","","",N,N],[17,"RGB16_SNORM","","",N,N],[17,"RGB32F","","",N,N],[17,"RGB32I","","",N,N],[17,"RGB32UI","","",N,N],[17,"RGB4","","",N,N],[17,"RGB5","","",N,N],[17,"RGB565","","",N,N],[17,"RGB5_A1","","",N,N],[17,"RGB8","","",N,N],[17,"RGB8I","","",N,N],[17,"RGB8UI","","",N,N],[17,"RGB8_SNORM","","",N,N],[17,"RGB9_E5","","",N,N],[17,"RGBA","","",N,N],[17,"RGBA12","","",N,N],[17,"RGBA16","","",N,N],[17,"RGBA16F","","",N,N],[17,"RGBA16I","","",N,N],[17,"RGBA16UI","","",N,N],[17,"RGBA16_SNORM","","",N,N],[17,"RGBA2","","",N,N],[17,"RGBA32F","","",N,N],[17,"RGBA32I","","",N,N],[17,"RGBA32UI","","",N,N],[17,"RGBA4","","",N,N],[17,"RGBA8","","",N,N],[17,"RGBA8I","","",N,N],[17,"RGBA8UI","","",N,N],[17,"RGBA8_SNORM","","",N,N],[17,"RGBA_INTEGER","","",N,N],[17,"RGB_INTEGER","","",N,N],[17,"RG_INTEGER","","",N,N],[17,"RIGHT","","",N,N],[17,"SAMPLER","","",N,N],[17,"SAMPLER_1D","","",N,N],[17,"SAMPLER_1D_ARRAY","","",N,N],[17,"SAMPLER_1D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_1D_SHADOW","","",N,N],[17,"SAMPLER_2D","","",N,N],[17,"SAMPLER_2D_ARRAY","","",N,N],[17,"SAMPLER_2D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"SAMPLER_2D_RECT","","",N,N],[17,"SAMPLER_2D_RECT_SHADOW","","",N,N],[17,"SAMPLER_2D_SHADOW","","",N,N],[17,"SAMPLER_3D","","",N,N],[17,"SAMPLER_BINDING","","",N,N],[17,"SAMPLER_BUFFER","","",N,N],[17,"SAMPLER_CUBE","","",N,N],[17,"SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_CUBE_SHADOW","","",N,N],[17,"SAMPLES","","",N,N],[17,"SAMPLES_PASSED","","",N,N],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",N,N],[17,"SAMPLE_ALPHA_TO_ONE","","",N,N],[17,"SAMPLE_BUFFERS","","",N,N],[17,"SAMPLE_COVERAGE","","",N,N],[17,"SAMPLE_COVERAGE_INVERT","","",N,N],[17,"SAMPLE_COVERAGE_VALUE","","",N,N],[17,"SAMPLE_MASK","","",N,N],[17,"SAMPLE_MASK_VALUE","","",N,N],[17,"SAMPLE_POSITION","","",N,N],[17,"SAMPLE_SHADING","","",N,N],[17,"SCISSOR_BOX","","",N,N],[17,"SCISSOR_TEST","","",N,N],[17,"SEPARATE_ATTRIBS","","",N,N],[17,"SET","","",N,N],[17,"SHADER","","",N,N],[17,"SHADER_BINARY_FORMATS","","",N,N],[17,"SHADER_COMPILER","","",N,N],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",N,N],[17,"SHADER_IMAGE_ATOMIC","","",N,N],[17,"SHADER_IMAGE_LOAD","","",N,N],[17,"SHADER_IMAGE_STORE","","",N,N],[17,"SHADER_SOURCE_LENGTH","","",N,N],[17,"SHADER_STORAGE_BARRIER_BIT","","",N,N],[17,"SHADER_STORAGE_BLOCK","","",N,N],[17,"SHADER_STORAGE_BUFFER","","",N,N],[17,"SHADER_STORAGE_BUFFER_BINDING","","",N,N],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"SHADER_STORAGE_BUFFER_SIZE","","",N,N],[17,"SHADER_STORAGE_BUFFER_START","","",N,N],[17,"SHADER_TYPE","","",N,N],[17,"SHADING_LANGUAGE_VERSION","","",N,N],[17,"SHORT","","",N,N],[17,"SIGNALED","","",N,N],[17,"SIGNED_NORMALIZED","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",N,N],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",N,N],[17,"SMOOTH_LINE_WIDTH_RANGE","","",N,N],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",N,N],[17,"SMOOTH_POINT_SIZE_RANGE","","",N,N],[17,"SRC1_ALPHA","","",N,N],[17,"SRC1_COLOR","","",N,N],[17,"SRC_ALPHA","","",N,N],[17,"SRC_ALPHA_SATURATE","","",N,N],[17,"SRC_COLOR","","",N,N],[17,"SRGB","","",N,N],[17,"SRGB8","","",N,N],[17,"SRGB8_ALPHA8","","",N,N],[17,"SRGB_ALPHA","","",N,N],[17,"SRGB_READ","","",N,N],[17,"SRGB_WRITE","","",N,N],[17,"STACK_OVERFLOW","","",N,N],[17,"STACK_UNDERFLOW","","",N,N],[17,"STATIC_COPY","","",N,N],[17,"STATIC_DRAW","","",N,N],[17,"STATIC_READ","","",N,N],[17,"STENCIL","","",N,N],[17,"STENCIL_ATTACHMENT","","",N,N],[17,"STENCIL_BACK_FAIL","","",N,N],[17,"STENCIL_BACK_FUNC","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_BACK_REF","","",N,N],[17,"STENCIL_BACK_VALUE_MASK","","",N,N],[17,"STENCIL_BACK_WRITEMASK","","",N,N],[17,"STENCIL_BUFFER_BIT","","",N,N],[17,"STENCIL_CLEAR_VALUE","","",N,N],[17,"STENCIL_COMPONENTS","","",N,N],[17,"STENCIL_FAIL","","",N,N],[17,"STENCIL_FUNC","","",N,N],[17,"STENCIL_INDEX","","",N,N],[17,"STENCIL_INDEX1","","",N,N],[17,"STENCIL_INDEX16","","",N,N],[17,"STENCIL_INDEX4","","",N,N],[17,"STENCIL_INDEX8","","",N,N],[17,"STENCIL_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_REF","","",N,N],[17,"STENCIL_RENDERABLE","","",N,N],[17,"STENCIL_TEST","","",N,N],[17,"STENCIL_VALUE_MASK","","",N,N],[17,"STENCIL_WRITEMASK","","",N,N],[17,"STEREO","","",N,N],[17,"STREAM_COPY","","",N,N],[17,"STREAM_DRAW","","",N,N],[17,"STREAM_READ","","",N,N],[17,"SUBPIXEL_BITS","","",N,N],[17,"SYNC_CONDITION","","",N,N],[17,"SYNC_FENCE","","",N,N],[17,"SYNC_FLAGS","","",N,N],[17,"SYNC_FLUSH_COMMANDS_BIT","","",N,N],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",N,N],[17,"SYNC_STATUS","","",N,N],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",N,N],[17,"TESS_CONTROL_SHADER","","",N,N],[17,"TESS_CONTROL_SHADER_BIT","","",N,N],[17,"TESS_CONTROL_SUBROUTINE","","",N,N],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",N,N],[17,"TESS_CONTROL_TEXTURE","","",N,N],[17,"TESS_EVALUATION_SHADER","","",N,N],[17,"TESS_EVALUATION_SHADER_BIT","","",N,N],[17,"TESS_EVALUATION_SUBROUTINE","","",N,N],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",N,N],[17,"TESS_EVALUATION_TEXTURE","","",N,N],[17,"TESS_GEN_MODE","","",N,N],[17,"TESS_GEN_POINT_MODE","","",N,N],[17,"TESS_GEN_SPACING","","",N,N],[17,"TESS_GEN_VERTEX_ORDER","","",N,N],[17,"TEXTURE","","",N,N],[17,"TEXTURE0","","",N,N],[17,"TEXTURE1","","",N,N],[17,"TEXTURE10","","",N,N],[17,"TEXTURE11","","",N,N],[17,"TEXTURE12","","",N,N],[17,"TEXTURE13","","",N,N],[17,"TEXTURE14","","",N,N],[17,"TEXTURE15","","",N,N],[17,"TEXTURE16","","",N,N],[17,"TEXTURE17","","",N,N],[17,"TEXTURE18","","",N,N],[17,"TEXTURE19","","",N,N],[17,"TEXTURE2","","",N,N],[17,"TEXTURE20","","",N,N],[17,"TEXTURE21","","",N,N],[17,"TEXTURE22","","",N,N],[17,"TEXTURE23","","",N,N],[17,"TEXTURE24","","",N,N],[17,"TEXTURE25","","",N,N],[17,"TEXTURE26","","",N,N],[17,"TEXTURE27","","",N,N],[17,"TEXTURE28","","",N,N],[17,"TEXTURE29","","",N,N],[17,"TEXTURE3","","",N,N],[17,"TEXTURE30","","",N,N],[17,"TEXTURE31","","",N,N],[17,"TEXTURE4","","",N,N],[17,"TEXTURE5","","",N,N],[17,"TEXTURE6","","",N,N],[17,"TEXTURE7","","",N,N],[17,"TEXTURE8","","",N,N],[17,"TEXTURE9","","",N,N],[17,"TEXTURE_1D","","",N,N],[17,"TEXTURE_1D_ARRAY","","",N,N],[17,"TEXTURE_2D","","",N,N],[17,"TEXTURE_2D_ARRAY","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_3D","","",N,N],[17,"TEXTURE_ALPHA_SIZE","","",N,N],[17,"TEXTURE_ALPHA_TYPE","","",N,N],[17,"TEXTURE_BASE_LEVEL","","",N,N],[17,"TEXTURE_BINDING_1D","","",N,N],[17,"TEXTURE_BINDING_1D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D","","",N,N],[17,"TEXTURE_BINDING_2D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_BINDING_3D","","",N,N],[17,"TEXTURE_BINDING_BUFFER","","",N,N],[17,"TEXTURE_BINDING_CUBE_MAP","","",N,N],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",N,N],[17,"TEXTURE_BINDING_RECTANGLE","","",N,N],[17,"TEXTURE_BLUE_SIZE","","",N,N],[17,"TEXTURE_BLUE_TYPE","","",N,N],[17,"TEXTURE_BORDER_COLOR","","",N,N],[17,"TEXTURE_BUFFER","","",N,N],[17,"TEXTURE_BUFFER_BINDING","","",N,N],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",N,N],[17,"TEXTURE_BUFFER_OFFSET","","",N,N],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"TEXTURE_BUFFER_SIZE","","",N,N],[17,"TEXTURE_COMPARE_FUNC","","",N,N],[17,"TEXTURE_COMPARE_MODE","","",N,N],[17,"TEXTURE_COMPRESSED","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",N,N],[17,"TEXTURE_COMPRESSION_HINT","","",N,N],[17,"TEXTURE_CUBE_MAP","","",N,N],[17,"TEXTURE_CUBE_MAP_ARRAY","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",N,N],[17,"TEXTURE_DEPTH","","",N,N],[17,"TEXTURE_DEPTH_SIZE","","",N,N],[17,"TEXTURE_DEPTH_TYPE","","",N,N],[17,"TEXTURE_FETCH_BARRIER_BIT","","",N,N],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",N,N],[17,"TEXTURE_GATHER","","",N,N],[17,"TEXTURE_GATHER_SHADOW","","",N,N],[17,"TEXTURE_GREEN_SIZE","","",N,N],[17,"TEXTURE_GREEN_TYPE","","",N,N],[17,"TEXTURE_HEIGHT","","",N,N],[17,"TEXTURE_IMAGE_FORMAT","","",N,N],[17,"TEXTURE_IMAGE_TYPE","","",N,N],[17,"TEXTURE_IMMUTABLE_FORMAT","","",N,N],[17,"TEXTURE_IMMUTABLE_LEVELS","","",N,N],[17,"TEXTURE_INTERNAL_FORMAT","","",N,N],[17,"TEXTURE_LOD_BIAS","","",N,N],[17,"TEXTURE_MAG_FILTER","","",N,N],[17,"TEXTURE_MAX_LEVEL","","",N,N],[17,"TEXTURE_MAX_LOD","","",N,N],[17,"TEXTURE_MIN_FILTER","","",N,N],[17,"TEXTURE_MIN_LOD","","",N,N],[17,"TEXTURE_RECTANGLE","","",N,N],[17,"TEXTURE_RED_SIZE","","",N,N],[17,"TEXTURE_RED_TYPE","","",N,N],[17,"TEXTURE_SAMPLES","","",N,N],[17,"TEXTURE_SHADOW","","",N,N],[17,"TEXTURE_SHARED_SIZE","","",N,N],[17,"TEXTURE_STENCIL_SIZE","","",N,N],[17,"TEXTURE_SWIZZLE_A","","",N,N],[17,"TEXTURE_SWIZZLE_B","","",N,N],[17,"TEXTURE_SWIZZLE_G","","",N,N],[17,"TEXTURE_SWIZZLE_R","","",N,N],[17,"TEXTURE_SWIZZLE_RGBA","","",N,N],[17,"TEXTURE_TARGET","","",N,N],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",N,N],[17,"TEXTURE_VIEW","","",N,N],[17,"TEXTURE_VIEW_MIN_LAYER","","",N,N],[17,"TEXTURE_VIEW_MIN_LEVEL","","",N,N],[17,"TEXTURE_VIEW_NUM_LAYERS","","",N,N],[17,"TEXTURE_VIEW_NUM_LEVELS","","",N,N],[17,"TEXTURE_WIDTH","","",N,N],[17,"TEXTURE_WRAP_R","","",N,N],[17,"TEXTURE_WRAP_S","","",N,N],[17,"TEXTURE_WRAP_T","","",N,N],[17,"TIMEOUT_EXPIRED","","",N,N],[17,"TIMEOUT_IGNORED","","",N,N],[17,"TIMESTAMP","","",N,N],[17,"TIME_ELAPSED","","",N,N],[17,"TOP_LEVEL_ARRAY_SIZE","","",N,N],[17,"TOP_LEVEL_ARRAY_STRIDE","","",N,N],[17,"TRANSFORM_FEEDBACK","","",N,N],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",N,N],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",N,N],[17,"TRANSFORM_FEEDBACK_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",N,N],[17,"TRANSFORM_FEEDBACK_PAUSED","","",N,N],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYING","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",N,N],[17,"TRIANGLES","","",N,N],[17,"TRIANGLES_ADJACENCY","","",N,N],[17,"TRIANGLE_FAN","","",N,N],[17,"TRIANGLE_STRIP","","",N,N],[17,"TRIANGLE_STRIP_ADJACENCY","","",N,N],[17,"TRUE","","",N,N],[17,"TYPE","","",N,N],[17,"UNDEFINED_VERTEX","","",N,N],[17,"UNIFORM","","",N,N],[17,"UNIFORM_ARRAY_STRIDE","","",N,N],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",N,N],[17,"UNIFORM_BARRIER_BIT","","",N,N],[17,"UNIFORM_BLOCK","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",N,N],[17,"UNIFORM_BLOCK_BINDING","","",N,N],[17,"UNIFORM_BLOCK_DATA_SIZE","","",N,N],[17,"UNIFORM_BLOCK_INDEX","","",N,N],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"UNIFORM_BUFFER","","",N,N],[17,"UNIFORM_BUFFER_BINDING","","",N,N],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"UNIFORM_BUFFER_SIZE","","",N,N],[17,"UNIFORM_BUFFER_START","","",N,N],[17,"UNIFORM_IS_ROW_MAJOR","","",N,N],[17,"UNIFORM_MATRIX_STRIDE","","",N,N],[17,"UNIFORM_NAME_LENGTH","","",N,N],[17,"UNIFORM_OFFSET","","",N,N],[17,"UNIFORM_SIZE","","",N,N],[17,"UNIFORM_TYPE","","",N,N],[17,"UNKNOWN_CONTEXT_RESET","","",N,N],[17,"UNPACK_ALIGNMENT","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"UNPACK_IMAGE_HEIGHT","","",N,N],[17,"UNPACK_LSB_FIRST","","",N,N],[17,"UNPACK_ROW_LENGTH","","",N,N],[17,"UNPACK_SKIP_IMAGES","","",N,N],[17,"UNPACK_SKIP_PIXELS","","",N,N],[17,"UNPACK_SKIP_ROWS","","",N,N],[17,"UNPACK_SWAP_BYTES","","",N,N],[17,"UNSIGNALED","","",N,N],[17,"UNSIGNED_BYTE","","",N,N],[17,"UNSIGNED_BYTE_2_3_3_REV","","",N,N],[17,"UNSIGNED_BYTE_3_3_2","","",N,N],[17,"UNSIGNED_INT","","",N,N],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",N,N],[17,"UNSIGNED_INT_10_10_10_2","","",N,N],[17,"UNSIGNED_INT_24_8","","",N,N],[17,"UNSIGNED_INT_2_10_10_10_REV","","",N,N],[17,"UNSIGNED_INT_5_9_9_9_REV","","",N,N],[17,"UNSIGNED_INT_8_8_8_8","","",N,N],[17,"UNSIGNED_INT_8_8_8_8_REV","","",N,N],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",N,N],[17,"UNSIGNED_INT_IMAGE_1D","","",N,N],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",N,N],[17,"UNSIGNED_INT_IMAGE_3D","","",N,N],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",N,N],[17,"UNSIGNED_INT_IMAGE_CUBE","","",N,N],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",N,N],[17,"UNSIGNED_INT_SAMPLER_3D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",N,N],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",N,N],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"UNSIGNED_INT_VEC2","","",N,N],[17,"UNSIGNED_INT_VEC3","","",N,N],[17,"UNSIGNED_INT_VEC4","","",N,N],[17,"UNSIGNED_NORMALIZED","","",N,N],[17,"UNSIGNED_SHORT","","",N,N],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",N,N],[17,"UNSIGNED_SHORT_5_5_5_1","","",N,N],[17,"UNSIGNED_SHORT_5_6_5","","",N,N],[17,"UNSIGNED_SHORT_5_6_5_REV","","",N,N],[17,"UPPER_LEFT","","",N,N],[17,"VALIDATE_STATUS","","",N,N],[17,"VENDOR","","",N,N],[17,"VERSION","","",N,N],[17,"VERTEX_ARRAY","","",N,N],[17,"VERTEX_ARRAY_BINDING","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",N,N],[17,"VERTEX_ATTRIB_BINDING","","",N,N],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",N,N],[17,"VERTEX_BINDING_BUFFER","","",N,N],[17,"VERTEX_BINDING_DIVISOR","","",N,N],[17,"VERTEX_BINDING_OFFSET","","",N,N],[17,"VERTEX_BINDING_STRIDE","","",N,N],[17,"VERTEX_PROGRAM_POINT_SIZE","","",N,N],[17,"VERTEX_SHADER","","",N,N],[17,"VERTEX_SHADER_BIT","","",N,N],[17,"VERTEX_SUBROUTINE","","",N,N],[17,"VERTEX_SUBROUTINE_UNIFORM","","",N,N],[17,"VERTEX_TEXTURE","","",N,N],[17,"VIEWPORT","","",N,N],[17,"VIEWPORT_BOUNDS_RANGE","","",N,N],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",N,N],[17,"VIEWPORT_SUBPIXEL_BITS","","",N,N],[17,"VIEW_CLASS_128_BITS","","",N,N],[17,"VIEW_CLASS_16_BITS","","",N,N],[17,"VIEW_CLASS_24_BITS","","",N,N],[17,"VIEW_CLASS_32_BITS","","",N,N],[17,"VIEW_CLASS_48_BITS","","",N,N],[17,"VIEW_CLASS_64_BITS","","",N,N],[17,"VIEW_CLASS_8_BITS","","",N,N],[17,"VIEW_CLASS_96_BITS","","",N,N],[17,"VIEW_CLASS_BPTC_FLOAT","","",N,N],[17,"VIEW_CLASS_BPTC_UNORM","","",N,N],[17,"VIEW_CLASS_RGTC1_RED","","",N,N],[17,"VIEW_CLASS_RGTC2_RG","","",N,N],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",N,N],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",N,N],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",N,N],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",N,N],[17,"VIEW_COMPATIBILITY_CLASS","","",N,N],[17,"WAIT_FAILED","","",N,N],[17,"WRITE_ONLY","","",N,N],[17,"XOR","","",N,N],[17,"ZERO","","",N,N],[17,"ZERO_TO_ONE","","",N,N],[11,"new","","Creates a `FnPtr` from a load attempt.",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","gl::types","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]]],"paths":[[3,"FnPtr"],[4,"__GLsync"],[4,"_cl_context"],[4,"_cl_event"]]};
searchIndex["graphics"]={"doc":"A library for 2D graphics that works with multiple back-ends.","items":[[8,"ImageSize","graphics","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",0,N],[11,"get_width","","Gets the image width.",0,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",0,[[["self"]],["u32"]]],[3,"Viewport","","Stores viewport information.",N,N],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)` is lower left corner.",1,N],[12,"draw_size","","The size of frame buffer in pixels.",1,N],[12,"window_size","","The size of window in points.",1,N],[5,"clear","","Clears the screen.",N,[[["color"],["g"]]]],[5,"image","","Draws image.",N,N],[5,"ellipse","","Draws ellipse.",N,[[["color"],["r"],["matrix2d"],["g"]]]],[5,"circle_arc","","Draws arc",N,[[["color"],["radius"],["scalar"],["scalar"],["r"],["matrix2d"],["g"]]]],[5,"rectangle","","Draws rectangle.",N,[[["color"],["r"],["matrix2d"],["g"]]]],[5,"polygon","","Draws polygon.",N,[[["color"],["polygon"],["matrix2d"],["g"]]]],[5,"line","","Draws line.",N,[[["color"],["radius"],["l"],["matrix2d"],["g"]]]],[5,"text","","Draws text.",N,[[["color"],["fontsize"],["str"],["c"],["matrix2d"],["g"]],["result"]]],[0,"draw_state","","Graphics draw state.",N,N],[3,"DrawState","graphics::draw_state","Graphics draw state used for blending, clipping and stencil rendering.",N,N],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be written to as a result of rendering.",2,N],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",2,N],[12,"blend","","Blend function to use. If None, blending is disabled.",2,N],[4,"Blend","","The blend setting to use when drawing.",N,N],[13,"Alpha","","Alpha blending (allows semi-transparent pixels).",3,N],[13,"Add","","Additive blending.",3,N],[13,"Multiply","","Multiply color components.",3,N],[13,"Invert","","Invert colors when rendering a white shape.",3,N],[4,"Stencil","","Stencil buffer settings.",N,N],[13,"Clip","","Draw to stencil buffer.",4,N],[13,"Inside","","Draw pixels that have stencil value.",4,N],[13,"Outside","","Draw pixels that does not have stencil value.",4,N],[11,"new_alpha","","Uses alpha blending.",2,[[],["drawstate"]]],[11,"new_clip","","Draws to stencil buffer with value 255. This can be used for clipping.",2,[[],["drawstate"]]],[11,"new_inside","","Tests against stencil buffer with value 255. Draws inside the shape defined by stencil buffer.",2,[[],["drawstate"]]],[11,"new_outside","","Tests against stencil buffer with value 255. Draws outside the shape defined by stencil buffer.",2,[[],["drawstate"]]],[11,"blend","","Sets blending.",2,[[["self"],["blend"]],["drawstate"]]],[11,"scissor","","Sets scissor `[x, y, w, h]`.",2,N],[0,"character","graphics","A text character",N,N],[3,"Character","graphics::character","Holds rendered character data.",N,N],[12,"offset","","The offset of character.",5,N],[12,"size","","The size of character, including space.",5,N],[12,"texture","","The texture of the character.",5,N],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",N,N],[16,"Texture","","The texture type associated with the character cache.",6,N],[16,"Error","","The error type associated with the character cache.",6,N],[10,"character","","Get reference to character.",6,[[["self"],["fontsize"],["char"]],["result",["character"]]]],[11,"width","","Return the width for some given text.",6,[[["self"],["fontsize"],["str"]],["result",["scalar"]]]],[11,"left","","The left offset.",5,[[["self"]],["scalar"]]],[11,"top","","The top offset.",5,[[["self"]],["scalar"]]],[11,"width","","Gets width of character, including space to the next one.",5,[[["self"]],["scalar"]]],[11,"height","","Sets height of character, including space to the next one.",5,[[["self"]],["scalar"]]],[0,"context","graphics","Transformation context",N,N],[3,"Context","graphics::context","Drawing 2d context.",N,N],[12,"viewport","","Viewport information.",7,N],[12,"view","","View transformation.",7,N],[12,"transform","","Current transformation.",7,N],[12,"draw_state","","Current draw state settings.",7,N],[11,"new","","Creates a new drawing context.",7,[[],["context"]]],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",7,[[["viewport"]],["context"]]],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",7,[[["scalar"],["scalar"]],["context"]]],[11,"view","","Moves the current transform to the view coordinate system.",7,[[["self"]],["self"]]],[11,"reset","","Moves the current transform to the default coordinate system.",7,[[["self"]],["self"]]],[11,"store_view","","Stores the current transform as new view.",7,[[["self"]],["self"]]],[11,"get_view_size","","Computes the current view size.",7,[[["self"]],["vec2d"]]],[0,"color","graphics","Helper methods for colors",N,N],[5,"grey","graphics::color","Returns a grey color",N,[[["colorcomponent"]],["color"]]],[5,"alpha","","Returns a semi-transparent white color",N,[[["colorcomponent"]],["color"]]],[5,"hex","","Converts from hexadecimal color format",N,[[["str"]],["color"]]],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color space.",N,[[["color"]],["color"]]],[5,"gamma_linear_to_srgb","","Converts gamma (brightness) of a color from linear color space to sRGB.",N,[[["color"]],["color"]]],[17,"WHITE","","White color.",N,N],[17,"BLACK","","Black color.",N,N],[17,"TRANSPARENT","","Transparent color.",N,N],[0,"polygon","graphics","Draw polygon",N,N],[3,"Polygon","graphics::polygon","A polygon",N,N],[12,"color","","The color of the polygon",8,N],[11,"new","","Creates new polygon",8,[[["color"]],["polygon"]]],[11,"color","","Sets color.",8,[[["self"],["color"]],["self"]]],[11,"draw","","Draws polygon using the default method.",8,[[["self"],["polygon"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws polygon using triangulation.",8,[[["self"],["polygon"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation, using default method.",8,[[["self"],["polygons"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tween_lerp_tri","","Draws tweened polygon with linear interpolation, using triangulation.",8,[[["self"],["polygons"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[0,"line","graphics","Draw Line",N,N],[3,"Line","graphics::line","A colored line with a default border radius",N,N],[12,"color","","The line color",9,N],[12,"radius","","The line radius",9,N],[12,"shape","","The line shape",9,N],[4,"Shape","","The shape of the line",N,N],[13,"Square","","Square edges",10,N],[13,"Round","","Round edges",10,N],[13,"Bevel","","Bevel edges",10,N],[11,"new","","Creates a new line",9,[[["color"],["radius"]],["line"]]],[11,"new_round","","Creates a new line",9,[[["color"],["radius"]],["line"]]],[11,"color","","Sets color.",9,[[["self"],["color"]],["self"]]],[11,"radius","","Sets radius.",9,[[["self"],["radius"]],["self"]]],[11,"width","","Sets width.",9,[[["self"],["width"]],["self"]]],[11,"shape","","Sets shape.",9,[[["self"],["shape"]],["self"]]],[11,"draw","","Draws line using default method.",9,[[["self"],["l"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws line using triangulation.",9,[[["self"],["l"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_arrow","","Draws an arrow",9,[[["self"],["l"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[0,"circle_arc","graphics","Draw an arc",N,N],[3,"CircleArc","graphics::circle_arc","A curved line",N,N],[12,"color","","The arcs color",11,N],[12,"radius","","The radius of the arc (Thickness of the drawing, not the radius of the circle)",11,N],[12,"start","","The start of the arc in radians",11,N],[12,"end","","The end of the arc in radians",11,N],[12,"resolution","","The resolution for the arc.",11,N],[11,"new","","Creates a new arc",11,[[["color"],["radius"],["scalar"],["scalar"]],["circlearc"]]],[11,"color","","Sets the arcs color.",11,[[["self"],["color"]],["self"]]],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the radius of the circle it wraps)",11,[[["self"],["radius"]],["self"]]],[11,"start","","Sets the start of the arc (in radians).",11,[[["self"],["scalar"]],["self"]]],[11,"end","","Sets the end of the arc (in radians).",11,[[["self"],["scalar"]],["self"]]],[11,"resolution","","Sets the resolution of the arcs smoothness.",11,[[["self"],["resolution"]],["self"]]],[11,"draw","","Draws circle arc using default method.",11,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws circle arc using triangulation.",11,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"ellipse","graphics","Draw ellipse",N,N],[3,"Border","graphics::ellipse","Ellipse border",N,N],[12,"color","","The border color",12,N],[12,"radius","","The border radius",12,N],[3,"Ellipse","","An ellipse with filled color",N,N],[12,"color","","The ellipse color",13,N],[12,"border","","The ellipse border",13,N],[12,"resolution","","The resolution for the shape, 360 degrees.",13,N],[11,"new","","Creates a new ellipse",13,[[["color"]],["ellipse"]]],[11,"new_border","","Creates a new ellipse border",13,[[["color"],["radius"]],["ellipse"]]],[11,"color","","Sets ellipse color.",13,[[["self"],["color"]],["self"]]],[11,"border","","Sets ellipse border.",13,[[["self"],["border"]],["self"]]],[11,"maybe_border","","Sets optional ellipse border.",13,[[["self"],["option",["border"]]],["self"]]],[11,"resolution","","Sets resolution of the ellipse smoothness.",13,[[["self"],["resolution"]],["self"]]],[11,"draw","","Draws ellipse using default method.",13,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws ellipse using triangulation.",13,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"rectangle","graphics","Draw rectangle",N,N],[3,"Border","graphics::rectangle","The border of the rectangle",N,N],[12,"color","","The color of the border",14,N],[12,"radius","","The radius of the border. The half-width of the line by which border is drawn.",14,N],[3,"Rectangle","","A filled rectangle",N,N],[12,"color","","The rectangle color",15,N],[12,"shape","","The roundness of the rectangle",15,N],[12,"border","","The border",15,N],[4,"Shape","","The shape of the rectangle corners",N,N],[13,"Square","","Square corners",16,N],[13,"Round","","Round corners, with resolution per corner.",16,N],[13,"Bevel","","Bevel corners",16,N],[5,"rectangle_by_corners","","Create `types::Rectangle` by the two opposite corners.",N,[[["scalar"],["scalar"],["scalar"],["scalar"]],["rectangle"]]],[5,"centered","","Use x, y, half-width, half-height",N,[[["rectangle"]],["rectangle"]]],[5,"centered_square","","Create `types::Rectangle` for a square with a center in (`x`, `y`) and side `2 * radius`.",N,[[["scalar"],["scalar"],["scalar"]],["rectangle"]]],[5,"square","","Create `types::Rectangle` for a square with a top-left corner in (`x`, `y`) and side `size`.",N,[[["scalar"],["scalar"],["scalar"]],["rectangle"]]],[11,"new","","Creates a new rectangle.",15,[[["color"]],["rectangle"]]],[11,"new_round","","Creates a new rectangle with rounded corners.",15,[[["color"],["radius"]],["rectangle"]]],[11,"new_border","","Creates a new rectangle border.",15,[[["color"],["radius"]],["rectangle"]]],[11,"new_round_border","","Creates a new rectangle border with rounded corners.",15,[[["color"],["radius"],["radius"]],["rectangle"]]],[11,"color","","Sets color.",15,[[["self"],["color"]],["self"]]],[11,"shape","","Sets shape of the corners.",15,[[["self"],["shape"]],["self"]]],[11,"border","","Sets border properties.",15,[[["self"],["border"]],["self"]]],[11,"maybe_border","","Sets optional border.",15,[[["self"],["option",["border"]]],["self"]]],[11,"draw","","Draws the rectangle using the default method.",15,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws the rectangle using triangulation.",15,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"image","graphics","Draw an image",N,N],[3,"Image","graphics::image","An image",N,N],[12,"color","","The color",17,N],[12,"rectangle","","The rectangle to draw image inside",17,N],[12,"source_rectangle","","The image source rectangle",17,N],[5,"draw_many","","Draws many images.",N,N],[11,"new","","Creates a new image",17,[[],["image"]]],[11,"new_color","","Creates a new colored image",17,[[["color"]],["image"]]],[11,"color","","Sets color.",17,[[["self"],["color"]],["self"]]],[11,"maybe_color","","Sets optional color.",17,[[["self"],["option",["color"]]],["self"]]],[11,"rect","","Sets rectangle.",17,[[["self"],["r"]],["self"]]],[11,"maybe_rect","","Sets optional rectangle.",17,[[["self"],["option"]],["self"]]],[11,"src_rect","","Sets source rectangle.",17,[[["self"],["sourcerectangle"]],["self"]]],[11,"maybe_src_rect","","Sets optional source rectangle.",17,[[["self"],["option",["sourcerectangle"]]],["self"]]],[11,"draw","","Draws image using default method.",17,N],[11,"draw_tri","","Draws image using triangulation.",17,N],[0,"types","graphics","Contains type aliases used in this library",N,N],[6,"Area","graphics::types","The type used for area.",N,N],[6,"Color","","[red, green, blue, alpha]",N,N],[6,"ColorComponent","","The type used for color component.",N,N],[6,"Line","","[x1, y1, x2, y2]",N,N],[6,"SourceRectangle","","[x, y, w, h]",N,N],[6,"Polygon","","[p0, p1, ...]",N,N],[6,"Polygons","","A slice of polygons.",N,N],[6,"Radius","","The type used for radius.",N,N],[6,"Resolution","","The type used for resolution.",N,N],[6,"Ray","","[x, y, dir_x, dir_y]",N,N],[6,"Rectangle","","Rectangle dimensions: [x, y, w, h]",N,N],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",N,N],[6,"Width","","The type used for width.",N,N],[6,"FontSize","","The type used for font size.",N,N],[0,"modular_index","graphics","Helper functions for computing modular index safely.",N,N],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",N,[[["usize"],["usize"],["isize"]],["usize"]]],[5,"previous","","Computes previous modular index safely.",N,[[["usize"],["usize"]],["usize"]]],[5,"next","","Computes next modular index safely.",N,[[["usize"],["usize"]],["usize"]]],[0,"text","graphics","Draw text",N,N],[3,"Text","graphics::text","Renders text",N,N],[12,"color","","The color",18,N],[12,"font_size","","The font size",18,N],[12,"round","","Whether or not the text's position should be rounded (to a signed distance field).",18,N],[11,"new","","Creates a new text with black color",18,[[["fontsize"]],["text"]]],[11,"new_color","","Creates a new colored text",18,[[["color"],["fontsize"]],["text"]]],[11,"round","","A builder method indicating that the Text's position should be rounded upon drawing.",18,[[["self"]],["text"]]],[11,"draw","","Draws text with a character cache",18,[[["self"],["str"],["c"],["drawstate"],["matrix2d"],["g"]],["result"]]],[0,"triangulation","graphics","Methods for converting shapes into triangles.",N,N],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",N,[[["matrix2d"],["scalar"],["scalar"]],["f32"]]],[5,"ty","","Transformed y coordinate as f32.",N,[[["matrix2d"],["scalar"],["scalar"]],["f32"]]],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",N,[[["matrix2d"],["polygons"],["scalar"],["f"]]]],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",N,[[["resolution"],["matrix2d"],["rectangle"],["f"]]]],[5,"with_round_border_line_tri_list","","Streams a round border line.",N,[[["resolution"],["matrix2d"],["line"],["radius"],["f"]]]],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"stream_polygon_tri_list","","Streams a polygon into tri list. Uses buffers that fit inside L1 cache.",N,[[["matrix2d"],["e"],["f"]]]],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",N,[[["scalar"],["scalar"],["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["radius"],["f"]]]],[5,"stream_quad_tri_list","","Streams a quad into tri list.",N,[[["matrix2d"],["e"],["f"]]]],[5,"with_polygon_tri_list","","Splits polygon into convex segments. Create a buffer that fits into L1 cache with 1KB overhead.",N,[[["matrix2d"],["polygon"],["f"]]]],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",N,N],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",N,N],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",N,N],[0,"math","graphics","Various methods for computing with vectors.",N,N],[5,"multiply","graphics::math","Multiplies two matrices.",N,N],[5,"dot","","Computes the dot product.",N,N],[5,"cross","","Computes the cross product.",N,N],[5,"add","","Adds two vectors.",N,N],[5,"sub","","Subtracts 'b' from 'a'.",N,N],[5,"cast","","Converts to another vector type.",N,N],[5,"mul","","Multiplies two vectors component wise.",N,N],[5,"mul_scalar","","Multiplies the vector with a scalar.",N,N],[5,"square_len","","Computes the square length of a vector.",N,N],[5,"transform_pos","","Transforms a 2D position through matrix.",N,N],[5,"transform_vec","","Transforms a 2D vector through matrix.",N,N],[5,"perp","","Creates a perpendicular vector.",N,N],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",N,[[["t"],["t"]],["matrix2d"]]],[5,"translate","","Creates a translation matrix.",N,[[["vec2d"]],["matrix2d"]]],[5,"rotate_radians","","Creates a rotation matrix.",N,[[["t"]],["matrix2d"]]],[5,"orient","","Orients x axis to look at point.",N,[[["t"],["t"]],["matrix2d"]]],[5,"scale","","Create a scale matrix.",N,[[["t"],["t"]],["matrix2d"]]],[5,"shear","","Create a shear matrix.",N,[[["vec2d"]],["matrix2d"]]],[5,"identity","","Create an identity matrix.",N,[[],["matrix2d"]]],[5,"get_scale","","Extract scale information from matrix.",N,[[["matrix2d"]],["vec2d"]]],[5,"separation","","Compute the shortest vector from point to ray. A ray stores starting point and directional vector.",N,[[["ray"],["vec2d"]],["vec2d"]]],[5,"least_separation_4","","Returns the least separation out of four. Each seperation can be computed using `separation` function. The separation returned can be used to solve collision of rectangles.",N,[[["vec2d"],["vec2d"],["vec2d"],["vec2d"]],["vec2d"]]],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",N,[[["rectangle"],["t"]],["rectangle"]]],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",N,[[["rectangle"],["vec2d"]],["rectangle"]]],[5,"overlap_rectangle","","Computes overlap between two rectangles. The area of the overlapping rectangle is positive. A shared edge or corner is not considered overlap.",N,[[["rectangle"],["rectangle"]],["option",["rectangle"]]]],[5,"relative_source_rectangle","","Computes a relative source rectangle using the source rectangle as a tile.",N,[[["sourcerectangle"],["t"],["t"]],["sourcerectangle"]]],[5,"modular_offset","","Computes modular offset safely for numbers.",N,[[["t"],["t"],["t"]],["t"]]],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",N,N],[5,"area","","Computes area of a simple polygon.",N,[[["polygon"]],["t"]]],[5,"centroid","","Computes centroid of a simple polygon.",N,[[["polygon"]],["vec2d"]]],[5,"line_side","","Returns a number that tells which side it is relative to a line.",N,[[["line"],["vec2d"]],["t"]]],[5,"inside_triangle","","Returns true if point is inside triangle.",N,[[["triangle"],["vec2d"]],["bool"]]],[5,"triangle_face","","Returns true if triangle is clockwise.",N,[[["triangle"]],["bool"]]],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",N,[[["triangle"],["vec2d"]],["vec3d"]]],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",N,[[["triangle"],["vec3d"]],["vec2d"]]],[5,"hsv","","Transform color with hue, saturation and value.",N,[[["color"],["f32"],["f32"],["f32"]],["color"]]],[6,"Scalar","","The type used for scalars.",N,N],[6,"Matrix2d","","The type used for matrices.",N,N],[6,"Vec2d","","The type used for 2D vectors.",N,N],[6,"Vec3d","","The type used for 3D vectors.",N,N],[0,"deform","graphics","Least square deforming of a 2D grid.",N,N],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",N,N],[12,"cols","","The number of columns in the grid.",19,N],[12,"rows","","The number of rows in the grid.",19,N],[12,"rect","","The grid undeformed, which is a plain rectangle.",19,N],[12,"vertices","","The vertices, deformed.",19,N],[12,"indices","","The triangle indices.",19,N],[12,"texture_coords","","The texture coordinates.",19,N],[12,"ps","","Initial position of control points.",19,N],[12,"qs","","The current position of control points.",19,N],[12,"wis","","A weight computation buffer, one for each control point.",19,N],[11,"new","","Creates a new DeformGrid.",19,[[["rectangle"],["usize"],["usize"]],["deformgrid"]]],[11,"set_current","","Sets current control position.",19,[[["self"],["usize"],["vec2d"]]]],[11,"set_original","","Sets original control position.",19,[[["self"],["usize"],["vec2d"]]]],[11,"reset_control_points","","Removes all control points.",19,[[["self"]]]],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",19,[[["self"]]]],[11,"hit","","Finds original coordinate. If the deformed grid is overlapping itself, multiple hits might occur. Returns the first hit it finds.",19,[[["self"],["vec2d"]],["option",["vec2d"]]]],[11,"draw_image","","Draws deformed image using default method.",19,N],[11,"draw_image_tri","","Draws deformed image using triangulation.",19,N],[11,"add_control_point","","Adds a control point, in original coordinates.",19,[[["self"],["vec2d"]]]],[11,"draw_vertical_lines","","Draw vertical grid lines.",19,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",19,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"update","","Updates the grid, by deforming the vertices.",19,[[["self"]]]],[0,"grid","graphics","A flat grid with square cells.",N,N],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",N,N],[12,"cols","","Number of columns.",20,N],[12,"rows","","Number of rows.",20,N],[12,"units","","The width and height of each grid cell.",20,N],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",N,N],[11,"draw","","Draws the grid.",20,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"cells","","Get a GridIterator for the grid",20,[[["self"]],["gridcells"]]],[11,"cell_position","","Get on-screen position of a grid cell",20,N],[11,"x_pos","","Get on-screen x position of a grid cell",20,N],[11,"y_pos","","Get on-screen y position of a grid cell",20,N],[0,"glyph_cache","graphics","Implementations of the `CharacterCache` trait.",N,N],[0,"rusttype","graphics::glyph_cache","Glyph caching using the RustType library.",N,N],[3,"GlyphCache","graphics::glyph_cache::rusttype","A struct used for caching rendered font.",N,N],[12,"font","","The font.",21,N],[12,"factory","","The factory used to create textures.",21,N],[11,"from_font","","Constructs a GlyphCache from a Font.",21,[[["font"],["f"],["texturesettings"]],["self"]]],[11,"new","","Constructor for a GlyphCache.",21,[[["p"],["f"],["texturesettings"]],["result",["glyphcache"]]]],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",21,N],[11,"preload_chars","","Load all characters in the `chars` iterator for `size`",21,[[["self"],["fontsize"],["i"]],["result"]]],[11,"preload_printable_ascii","","Load all the printable ASCII characters for `size`. Includes space.",21,[[["self"],["fontsize"]],["result"]]],[11,"opt_character","","Return `ch` for `size` if it's already cached. Don't load. See the `preload_*` functions.",21,[[["self"],["fontsize"],["char"]],["option",["character"]]]],[0,"radians","graphics","Reexport radians helper trait from vecmath",N,N],[8,"Radians","graphics::radians","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",22,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",22,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",22,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",22,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",22,[[["self"]],["self"]]],[17,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end never exceeds this number of vertices. This can be used to initialize buffers that fit the chunk size.",N,N],[8,"Graphics","","Implemented by all graphics back-ends.",N,N],[16,"Texture","","The texture type associated with the back-end.",23,N],[10,"clear_color","","Clears background with a color.",23,[[["self"],["color"]]]],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",23,[[["self"],["u8"]]]],[10,"tri_list","","Renders list of 2d triangles using a solid color.",23,N],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",23,N],[11,"rectangle","","Draws a rectangle.",23,[[["self"],["rectangle"],["r"],["drawstate"],["matrix2d"]]]],[11,"polygon","","Draws a polygon.",23,[[["self"],["polygon"],["polygon"],["drawstate"],["matrix2d"]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["self"],["polygon"],["polygons"],["scalar"],["drawstate"],["matrix2d"]]]],[11,"image","","Draws image.",23,N],[11,"ellipse","","Draws ellipse.",23,[[["self"],["ellipse"],["r"],["drawstate"],["matrix2d"]]]],[11,"line","","Draws line.",23,[[["self"],["line"],["l"],["drawstate"],["matrix2d"]]]],[11,"circle_arc","","Draws circle arc.",23,[[["self"],["circlearc"],["r"],["drawstate"],["matrix2d"]]]],[11,"deform_image","","Draws deformed image.",23,N],[8,"SourceRectangled","","Should be implemented by contexts that have source rectangle information.",N,N],[10,"src_rect","","Adds a source rectangle.",24,[[["self"],["scalar"],["scalar"],["scalar"],["scalar"]],["self"]]],[10,"src_rel","","Moves to a relative source rectangle using the current source rectangle as tile.",24,[[["self"],["scalar"],["scalar"]],["self"]]],[10,"src_flip_h","","Flips the source rectangle horizontally.",24,[[["self"]],["self"]]],[10,"src_flip_v","","Flips the source rectangle vertically.",24,[[["self"]],["self"]]],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",24,[[["self"]],["self"]]],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",N,N],[10,"margin","","Shrinks the current rectangle equally by all sides.",25,[[["self"],["scalar"]],["self"]]],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["self"],["scalar"]],["self"]]],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",25,[[["self"],["scalar"],["scalar"]],["self"]]],[8,"Transformed","","Implemented by contexts that can transform.",N,N],[10,"append_transform","","Appends transform to the current one.",26,[[["self"],["matrix2d"]],["self"]]],[10,"prepend_transform","","Prepends transform to the current one.",26,[[["self"],["matrix2d"]],["self"]]],[10,"trans","","Translate x and y in local coordinates.",26,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["self"],["scalar"]],["self"]]],[10,"rot_rad","","Rotate radians in local coordinates.",26,[[["self"],["scalar"]],["self"]]],[10,"orient","","Orients x axis to look at point locally.",26,[[["self"],["scalar"],["scalar"]],["self"]]],[10,"scale","","Scales in local coordinates.",26,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["self"],["scalar"]],["self"]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[["self"]],["self"]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[["self"]],["self"]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[["self"]],["self"]]],[10,"shear","","Shears in local coordinates.",26,[[["self"],["vec2d"]],["self"]]],[8,"Colored","","Implemented by contexts that contains color.",N,N],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",27,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"tint","","Mixes the current color with white.",27,[[["self"],["colorcomponent"]],["self"]]],[11,"shade","","Mixes the current color with black.",27,[[["self"],["colorcomponent"]],["self"]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["self"],["colorcomponent"]],["self"]]],[10,"hue_rad","","Rotates hue by radians.",27,[[["self"],["colorcomponent"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","graphics::draw_state","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","graphics::character","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","graphics::context","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","graphics::polygon","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","graphics::line","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","graphics::circle_arc","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","graphics::ellipse","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","graphics::rectangle","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","graphics::image","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","graphics::text","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","graphics::deform","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","graphics::grid","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","graphics::glyph_cache::rusttype","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"clone","graphics","",1,[[["self"]],["viewport"]]],[11,"src_rect","","",29,[[["self"],["scalar"],["scalar"],["scalar"],["scalar"]],["self"]]],[11,"src_rel","","",29,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"src_flip_h","","",29,[[["self"]],["self"]]],[11,"src_flip_v","","",29,[[["self"]],["self"]]],[11,"src_flip_hv","","",29,[[["self"]],["self"]]],[11,"margin","","",30,[[["self"],["scalar"]],["self"]]],[11,"rel","","",30,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"append_transform","","",31,[[["self"],["matrix2d"]],["self"]]],[11,"prepend_transform","","",31,[[["self"],["matrix2d"]],["self"]]],[11,"trans","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_rad","","",31,[[["self"],["scalar"]],["self"]]],[11,"orient","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"scale","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"shear","","",31,[[["self"],["vec2d"]],["self"]]],[11,"append_transform","graphics::context","",7,[[["self"],["matrix2d"]],["self"]]],[11,"prepend_transform","","",7,[[["self"],["matrix2d"]],["self"]]],[11,"trans","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_rad","","",7,[[["self"],["scalar"]],["self"]]],[11,"orient","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"scale","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"shear","","",7,[[["self"],["vec2d"]],["self"]]],[11,"mul_rgba","graphics","",32,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",32,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::line","",9,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",9,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::ellipse","",13,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",13,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::rectangle","",15,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",15,[[["self"],["colorcomponent"]],["self"]]],[11,"character","graphics::glyph_cache::rusttype","",21,[[["self"],["fontsize"],["char"]],["result",["character"]]]],[11,"clone","graphics::draw_state","",2,[[["self"]],["drawstate"]]],[11,"clone","","",3,[[["self"]],["blend"]]],[11,"clone","","",4,[[["self"]],["stencil"]]],[11,"clone","graphics::character","",5,[[["self"]],["character"]]],[11,"clone","graphics::context","",7,[[["self"]],["context"]]],[11,"clone","graphics::polygon","",8,[[["self"]],["polygon"]]],[11,"clone","graphics::line","",10,[[["self"]],["shape"]]],[11,"clone","","",9,[[["self"]],["line"]]],[11,"clone","graphics::circle_arc","",11,[[["self"]],["circlearc"]]],[11,"clone","graphics::ellipse","",12,[[["self"]],["border"]]],[11,"clone","","",13,[[["self"]],["ellipse"]]],[11,"clone","graphics::rectangle","",16,[[["self"]],["shape"]]],[11,"clone","","",14,[[["self"]],["border"]]],[11,"clone","","",15,[[["self"]],["rectangle"]]],[11,"clone","graphics::image","",17,[[["self"]],["image"]]],[11,"clone","graphics::text","",18,[[["self"]],["text"]]],[11,"clone","graphics::deform","",19,[[["self"]],["deformgrid"]]],[11,"clone","graphics::grid","",20,[[["self"]],["grid"]]],[11,"clone","","",28,[[["self"]],["gridcells"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"partial_cmp","graphics::draw_state","",2,[[["self"],["drawstate"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"le","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"gt","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"ge","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["blend"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["stencil"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["stencil"]],["bool"]]],[11,"le","","",4,[[["self"],["stencil"]],["bool"]]],[11,"gt","","",4,[[["self"],["stencil"]],["bool"]]],[11,"ge","","",4,[[["self"],["stencil"]],["bool"]]],[11,"default","","",2,[[],["self"]]],[11,"eq","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"ne","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"eq","","",3,[[["self"],["blend"]],["bool"]]],[11,"eq","","",4,[[["self"],["stencil"]],["bool"]]],[11,"ne","","",4,[[["self"],["stencil"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","graphics::grid","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"abs_transform","graphics","Computes absolute transform for 2D graphics, which uses a row major 2x3 matrix. The origin is in the upper left corner of the viewport rectangle. The x axis points to the right, and the y axis points down. The units are in points (window coordinates).",1,N],[11,"rectangle","","Draws a rectangle.",23,[[["self"],["rectangle"],["r"],["drawstate"],["matrix2d"]]]],[11,"polygon","","Draws a polygon.",23,[[["self"],["polygon"],["polygon"],["drawstate"],["matrix2d"]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,[[["self"],["polygon"],["polygons"],["scalar"],["drawstate"],["matrix2d"]]]],[11,"image","","Draws image.",23,N],[11,"ellipse","","Draws ellipse.",23,[[["self"],["ellipse"],["r"],["drawstate"],["matrix2d"]]]],[11,"line","","Draws line.",23,[[["self"],["line"],["l"],["drawstate"],["matrix2d"]]]],[11,"circle_arc","","Draws circle arc.",23,[[["self"],["circlearc"],["r"],["drawstate"],["matrix2d"]]]],[11,"deform_image","","Draws deformed image.",23,N],[11,"expand","","Expands the current rectangle equally by all sides.",25,[[["self"],["scalar"]],["self"]]],[11,"rot_deg","","Rotates degrees in local coordinates.",26,[[["self"],["scalar"]],["self"]]],[11,"zoom","","Scales in both directions in local coordinates.",26,[[["self"],["scalar"]],["self"]]],[11,"flip_v","","Flips vertically in local coordinates.",26,[[["self"]],["self"]]],[11,"flip_h","","Flips horizontally in local coordinates.",26,[[["self"]],["self"]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,[[["self"]],["self"]]],[11,"tint","","Mixes the current color with white.",27,[[["self"],["colorcomponent"]],["self"]]],[11,"shade","","Mixes the current color with black.",27,[[["self"],["colorcomponent"]],["self"]]],[11,"hue_deg","","Rotates hue by degrees.",27,[[["self"],["colorcomponent"]],["self"]]]],"paths":[[8,"ImageSize"],[3,"Viewport"],[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GlyphCache"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[3,"GridCells"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image encoders and decoders and basic image manipulation functions.","items":[[3,"Luma","image","Grayscale colors",N,N],[12,"data","","",0,N],[3,"LumaA","","Grayscale colors + alpha channel",N,N],[12,"data","","",1,N],[3,"Rgb","","RGB colors",N,N],[12,"data","","",2,N],[3,"Rgba","","RGB colors + alpha channel",N,N],[12,"data","","",3,N],[3,"SubImage","","A View into another image",N,N],[3,"Pixels","","Immutable pixel iterator",N,N],[3,"MutPixels","","Mutable pixel iterator",N,N],[3,"ImageBuffer","","Generic image buffer",N,N],[3,"Frame","","A single animation frame",N,N],[3,"Frames","","Holds the frames of the animated image",N,N],[4,"ColorType","","An enumeration over supported color types and their bit depths",N,N],[13,"Gray","","Pixel is grayscale",4,N],[13,"RGB","","Pixel contains R, G and B channels",4,N],[13,"Palette","","Pixel is an index into a color palette",4,N],[13,"GrayA","","Pixel is grayscale with an alpha channel",4,N],[13,"RGBA","","Pixel is RGB with an alpha channel",4,N],[4,"ImageError","","An enumeration of Image errors",N,N],[13,"FormatError","","The Image is not formatted properly",5,N],[13,"DimensionError","","The Image's dimensions are either too small or too large",5,N],[13,"UnsupportedError","","The Decoder does not support this image format",5,N],[13,"UnsupportedColor","","The Decoder does not support this color type",5,N],[13,"NotEnoughData","","Not enough data was provided to the Decoder to decode the image",5,N],[13,"IoError","","An I/O Error occurred while decoding the image",5,N],[13,"ImageEnd","","The end of the image has been reached",5,N],[4,"DecodingResult","","Result of a decoding process",N,N],[13,"U8","","A vector of unsigned bytes",6,N],[13,"U16","","A vector of unsigned words",6,N],[4,"FilterType","","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",7,N],[13,"Triangle","","Linear Filter",7,N],[13,"CatmullRom","","Cubic Filter",7,N],[13,"Gaussian","","Gaussian Filter",7,N],[13,"Lanczos3","","Lanczos with window 3",7,N],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats support both encoding and decoding.",N,N],[13,"PNG","","An Image in PNG Format",8,N],[13,"JPEG","","An Image in JPEG Format",8,N],[13,"GIF","","An Image in GIF Format",8,N],[13,"WEBP","","An Image in WEBP Format",8,N],[13,"PNM","","An Image in general PNM Format",8,N],[13,"TIFF","","An Image in TIFF Format",8,N],[13,"TGA","","An Image in TGA Format",8,N],[13,"BMP","","An Image in BMP Format",8,N],[13,"ICO","","An Image in ICO Format",8,N],[13,"HDR","","An Image in Radiance HDR Format",8,N],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",N,N],[13,"PNG","","An Image in PNG Format",9,N],[13,"JPEG","","An Image in JPEG Format with specified quality",9,N],[13,"PNM","","An Image in one of the PNM Formats",9,N],[13,"GIF","","An Image in GIF Format",9,N],[13,"ICO","","An Image in ICO Format",9,N],[13,"BMP","","An Image in BMP Format",9,N],[13,"Unsupported","","A value for signalling an error: An unsupported format was requested",9,N],[4,"DynamicImage","","A Dynamic Image",N,N],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",10,N],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",10,N],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",10,N],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",10,N],[5,"Luma","","",N,N],[5,"LumaA","","",N,N],[5,"Rgb","","",N,N],[5,"Rgba","","",N,N],[5,"open","","Open the image located at the path specified. The image's format is determined from the path's file extension.",N,[[["p"]],["imageresult",["dynamicimage"]]]],[5,"load","","Create a new image from a Reader",N,[[["r"],["imageformat"]],["imageresult",["dynamicimage"]]]],[5,"load_from_memory","","Create a new image from a byte slice",N,N],[5,"load_from_memory_with_format","","Create a new image from a byte slice",N,N],[5,"guess_format","","Guess image format from memory block",N,N],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",N,N],[0,"math","","Mathematical helper functions and types.",N,N],[0,"utils","image::math","Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"],["n"],["n"]],["n"]]],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See \"Kohonen neural networks for optimal colour quantization\" in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of the algorithm. See also http://www.acm.org/~dekker/NEUQUANT.HTML",N,N],[3,"NeuQuant","image::math::nq","Neural network color quantizer",N,N],[11,"new","","Creates a new neural network and trains it with the supplied data",11,N],[11,"init","","Initializes the neural network and trains it with the supplied data",11,N],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the color map",11,N],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",11,N],[0,"imageops","image","Image Processing Functions",N,N],[4,"FilterType","image::imageops","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",7,N],[13,"Triangle","","Linear Filter",7,N],[13,"CatmullRom","","Cubic Filter",7,N],[13,"Gaussian","","Gaussian Filter",7,N],[13,"Lanczos3","","Lanczos with window 3",7,N],[5,"rotate90","","Rotate an image 90 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"flip_horizontal","","Flip an image horizontally",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"flip_vertical","","Flip an image vertically",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel` is an array of the filter weights of length 9.",N,N],[5,"resize","","Resize the supplied image to the specified dimensions. `nwidth` and `nheight` are the new dimensions. `filter` is the sampling filter to use.",N,[[["i"],["u32"],["u32"],["filtertype"]],["imagebuffer",["vec"]]]],[5,"thumbnail","","Resize the supplied image down to the specific dimensions.",N,[[["i"],["u32"],["u32"]],["imagebuffer",["vec"]]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is a measure of how much to blur by.",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma` is the amount to blur the image by. `threshold` is the threshold for the difference between",N,[[["i"],["f32"],["i32"]],["imagebuffer",["vec"]]]],[5,"crop","","Return a mutable view into an image",N,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",N,[[["i"],["i"],["u32"],["u32"]]]],[5,"replace","","Replace the contents of an image at a given coordinate (x, y)",N,[[["i"],["i"],["u32"],["u32"]]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel","image::imageops::colorops","A bi-level color map",N,N],[5,"grayscale","","Convert the supplied image to grayscale",N,[[["i"]],["imagebuffer",["luma","vec"]]]],[5,"invert","","Invert each pixel within the supplied image. This function operates in place.",N,[[["i"]]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is the amount to adjust the contrast by. Negative values decrease the contrast and positive values increase the contrast.",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to brighten each pixel by. Negative values decrease the brightness and positive values increase it.",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to rotate each pixel by. 0 and 360 do nothing, the rest rotates by the given degree value. just like the css webkit filter hue-rotate(180)",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"dither","","Reduces the colors of the image using the supplied `color_map` while applying Floyd-Steinberg dithering to improve the visual conception",N,[[["imagebuffer"],["map"]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and returns an image of the indices",N,[[["imagebuffer"],["map"]],["imagebuffer",["luma","vec"]]]],[8,"ColorMap","","A color map",N,N],[16,"Color","","The color type on which the map operates on",12,N],[10,"index_of","","Returns the index of the closed match of `color` in the color map.",12,N],[10,"map_color","","Maps `color` to the closest color in the color map.",12,N],[0,"webp","image","Decoding of Webp Images",N,N],[3,"WebpDecoder","image::webp","A Representation of a Webp Image format decoder.",N,N],[11,"new","","Create a new WebpDecoder from the Reader `r`. This function takes ownership of the Reader.",13,[[["r"]],["webpdecoder"]]],[0,"vp8","","An implementation of the VP8 Video Codec",N,N],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",N,N],[12,"width","","The width of the luma plane",14,N],[12,"height","","The height of the luma plane",14,N],[12,"ybuf","","The luma plane of the frame",14,N],[12,"keyframe","","Indicates whether this frame is a keyframe",14,N],[12,"for_display","","Indicates whether this frame is intended for display",14,N],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of the VP8 Specification",14,N],[3,"VP8Decoder","","VP8 Decoder",N,N],[11,"new","","Create a new decoder. The reader must present a raw vp8 bitstream to the decoder",15,[[["r"]],["vp8decoder"]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",15,[[["self"]],["result",["frame"]]]],[0,"pnm","image","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder","image::pnm","PNM decoder",N,N],[3,"PNMEncoder","","Encodes images to any of the `pnm` image formats.",N,N],[3,"PNMHeader","","Stores the complete header data of a file.",N,N],[3,"ArbitraryHeader","","Header produced by a `pam` file (\"Portable Arbitrary Map\")",N,N],[12,"height","","Height of the image file",16,N],[12,"width","","Width of the image file",16,N],[12,"depth","","Number of color channels",16,N],[12,"maxval","","Maximum sample value within the image",16,N],[12,"tupltype","","Color interpretation of image pixels",16,N],[3,"BitmapHeader","","Header produced by a `pbm` file (\"Portable Bit Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",17,N],[12,"height","","Height of the image file",17,N],[12,"width","","Width of the image file",17,N],[3,"GraymapHeader","","Header produced by a `pgm` file (\"Portable Gray Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",18,N],[12,"height","","Height of the image file",18,N],[12,"width","","Width of the image file",18,N],[12,"maxwhite","","Maximum sample value within the image",18,N],[3,"PixmapHeader","","Header produced by a `ppm` file (\"Portable Pixel Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",19,N],[12,"height","","Height of the image file",19,N],[12,"width","","Width of the image file",19,N],[12,"maxval","","Maximum sample value within the image",19,N],[4,"PNMSubtype","","Denotes the category of the magic number",N,N],[13,"Bitmap","","Magic numbers P1 and P4",20,N],[13,"Graymap","","Magic numbers P2 and P5",20,N],[13,"Pixmap","","Magic numbers P3 and P6",20,N],[13,"ArbitraryMap","","Magic number P7",20,N],[4,"SampleEncoding","","The kind of encoding used to store sample values",N,N],[13,"Binary","","Samples are unsigned binary integers in big endian",21,N],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by whitespace",21,N],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",N,N],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",22,N],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second alpha channel",22,N],[13,"Grayscale","","Pixels represent the amount of white",22,N],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",22,N],[13,"RGB","","Three channels: Red, Green, Blue",22,N],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",22,N],[13,"Custom","","An image format which is not standardized",22,N],[11,"new","","Create a new decoder that decodes from the stream `read`",23,[[["r"]],["imageresult",["pnmdecoder"]]]],[11,"into_inner","","Extract the reader and header after an image has been read.",23,N],[11,"subtype","","Get the pnm subtype, depending on the magic constant contained in the header",23,[[["self"]],["pnmsubtype"]]],[11,"new","","Create new PNMEncoder from the `writer`.",24,[[["w"]],["self"]]],[11,"with_subtype","","Encode a specific pnm subtype image.",24,[[["self"],["pnmsubtype"]],["self"]]],[11,"with_header","","Enforce the use of a chosen header.",24,[[["self"],["pnmheader"]],["self"]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",24,[[["self"]],["self"]]],[11,"encode","","Encode an image whose samples are represented as `u8`.",24,[[["self"],["s"],["u32"],["u32"],["colortype"]],["result"]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this format subtype.",20,N],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",20,[[["self"]],["sampleencoding"]]],[11,"subtype","","Retrieve the format subtype from which the header was created.",25,[[["self"]],["pnmsubtype"]]],[11,"width","","The width of the image this header is for.",25,[[["self"]],["u32"]]],[11,"height","","The height of the image this header is for.",25,[[["self"]],["u32"]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the colour resolution.",25,[[["self"]],["u32"]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",25,[[["self"]],["option",["bitmapheader"]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",25,[[["self"]],["option",["graymapheader"]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",25,[[["self"]],["option",["pixmapheader"]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",25,[[["self"]],["option",["arbitraryheader"]]]],[11,"write","","Write the header back into a binary stream",25,[[["self"],["write"]],["result"]]],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder","image::png","PNG decoder",N,N],[3,"PNGEncoder","","PNG encoder",N,N],[11,"new","","Creates a new decoder that decodes from the stream `r`",26,[[["r"]],["pngdecoder"]]],[11,"new","","Create a new encoder that writes its output to `w`",27,[[["w"]],["pngencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`",27,N],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder","image::ico","An ico decoder",N,N],[3,"ICOEncoder","","ICO encoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",28,[[["r"]],["imageresult",["icodecoder"]]]],[11,"new","","Create a new encoder that writes its output to `w`.",29,[[["w"]],["icoencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.  The dimensions of the image must be between 1 and 256 (inclusive) or an error will be returned.",29,N],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,"JPEGDecoder","image::jpeg","JPEG decoder",N,N],[3,"JPEGEncoder","","The representation of a JPEG encoder",N,N],[11,"new","","Create a new encoder that writes its output to `w`",30,[[["w"]],["jpegencoder"]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w`, and has the quality parameter `quality` with a value in the range 1-100 where 1 is the worst and 100 is the best.",30,[[["w"],["u8"]],["jpegencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`",30,N],[11,"new","","Create a new decoder that decodes from the stream `r`",31,[[["r"]],["jpegdecoder"]]],[0,"gif","image","Decoding of GIF Images",N,N],[3,"Frame","image::gif","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",32,N],[12,"dispose","","Disposal method.",32,N],[12,"transparent","","Transparent index (if available).",32,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",32,N],[12,"top","","Offset from the top border of the canvas.",32,N],[12,"left","","Offset from the left border of the canvas.",32,N],[12,"width","","Width of the frame.",32,N],[12,"height","","Height of the frame.",32,N],[12,"interlaced","","True if the image is interlaced.",32,N],[12,"palette","","Frame local color palette if available.",32,N],[12,"buffer","","Buffer containing the image data. Only indices unless configured differently.",32,N],[4,"DisposalMethod","","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",33,N],[13,"Keep","","Do not dispose.",33,N],[13,"Background","","Restore to background color.",33,N],[13,"Previous","","Restore to previous.",33,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[11,"new","","Creates a new decoder that decodes the input steam `r`",34,[[["r"]],["decoder"]]],[11,"new","","Creates a new GIF encoder.",35,[[["w"]],["encoder"]]],[11,"encode","","Encodes a frame.",35,[[["self"],["frame"]],["imageresult"]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",N,N],[3,"TIFFDecoder","image::tiff","The representation of a TIFF decoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",36,[[["r"]],["imageresult",["tiffdecoder"]]]],[11,"init","","Initializes the decoder.",36,[[["self"]],["imageresult",["tiffdecoder"]]]],[11,"next_image","","Reads in the next image. If there is no further image in the TIFF file a format error is returned. To determine whether there are more images call `TIFFDecoder::more_images` instead.",36,[[["self"]],["imageresult",["tiffdecoder"]]]],[11,"more_images","","Returns `true` if there is at least one more image available.",36,[[["self"]],["bool"]]],[11,"byte_order","","Returns the byte_order",36,[[["self"]],["byteorder"]]],[11,"read_short","","Reads a TIFF short value",36,[[["self"]],["result",["u16","error"]]]],[11,"read_long","","Reads a TIFF long value",36,[[["self"]],["result",["u32","error"]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",36,[[["self"]],["result",["error"]]]],[11,"goto_offset","","Moves the cursor to the specified offset",36,[[["self"],["u32"]],["result"]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder","image::tga","The representation of a TGA decoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",37,[[["r"]],["tgadecoder"]]],[0,"bmp","image","Decoding and Encoding of BMP Images",N,N],[3,"BMPEncoder","image::bmp","The representation of a BMP encoder.",N,N],[3,"BMPDecoder","","A bmp decoder",N,N],[11,"new","","Create a new encoder that writes its output to `w`.",38,[[["w"]],["self"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.",38,N],[11,"new","","Create a new decoder that decodes from the stream `r`",39,[[["r"]],["bmpdecoder"]]],[0,"hdr","image","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter","image::hdr","Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder","","An Radiance HDR decoder",N,N],[3,"RGBE8Pixel","","Refer to wikipedia",N,N],[12,"c","","Color components",40,N],[12,"e","","Exponent",40,N],[3,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",N,N],[3,"HDRMetadata","","Metadata for Radiance HDR image",N,N],[12,"width","","Width of decoded image. It could be either scanline length, or scanline count, depending on image orientation.",41,N],[12,"height","","Height of decoded image. It depends on orientation too.",41,N],[12,"orientation","","Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom. First pair tells how resulting pixel coordinates change along a scanline. Second pair tells how they change from one scanline to the next.",41,N],[12,"exposure","","Divide color values by exposure to get to get physical radiance in watts/steradian/m2",41,N],[12,"color_correction","","Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance in watts/steradian/m2",41,N],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",41,N],[12,"custom_attributes","","All lines contained in image header are put here. Ordering of lines is preserved. Lines in the form \"key=value\" are represented as (\"key\", \"value\"). All other lines are (\"\", \"line\")",41,N],[3,"HDREncoder","","Radiance HDR encoder",N,N],[5,"rgbe8","","Creates `RGBE8Pixel` from components",N,[[["u8"],["u8"],["u8"],["u8"]],["rgbe8pixel"]]],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",N,[[["p"]],["result",["vec"]]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["rgb",["f32"]]],["rgbe8pixel"]]],[11,"new","","Creates adapter",42,[[["r"]],["imageresult",["hdradapter"]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",42,[[["r"]],["imageresult",["hdradapter"]]]],[11,"to_hdr","","Converts `RGBE8Pixel` into `Rgb<f32>` linearly",40,[[["self"]],["rgb",["f32"]]]],[11,"to_ldr","","Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and gamma=2.2",40,[[["self"]],["rgb"]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and gamma",40,[[["self"],["f32"],["f32"]],["rgb"]]],[11,"new","","Reads Radiance HDR image header from stream `r` if the header is valid, creates HDRDecoder strict mode is enabled",43,[[["r"]],["imageresult",["hdrdecoder"]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream `reader`, if the header is valid, creates `HDRDecoder`.",43,[[["r"],["bool"]],["imageresult",["hdrdecoder"]]]],[11,"metadata","","Returns file metadata. Refer to `HDRMetadata` for details.",43,[[["self"]],["hdrmetadata"]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",43,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed pixels",43,[[["self"],["f"]],["imageresult",["vec"]]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. scale = 1, gamma = 2.2",43,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",43,[[["self"]],["imageresult",["vec"]]]],[11,"new","","Creates encoder",44,[[["w"]],["hdrencoder"]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and `height`",44,N],[17,"SIGNATURE","","Radiance HDR file signature",N,N],[0,"dxt","image","Decoding of DXT (S3TC) compression",N,N],[3,"DXTDecoder","image::dxt","DXT decoder",N,N],[3,"DXTEncoder","","DXT encoder",N,N],[4,"DXTVariant","","What version of DXT compression are we using? Note that DXT2 and DXT4 are left away as they're just DXT3 and DXT5 with premultiplied alpha",N,N],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is compressed into an 8 byte block of DXT1 data",45,N],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is compressed into a 16 byte block of DXT3 data",45,N],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is compressed into a 16 byte block of DXT5 data",45,N],[11,"colortype","","Returns the colortype that is stored in this DXT variant",45,[[["self"]],["colortype"]]],[11,"new","","Create a new DXT decoder that decodes from the stream `r`. As DXT is often stored as raw buffers with the width/height somewhere else the width and height of the image need to be passed in `width` and `height`, as well as the DXT variant in `variant`. width and height are required to be powers of 2 and at least 4. otherwise an error will be returned",46,[[["r"],["u32"],["u32"],["dxtvariant"]],["result",["dxtdecoder","imageerror"]]]],[11,"new","","Create a new encoder that writes its output to `w`",47,[[["w"]],["dxtencoder"]]],[11,"encode","","Encodes the image data `data` that has dimensions `width` and `height` in `DXTVariant` `variant` data is assumed to be in variant.colortype()",47,N],[11,"new","image","Construct a new subimage",48,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"inner_mut","","Returns a mutable reference to the wrapped image.",48,[[["self"]],["i"]]],[11,"change_bounds","","Change the coordinates of this subimage.",48,[[["self"],["u32"],["u32"],["u32"],["u32"]]]],[11,"to_image","","Convert this subimage to an ImageBuffer",48,[[["self"]],["imagebuffer",["vec"]]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels with transparency.",10,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[["u32"],["u32"]],["dynamicimage"]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",10,[[["self"]],["rgbimage"]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",10,[[["self"]],["rgbaimage"]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",10,[[["self"]],["grayimage"]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",10,[[["self"]],["grayalphaimage"]]],[11,"crop","","Return a cut out of this image delimited by the bounding rectangle.",10,[[["self"],["u32"],["u32"],["u32"],["u32"]],["dynamicimage"]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",10,[[["self"]],["option",["rgbimage"]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",10,[[["self"]],["option",["rgbimage"]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",10,[[["self"]],["option",["rgbaimage"]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",10,[[["self"]],["option",["rgbaimage"]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",10,[[["self"]],["option",["grayimage"]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",10,[[["self"]],["option",["grayimage"]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an alpha channel",10,[[["self"]],["option",["grayalphaimage"]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with an alpha channel",10,[[["self"]],["option",["grayalphaimage"]]]],[11,"raw_pixels","","Return this image's pixels as a byte vector.",10,[[["self"]],["vec",["u8"]]]],[11,"color","","Return this image's color type.",10,[[["self"]],["colortype"]]],[11,"grayscale","","Return a grayscale version of this image.",10,[[["self"]],["dynamicimage"]]],[11,"invert","","Invert the colors of this image. This method operates inplace.",10,[[["self"]]]],[11,"resize","","Resize this image using the specified filter algorithm. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the bounds specified by `nwidth` and `nheight`.",10,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"resize_exact","","Resize this image using the specified filter algorithm. Returns a new image. Does not preserve aspect ratio. `nwidth` and `nheight` are the new image's dimensions",10,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"thumbnail","","Scale this image down to fit within a specific size. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the bounds specified by `nwidth` and `nheight`.",10,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new image. Does not preserve aspect ratio. `nwidth` and `nheight` are the new image's dimensions. This method uses a fast integer algorithm where each source pixel contributes to exactly one target pixel. May give aliasing artifacts if new size is close to old size.",10,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the larger (relative to aspect ratio) of the bounds specified by `nwidth` and `nheight`, then cropped to fit within the other bound.",10,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a measure of how much to blur by.",10,[[["self"],["f32"]],["dynamicimage"]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the amount to blur the image by. `threshold` is a control of how much to sharpen.",10,[[["self"],["f32"],["i32"]],["dynamicimage"]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",10,N],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the amount to adjust the contrast by. Negative values decrease the contrast and positive values increase the contrast.",10,[[["self"],["f32"]],["dynamicimage"]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount to brighten each pixel by. Negative values decrease the brightness and positive values increase it.",10,[[["self"],["i32"]],["dynamicimage"]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to rotate each pixel by. 0 and 360 do nothing, the rest rotates by the given degree value. just like the css webkit filter hue-rotate(180)",10,[[["self"],["i32"]],["dynamicimage"]]],[11,"flipv","","Flip this image vertically",10,[[["self"]],["dynamicimage"]]],[11,"fliph","","Flip this image horizontally",10,[[["self"]],["dynamicimage"]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",10,[[["self"]],["dynamicimage"]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",10,[[["self"]],["dynamicimage"]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",10,[[["self"]],["dynamicimage"]]],[11,"write_to","","Encode this image and write it to `w`",10,[[["self"],["w"],["f"]],["imageresult"]]],[11,"save","","Saves the buffer to a file at the path specified.",10,[[["self"],["q"]],["result"]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a `Vec` or a slice)",49,[[["u32"],["u32"],["container"]],["option",["imagebuffer"]]]],[11,"into_raw","","Returns the underlying raw buffer",49,[[["self"]],["container"]]],[11,"dimensions","","The width and height of this image.",49,N],[11,"width","","The width of this image.",49,[[["self"]],["u32"]]],[11,"height","","The height of this image.",49,[[["self"]],["u32"]]],[11,"pixels","","Returns an iterator over the pixels of this image.",49,[[["self"]],["pixels"]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator yields the coordinates of each pixel along with a reference to them.",49,[[["self"]],["enumeratepixels"]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",49,[[["self"],["u32"],["u32"]],["p"]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",49,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",49,[[["self"]],["enumeratepixelsmut"]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",49,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",49,[[["self"],["u32"],["u32"],["p"]]]],[11,"save","","Saves the buffer to a file at the path specified.",49,[[["self"],["q"]],["result"]]],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",49,[[["u32"],["u32"]],["imagebuffer",["vec"]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",49,[[["u32"],["u32"],["p"]],["imagebuffer",["vec"]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of the supplied function. The arguments to the function are the pixel's x and y coordinates.",49,[[["u32"],["u32"],["f"]],["imagebuffer",["vec"]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns None if the buffer is not big enough.",49,[[["u32"],["u32"],["vec"]],["option",["imagebuffer"]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data as an owned buffer",49,[[["self"]],["vec"]]],[11,"new","","Contructs a new frame iterator",50,[[["vec",["frame"]]],["frames"]]],[11,"new","","Contructs a new frame",51,[[["rgbaimage"]],["frame"]]],[11,"from_parts","","Contructs a new frame",51,[[["rgbaimage"],["u32"],["u32"],["ratio",["u16"]]],["frame"]]],[11,"delay","","Delay of this frame",51,[[["self"]],["ratio",["u16"]]]],[11,"buffer","","Returns the image buffer",51,[[["self"]],["rgbaimage"]]],[11,"into_buffer","","Returns the image buffer",51,[[["self"]],["rgbaimage"]]],[11,"left","","Returns the x offset",51,[[["self"]],["u32"]]],[11,"top","","Returns the y offset",51,[[["self"]],["u32"]]],[6,"ImageResult","","Result of an image decoding/encoding process",N,N],[6,"RgbImage","","Sendable Rgb image buffer",N,N],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",N,N],[6,"GrayImage","","Sendable grayscale image buffer",N,N],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",N,N],[8,"ImageDecoder","","The trait that all decoders implement",N,N],[10,"dimensions","","Returns a tuple containing the width and height of the image",52,[[["self"]],["imageresult"]]],[10,"colortype","","Returns the color type of the image e.g. RGB(8) (8bit RGB)",52,[[["self"]],["imageresult",["colortype"]]]],[10,"row_len","","Returns the length in bytes of one decoded row of the image",52,[[["self"]],["imageresult",["usize"]]]],[10,"read_scanline","","Reads one row from the image into `buf` and returns the row index",52,N],[10,"read_image","","Decodes the entire image and return it as a Vector",52,[[["self"]],["imageresult",["decodingresult"]]]],[11,"is_animated","","Returns true if the image is animated",52,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","Returns the frames of the image",52,[[["self"]],["imageresult",["frames"]]]],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle starting from `x` and `y` and having `length` and `width`",52,[[["self"],["u32"],["u32"],["u32"],["u32"]],["imageresult",["vec"]]]],[8,"GenericImage","","A trait for manipulating images.",N,N],[16,"Pixel","","The type of pixel.",53,N],[10,"dimensions","","The width and height of this image.",53,N],[11,"width","","The width of this image.",53,[[["self"]],["u32"]]],[11,"height","","The height of this image.",53,[[["self"]],["u32"]]],[10,"bounds","","The bounding rectangle of this image.",53,N],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",53,[[["self"],["u32"],["u32"]],["bool"]]],[10,"get_pixel","","Returns the pixel located at (x, y)",53,N],[10,"get_pixel_mut","","Puts a pixel at location (x, y)",53,N],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",53,N],[10,"put_pixel","","Put a pixel at location (x, y)",53,N],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",53,N],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",53,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The iterator yields the coordinates of each pixel along with their value",53,[[["self"]],["pixels"]]],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",53,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",53,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[11,"sub_image","","Returns a subimage that is a view into this image.",53,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[8,"Pixel","","A generalized pixel.",N,N],[16,"Subpixel","","The underlying subpixel type.",54,N],[10,"channel_count","","Returns the number of channels of this pixel type.",54,[[],["u8"]]],[10,"channels","","Returns the components as a slice.",54,N],[10,"channels_mut","","Returns the components as a mutable slice",54,N],[10,"color_model","","Returns a string that can help to interpret the meaning each channel See gimp babl.",54,[[],["str"]]],[10,"color_type","","Returns the ColorType for this pixel format",54,[[],["colortype"]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the pixel has less than 4 channels the remainder is filled with the maximum value",54,N],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If the pixel does not contain 4 channels the extra are ignored.",54,N],[10,"from_slice","","Returns a view into a slice.",54,N],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",54,N],[10,"to_rgb","","Convert this pixel to RGB",54,[[["self"]],["rgb"]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",54,[[["self"]],["rgba"]]],[10,"to_luma","","Convert this pixel to luma",54,[[["self"]],["luma"]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",54,[[["self"]],["lumaa"]]],[10,"map","","Apply the function `f` to each channel of this pixel.",54,[[["self"],["f"]],["self"]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",54,[[["self"],["f"]]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha channel. Apply the function `g` to the alpha channel.",54,[[["self"],["f"],["g"]],["self"]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha channel. Apply the function `g` to the alpha channel. Works in-place.",54,[[["self"],["f"],["g"]]]],[10,"map2","","Apply the function `f` to each channel of this pixel and `other` pairwise.",54,[[["self"],["self"],["f"]],["self"]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and `other` pairwise. Works in-place.",54,[[["self"],["self"],["f"]]]],[10,"invert","","Invert this pixel",54,[[["self"]]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into account alpha channels",54,[[["self"],["self"]]]],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",N,N],[10,"convert","","Converts `self` to a buffer of type T",55,[[["self"]],["t"]]],[8,"Primitive","","Primitive trait from old stdlib",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"into_iter","","",56,[[["self"]],["i"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"par_bridge","","",56,[[["self"]],["iterbridge"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"par_bridge","","",57,[[["self"]],["iterbridge"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"into_iter","","",50,[[["self"]],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"par_bridge","","",50,[[["self"]],["iterbridge"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","image::math::nq","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","image::imageops::colorops","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","image::webp","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","image::webp::vp8","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","image::pnm","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","image::png","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","image::ico","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","image::jpeg","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","image::gif","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","image::tiff","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","image::tga","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","image::bmp","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","image::hdr","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"par_bridge","","",59,[[["self"]],["iterbridge"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","image::dxt","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"clone","image::gif","",32,[[["self"]],["frame"]]],[11,"clone","","",33,[[["self"]],["disposalmethod"]]],[11,"default","","",32,[[],["frame"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",33,[[["self"],["disposalmethod"]],["bool"]]],[11,"index_of","image::imageops::colorops","",58,[[["self"],["luma"]],["usize"]]],[11,"map_color","","",58,[[["self"],["luma"]]]],[11,"index_of","image::math::nq","",11,[[["self"],["rgba"]],["usize"]]],[11,"map_color","","",11,[[["self"],["rgba"]]]],[11,"dimensions","image::webp","",13,[[["self"]],["imageresult"]]],[11,"colortype","","",13,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",13,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",13,N],[11,"read_image","","",13,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::pnm","",23,[[["self"]],["imageresult"]]],[11,"colortype","","",23,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",23,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",23,N],[11,"read_image","","",23,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::png","",26,[[["self"]],["imageresult"]]],[11,"colortype","","",26,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",26,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",26,N],[11,"read_image","","",26,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::ico","",28,[[["self"]],["imageresult"]]],[11,"colortype","","",28,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",28,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",28,N],[11,"read_image","","",28,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::jpeg","",31,[[["self"]],["imageresult"]]],[11,"colortype","","",31,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",31,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",31,N],[11,"read_image","","",31,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::gif","",34,[[["self"]],["imageresult"]]],[11,"colortype","","",34,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",34,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",34,N],[11,"read_image","","",34,[[["self"]],["imageresult",["decodingresult"]]]],[11,"is_animated","","",34,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","",34,[[["self"]],["imageresult",["image_frames"]]]],[11,"dimensions","image::tiff","",36,[[["self"]],["imageresult"]]],[11,"colortype","","",36,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",36,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",36,N],[11,"read_image","","",36,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::tga","",37,[[["self"]],["imageresult"]]],[11,"colortype","","",37,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",37,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",37,N],[11,"read_image","","",37,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::bmp","",39,[[["self"]],["imageresult"]]],[11,"colortype","","",39,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",39,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",39,N],[11,"read_image","","",39,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::hdr","",42,[[["self"]],["imageresult"]]],[11,"colortype","","",42,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",42,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",42,N],[11,"read_image","","",42,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image::dxt","",46,[[["self"]],["imageresult"]]],[11,"colortype","","",46,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",46,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",46,N],[11,"read_image","","",46,[[["self"]],["imageresult",["decodingresult"]]]],[11,"dimensions","image","",48,N],[11,"bounds","","",48,N],[11,"get_pixel","","",48,N],[11,"put_pixel","","",48,N],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel directly instead.",48,N],[11,"get_pixel_mut","","",48,N],[11,"dimensions","","",10,N],[11,"bounds","","",10,N],[11,"get_pixel","","",10,[[["self"],["u32"],["u32"]],["rgba",["u8"]]]],[11,"put_pixel","","",10,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels directly.",10,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",10,[[["self"],["u32"],["u32"]],["rgba"]]],[11,"dimensions","","",49,N],[11,"bounds","","",49,N],[11,"get_pixel","","",49,[[["self"],["u32"],["u32"]],["p"]]],[11,"get_pixel_mut","","",49,[[["self"],["u32"],["u32"]],["p"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds checking.",49,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","",49,[[["self"],["u32"],["u32"],["p"]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",49,[[["self"],["u32"],["u32"],["p"]]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",49,[[["self"],["u32"],["u32"],["p"]]]],[11,"channel_count","","",2,[[],["u8"]]],[11,"color_model","","",2,[[],["str"]]],[11,"color_type","","",2,[[],["colortype"]]],[11,"channels","","",2,N],[11,"channels_mut","","",2,N],[11,"channels4","","",2,N],[11,"from_channels","","",2,[[["t"],["t"],["t"],["t"]],["rgb"]]],[11,"from_slice","","",2,N],[11,"from_slice_mut","","",2,N],[11,"to_rgb","","",2,[[["self"]],["rgb"]]],[11,"to_rgba","","",2,[[["self"]],["rgba"]]],[11,"to_luma","","",2,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",2,[[["self"]],["lumaa"]]],[11,"map","","",2,[[["self"],["f"]],["rgb"]]],[11,"apply","","",2,[[["self"],["f"]]]],[11,"map_with_alpha","","",2,[[["self"],["f"],["g"]],["rgb"]]],[11,"apply_with_alpha","","",2,[[["self"],["f"],["g"]]]],[11,"map2","","",2,[[["self"],["self"],["f"]],["rgb"]]],[11,"apply2","","",2,[[["self"],["rgb"],["f"]]]],[11,"invert","","",2,[[["self"]]]],[11,"blend","","",2,[[["self"],["rgb"]]]],[11,"channel_count","","",0,[[],["u8"]]],[11,"color_model","","",0,[[],["str"]]],[11,"color_type","","",0,[[],["colortype"]]],[11,"channels","","",0,N],[11,"channels_mut","","",0,N],[11,"channels4","","",0,N],[11,"from_channels","","",0,[[["t"],["t"],["t"],["t"]],["luma"]]],[11,"from_slice","","",0,N],[11,"from_slice_mut","","",0,N],[11,"to_rgb","","",0,[[["self"]],["rgb"]]],[11,"to_rgba","","",0,[[["self"]],["rgba"]]],[11,"to_luma","","",0,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",0,[[["self"]],["lumaa"]]],[11,"map","","",0,[[["self"],["f"]],["luma"]]],[11,"apply","","",0,[[["self"],["f"]]]],[11,"map_with_alpha","","",0,[[["self"],["f"],["g"]],["luma"]]],[11,"apply_with_alpha","","",0,[[["self"],["f"],["g"]]]],[11,"map2","","",0,[[["self"],["self"],["f"]],["luma"]]],[11,"apply2","","",0,[[["self"],["luma"],["f"]]]],[11,"invert","","",0,[[["self"]]]],[11,"blend","","",0,[[["self"],["luma"]]]],[11,"channel_count","","",3,[[],["u8"]]],[11,"color_model","","",3,[[],["str"]]],[11,"color_type","","",3,[[],["colortype"]]],[11,"channels","","",3,N],[11,"channels_mut","","",3,N],[11,"channels4","","",3,N],[11,"from_channels","","",3,[[["t"],["t"],["t"],["t"]],["rgba"]]],[11,"from_slice","","",3,N],[11,"from_slice_mut","","",3,N],[11,"to_rgb","","",3,[[["self"]],["rgb"]]],[11,"to_rgba","","",3,[[["self"]],["rgba"]]],[11,"to_luma","","",3,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",3,[[["self"]],["lumaa"]]],[11,"map","","",3,[[["self"],["f"]],["rgba"]]],[11,"apply","","",3,[[["self"],["f"]]]],[11,"map_with_alpha","","",3,[[["self"],["f"],["g"]],["rgba"]]],[11,"apply_with_alpha","","",3,[[["self"],["f"],["g"]]]],[11,"map2","","",3,[[["self"],["self"],["f"]],["rgba"]]],[11,"apply2","","",3,[[["self"],["rgba"],["f"]]]],[11,"invert","","",3,[[["self"]]]],[11,"blend","","",3,[[["self"],["rgba"]]]],[11,"channel_count","","",1,[[],["u8"]]],[11,"color_model","","",1,[[],["str"]]],[11,"color_type","","",1,[[],["colortype"]]],[11,"channels","","",1,N],[11,"channels_mut","","",1,N],[11,"channels4","","",1,N],[11,"from_channels","","",1,[[["t"],["t"],["t"],["t"]],["lumaa"]]],[11,"from_slice","","",1,N],[11,"from_slice_mut","","",1,N],[11,"to_rgb","","",1,[[["self"]],["rgb"]]],[11,"to_rgba","","",1,[[["self"]],["rgba"]]],[11,"to_luma","","",1,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",1,[[["self"]],["lumaa"]]],[11,"map","","",1,[[["self"],["f"]],["lumaa"]]],[11,"apply","","",1,[[["self"],["f"]]]],[11,"map_with_alpha","","",1,[[["self"],["f"],["g"]],["lumaa"]]],[11,"apply_with_alpha","","",1,[[["self"],["f"],["g"]]]],[11,"map2","","",1,[[["self"],["self"],["f"]],["lumaa"]]],[11,"apply2","","",1,[[["self"],["lumaa"],["f"]]]],[11,"invert","","",1,[[["self"]]]],[11,"blend","","",1,[[["self"],["lumaa"]]]],[11,"convert","","",49,[[["self"]],["imagebuffer",["vec"]]]],[11,"clone","image::imageops::colorops","",58,[[["self"]],["bilevel"]]],[11,"clone","image","",7,[[["self"]],["filtertype"]]],[11,"clone","image::webp::vp8","",14,[[["self"]],["frame"]]],[11,"clone","image::pnm","",21,[[["self"]],["sampleencoding"]]],[11,"clone","","",20,[[["self"]],["pnmsubtype"]]],[11,"clone","","",17,[[["self"]],["bitmapheader"]]],[11,"clone","","",18,[[["self"]],["graymapheader"]]],[11,"clone","","",19,[[["self"]],["pixmapheader"]]],[11,"clone","","",16,[[["self"]],["arbitraryheader"]]],[11,"clone","","",22,[[["self"]],["arbitrarytupltype"]]],[11,"clone","image::hdr","",40,[[["self"]],["rgbe8pixel"]]],[11,"clone","","",41,[[["self"]],["hdrmetadata"]]],[11,"clone","image::dxt","",45,[[["self"]],["dxtvariant"]]],[11,"clone","image","",8,[[["self"]],["imageformat"]]],[11,"clone","","",9,[[["self"]],["imageoutputformat"]]],[11,"clone","","",10,[[["self"]],["dynamicimage"]]],[11,"clone","","",4,[[["self"]],["colortype"]]],[11,"clone","","",2,[[["self"]],["rgb"]]],[11,"clone","","",0,[[["self"]],["luma"]]],[11,"clone","","",3,[[["self"]],["rgba"]]],[11,"clone","","",1,[[["self"]],["lumaa"]]],[11,"clone","","",49,[[["self"]],["imagebuffer"]]],[11,"clone","","",51,[[["self"]],["frame"]]],[11,"from","image::pnm","",25,[[["bitmapheader"]],["self"]]],[11,"from","","",25,[[["graymapheader"]],["self"]]],[11,"from","","",25,[[["pixmapheader"]],["self"]]],[11,"from","","",25,[[["arbitraryheader"]],["self"]]],[11,"from","image","",4,N],[11,"from","","",5,[[["decodingerror"]],["imageerror"]]],[11,"from","","",4,[[["pixelformat"]],["colortype"]]],[11,"from","","",5,[[["error"]],["imageerror"]]],[11,"from","","",5,[[["decodingerror"]],["imageerror"]]],[11,"from","","",5,[[["error"]],["imageerror"]]],[11,"from","","",9,[[["imageformat"]],["self"]]],[11,"next","image::hdr","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","image","",56,[[["self"]],["option"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"next","","",50,[[["self"]],["option",["frame"]]]],[11,"default","image::webp::vp8","",14,[[],["frame"]]],[11,"eq","image::pnm","",21,[[["self"],["sampleencoding"]],["bool"]]],[11,"eq","","",20,[[["self"],["pnmsubtype"]],["bool"]]],[11,"ne","","",20,[[["self"],["pnmsubtype"]],["bool"]]],[11,"eq","image::hdr","",40,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"ne","","",40,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"eq","image::dxt","",45,[[["self"],["dxtvariant"]],["bool"]]],[11,"eq","image","",8,[[["self"],["imageformat"]],["bool"]]],[11,"eq","","",9,[[["self"],["imageoutputformat"]],["bool"]]],[11,"ne","","",9,[[["self"],["imageoutputformat"]],["bool"]]],[11,"eq","","",4,[[["self"],["colortype"]],["bool"]]],[11,"ne","","",4,[[["self"],["colortype"]],["bool"]]],[11,"eq","","",2,[[["self"],["rgb"]],["bool"]]],[11,"ne","","",2,[[["self"],["rgb"]],["bool"]]],[11,"eq","","",0,[[["self"],["luma"]],["bool"]]],[11,"ne","","",0,[[["self"],["luma"]],["bool"]]],[11,"eq","","",3,[[["self"],["rgba"]],["bool"]]],[11,"ne","","",3,[[["self"],["rgba"]],["bool"]]],[11,"eq","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"ne","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"into_iter","image::hdr","",43,N],[11,"hash","image","",4,N],[11,"hash","","",2,N],[11,"hash","","",0,N],[11,"hash","","",3,N],[11,"hash","","",1,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","image::webp::vp8","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::pnm","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::tiff","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::hdr","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","image::dxt","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","image","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"deref","","",49,N],[11,"deref_mut","","",49,N],[11,"index","","",2,[[["self"],["usize"]],["t"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index","","",3,[[["self"],["usize"]],["t"]]],[11,"index","","",1,[[["self"],["usize"]],["t"]]],[11,"index","","",49,N],[11,"index_mut","","",2,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",3,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",49,N],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"from_rgba","image::gif","Creates a frame from pixels in RGBA format.",32,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels",32,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette",32,N],[11,"from_rgb","","Creates a frame from pixels in RGB format.",32,N],[11,"from_u8","","Converts `u8` to `Option<Self>`",33,[[["u8"]],["option",["disposalmethod"]]]],[11,"is_animated","image","Returns true if the image is animated",52,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","Returns the frames of the image",52,[[["self"]],["imageresult",["frames"]]]],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle starting from `x` and `y` and having `length` and `width`",52,[[["self"],["u32"],["u32"],["u32"],["u32"]],["imageresult",["vec"]]]],[11,"width","","The width of this image.",53,[[["self"]],["u32"]]],[11,"height","","The height of this image.",53,[[["self"]],["u32"]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",53,[[["self"],["u32"],["u32"]],["bool"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",53,N],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",53,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The iterator yields the coordinates of each pixel along with their value",53,[[["self"]],["pixels"]]],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",53,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",53,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[11,"sub_image","","Returns a subimage that is a view into this image.",53,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer. Assumes 8 bit per pixel. Uses an optionally transparent index to adjust it's alpha value accordingly.",60,N]],"paths":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[4,"ColorType"],[4,"ImageError"],[4,"DecodingResult"],[4,"FilterType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"WebpDecoder"],[3,"Frame"],[3,"VP8Decoder"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"PNMSubtype"],[4,"SampleEncoding"],[4,"ArbitraryTuplType"],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,"JPEGEncoder"],[3,"JPEGDecoder"],[3,"Frame"],[4,"DisposalMethod"],[3,"Decoder"],[3,"Encoder"],[3,"TIFFDecoder"],[3,"TGADecoder"],[3,"BMPEncoder"],[3,"BMPDecoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDREncoder"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[3,"SubImage"],[3,"ImageBuffer"],[3,"Frames"],[3,"Frame"],[8,"ImageDecoder"],[8,"GenericImage"],[8,"Pixel"],[8,"ConvertBuffer"],[3,"Pixels"],[3,"MutPixels"],[3,"BiLevel"],[3,"HDRImageDecoderIterator"],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","items":[[3,"InflateWriter","inflate","A DEFLATE decoder.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",N,N],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",N,N],[3,"InflateStream","","",N,N],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",N,N],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.",N,N],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data, without calculating and validating the checksum.",N,N],[11,"new","","",0,[[["w"]],["inflatewriter"]]],[11,"from_zlib","","",0,[[["w"]],["inflatewriter"]]],[11,"finish","","",0,[[["self"]],["result"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw deflate stream.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream. without calculating and validating the checksum.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"reset","","Resets the decompressor, and replaces the current inner `BufRead` instance by `r`. without doing any extra reallocations.",1,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same reader.",1,[[["self"]]]],[11,"get_ref","","Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"into_inner","","Drops the decoder and return the inner `BufRead` instance.",1,[[["self"]],["r"]]],[11,"total_in","","Returns the total bytes read from the underlying `BufRead` instance.",1,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",1,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",1,[[["self"]],["u32"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw deflate stream.",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream. without calculating and validating the checksum.",2,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the decompressor, and replaces the current inner `BufRead` instance by `r`. without doing any extra reallocations.",2,[[["self"],["r"]],["r"]]],[11,"get_ref","","Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"into_inner","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same reader.",2,[[["self"]]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",2,[[["self"]],["u32"]]],[11,"new","","Create a new stream for decoding raw deflate encoded data.",3,[[],["inflatestream"]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data with a zlib header and footer",3,[[],["inflatestream"]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data with a zlib header and footer",3,[[],["inflatestream"]]],[11,"reset","","",3,[[["self"]]]],[11,"reset_to_zlib","","",3,[[["self"]]]],[11,"update","","Try to uncompress/decode the data in `data`.",3,N],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",3,[[["self"]],["u32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"read","","",1,N],[11,"read","","",2,N]],"paths":[[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"],[3,"InflateStream"]]};
searchIndex["input"]={"doc":"A flexible structure for user interactions to be used in window frameworks and widgets libraries.","items":[[3,"AfterRenderArgs","input","After render arguments.",N,N],[3,"CloseArgs","","Close arguments.",N,N],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",N,N],[12,"dt","","Expected idle time in seconds.",0,N],[3,"ButtonArgs","","Button arguments",N,N],[12,"state","","New state of the button.",1,N],[12,"button","","The button that changed state.",1,N],[12,"scancode","","An optional scancode that tells the physical layout of a keyboard key. For other devices than keyboard, this is set to `None`.",1,N],[3,"RenderArgs","","Render arguments",N,N],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",2,N],[12,"width","","The width of rendered area in points.",2,N],[12,"height","","The height of rendered area in points.",2,N],[12,"draw_width","","The width of rendered area in pixels.",2,N],[12,"draw_height","","The height of rendered area in pixels.",2,N],[3,"TouchArgs","","Touch arguments",N,N],[12,"device","","A unique identifier for touch device.",3,N],[12,"id","","A unique identifier for touch event.",3,N],[12,"x","","The x coordinate of the touch position, normalized 0..1.",3,N],[12,"y","","The y coordinate of the touch position, normalized 0..1.",3,N],[12,"z","","The z coordinate of the touch position, normalized 0..1.",3,N],[12,"px","","The x coordinate of the touch pressure direction.",3,N],[12,"py","","The y coordinate of the touch pressure direction.",3,N],[12,"pz","","The z coordinate of the touch pressure direction.",3,N],[12,"is_3d","","Whether the touch is in 3D.",3,N],[12,"touch","","The touch state.",3,N],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",N,N],[12,"dt","","Delta time in seconds.",4,N],[3,"EventId","","Used to identify events arguments provided by traits.",N,N],[12,"0","","",5,N],[4,"ButtonState","","Stores button state.",N,N],[13,"Press","","Button was pressed.",6,N],[13,"Release","","Button was released.",6,N],[4,"Touch","","Stores the touch state.",N,N],[13,"Start","","The start of touch, for example a finger pressed down on a touch screen.",7,N],[13,"Move","","The move of touch, for example a finger moving while touching a touch screen.",7,N],[13,"End","","The end of touch, for example taking a finger away from a touch screen.",7,N],[13,"Cancel","","The cancel of touch, for example the window loses focus.",7,N],[4,"Button","","Models different kinds of buttons.",N,N],[13,"Keyboard","","A keyboard button.",8,N],[13,"Mouse","","A mouse button.",8,N],[13,"Controller","","A controller button.",8,N],[13,"Hat","","A controller hat (d-Pad)",8,N],[4,"Motion","","Models different kinds of motion.",N,N],[13,"MouseCursor","","x and y in window coordinates.",9,N],[13,"MouseRelative","","x and y in relative coordinates.",9,N],[13,"MouseScroll","","x and y in scroll ticks.",9,N],[13,"ControllerAxis","","controller axis move event.",9,N],[13,"Touch","","touch event.",9,N],[4,"HatState","","",N,N],[13,"Centered","","",10,N],[13,"Up","","",10,N],[13,"Right","","",10,N],[13,"Down","","",10,N],[13,"Left","","",10,N],[13,"RightUp","","",10,N],[13,"RightDown","","",10,N],[13,"LeftUp","","",10,N],[13,"LeftDown","","",10,N],[4,"Input","","Models input events.",N,N],[13,"Button","","Changed button state.",11,N],[13,"Move","","Moved mouse cursor.",11,N],[13,"Text","","Text (usually from keyboard).",11,N],[13,"Resize","","Window got resized.",11,N],[13,"Focus","","Window gained or lost focus.",11,N],[13,"Cursor","","Window gained or lost cursor.",11,N],[13,"Close","","Window closed.",11,N],[4,"Loop","","Models loop events.",N,N],[13,"Render","","Render graphics.",12,N],[13,"AfterRender","","After rendering and swapping buffers.",12,N],[13,"Update","","Update the state of the application.",12,N],[13,"Idle","","Do background tasks that can be done incrementally.",12,N],[4,"Event","","Models all events.",N,N],[13,"Input","","Input events.",13,N],[13,"Loop","","Events that commonly used by event loops.",13,N],[13,"Custom","","Custom event.",13,N],[0,"controller","","Back-end agnostic controller events.",N,N],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed consistent across backends.",N,N],[12,"id","","Which controller was the button on.",14,N],[12,"button","","Which button was pressed.",14,N],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",N,N],[12,"id","","Which Controller was the button on.",15,N],[12,"state","","Which button was pressed.",15,N],[12,"which","","Which hat on the controller was changed",15,N],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across backends.",N,N],[12,"id","","Which controller moved.",16,N],[12,"axis","","The axis that moved.",16,N],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use a different range for various devices.",16,N],[8,"ControllerAxisEvent","","The position of a controller axis changed.",N,N],[10,"from_controller_axis_args","","Creates a controller axis event.",17,[[["controlleraxisargs"],["self"]],["option"]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",17,[[["self"],["f"]],["option"]]],[11,"controller_axis_args","","Returns controller axis arguments.",17,[[["self"]],["option",["controlleraxisargs"]]]],[11,"new","","Create a new ControllerButton object. Intended for use by backends when emitting events.",14,[[["i32"],["u8"]],["self"]]],[11,"new","","Create a new ControllerButton object. Intended for use by backends when emitting events.",15,[[["i32"],["u8"],["hatstate"]],["self"]]],[11,"new","","Create a new ControllerAxisArgs object. Intended for use by backends when emitting events.",16,[[["i32"],["u8"],["f64"]],["self"]]],[0,"keyboard","input","Back-end agnostic keyboard keys.",N,N],[3,"ModifierKey","input::keyboard","",N,N],[4,"Key","","Represent a keyboard key. Keycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",N,N],[13,"Unknown","","",18,N],[13,"Backspace","","",18,N],[13,"Tab","","",18,N],[13,"Return","","",18,N],[13,"Escape","","",18,N],[13,"Space","","",18,N],[13,"Exclaim","","",18,N],[13,"Quotedbl","","",18,N],[13,"Hash","","",18,N],[13,"Dollar","","",18,N],[13,"Percent","","",18,N],[13,"Ampersand","","",18,N],[13,"Quote","","",18,N],[13,"LeftParen","","",18,N],[13,"RightParen","","",18,N],[13,"Asterisk","","",18,N],[13,"Plus","","",18,N],[13,"Comma","","",18,N],[13,"Minus","","",18,N],[13,"Period","","",18,N],[13,"Slash","","",18,N],[13,"D0","","",18,N],[13,"D1","","",18,N],[13,"D2","","",18,N],[13,"D3","","",18,N],[13,"D4","","",18,N],[13,"D5","","",18,N],[13,"D6","","",18,N],[13,"D7","","",18,N],[13,"D8","","",18,N],[13,"D9","","",18,N],[13,"Colon","","",18,N],[13,"Semicolon","","",18,N],[13,"Less","","",18,N],[13,"Equals","","",18,N],[13,"Greater","","",18,N],[13,"Question","","",18,N],[13,"At","","",18,N],[13,"LeftBracket","","",18,N],[13,"Backslash","","",18,N],[13,"RightBracket","","",18,N],[13,"Caret","","",18,N],[13,"Underscore","","",18,N],[13,"Backquote","","",18,N],[13,"A","","",18,N],[13,"B","","",18,N],[13,"C","","",18,N],[13,"D","","",18,N],[13,"E","","",18,N],[13,"F","","",18,N],[13,"G","","",18,N],[13,"H","","",18,N],[13,"I","","",18,N],[13,"J","","",18,N],[13,"K","","",18,N],[13,"L","","",18,N],[13,"M","","",18,N],[13,"N","","",18,N],[13,"O","","",18,N],[13,"P","","",18,N],[13,"Q","","",18,N],[13,"R","","",18,N],[13,"S","","",18,N],[13,"T","","",18,N],[13,"U","","",18,N],[13,"V","","",18,N],[13,"W","","",18,N],[13,"X","","",18,N],[13,"Y","","",18,N],[13,"Z","","",18,N],[13,"Delete","","",18,N],[13,"CapsLock","","",18,N],[13,"F1","","",18,N],[13,"F2","","",18,N],[13,"F3","","",18,N],[13,"F4","","",18,N],[13,"F5","","",18,N],[13,"F6","","",18,N],[13,"F7","","",18,N],[13,"F8","","",18,N],[13,"F9","","",18,N],[13,"F10","","",18,N],[13,"F11","","",18,N],[13,"F12","","",18,N],[13,"PrintScreen","","",18,N],[13,"ScrollLock","","",18,N],[13,"Pause","","",18,N],[13,"Insert","","",18,N],[13,"Home","","",18,N],[13,"PageUp","","",18,N],[13,"End","","",18,N],[13,"PageDown","","",18,N],[13,"Right","","",18,N],[13,"Left","","",18,N],[13,"Down","","",18,N],[13,"Up","","",18,N],[13,"NumLockClear","","",18,N],[13,"NumPadDivide","","",18,N],[13,"NumPadMultiply","","",18,N],[13,"NumPadMinus","","",18,N],[13,"NumPadPlus","","",18,N],[13,"NumPadEnter","","",18,N],[13,"NumPad1","","",18,N],[13,"NumPad2","","",18,N],[13,"NumPad3","","",18,N],[13,"NumPad4","","",18,N],[13,"NumPad5","","",18,N],[13,"NumPad6","","",18,N],[13,"NumPad7","","",18,N],[13,"NumPad8","","",18,N],[13,"NumPad9","","",18,N],[13,"NumPad0","","",18,N],[13,"NumPadPeriod","","",18,N],[13,"Application","","",18,N],[13,"Power","","",18,N],[13,"NumPadEquals","","",18,N],[13,"F13","","",18,N],[13,"F14","","",18,N],[13,"F15","","",18,N],[13,"F16","","",18,N],[13,"F17","","",18,N],[13,"F18","","",18,N],[13,"F19","","",18,N],[13,"F20","","",18,N],[13,"F21","","",18,N],[13,"F22","","",18,N],[13,"F23","","",18,N],[13,"F24","","",18,N],[13,"Execute","","",18,N],[13,"Help","","",18,N],[13,"Menu","","",18,N],[13,"Select","","",18,N],[13,"Stop","","",18,N],[13,"Again","","",18,N],[13,"Undo","","",18,N],[13,"Cut","","",18,N],[13,"Copy","","",18,N],[13,"Paste","","",18,N],[13,"Find","","",18,N],[13,"Mute","","",18,N],[13,"VolumeUp","","",18,N],[13,"VolumeDown","","",18,N],[13,"NumPadComma","","",18,N],[13,"NumPadEqualsAS400","","",18,N],[13,"AltErase","","",18,N],[13,"Sysreq","","",18,N],[13,"Cancel","","",18,N],[13,"Clear","","",18,N],[13,"Prior","","",18,N],[13,"Return2","","",18,N],[13,"Separator","","",18,N],[13,"Out","","",18,N],[13,"Oper","","",18,N],[13,"ClearAgain","","",18,N],[13,"CrSel","","",18,N],[13,"ExSel","","",18,N],[13,"NumPad00","","",18,N],[13,"NumPad000","","",18,N],[13,"ThousandsSeparator","","",18,N],[13,"DecimalSeparator","","",18,N],[13,"CurrencyUnit","","",18,N],[13,"CurrencySubUnit","","",18,N],[13,"NumPadLeftParen","","",18,N],[13,"NumPadRightParen","","",18,N],[13,"NumPadLeftBrace","","",18,N],[13,"NumPadRightBrace","","",18,N],[13,"NumPadTab","","",18,N],[13,"NumPadBackspace","","",18,N],[13,"NumPadA","","",18,N],[13,"NumPadB","","",18,N],[13,"NumPadC","","",18,N],[13,"NumPadD","","",18,N],[13,"NumPadE","","",18,N],[13,"NumPadF","","",18,N],[13,"NumPadXor","","",18,N],[13,"NumPadPower","","",18,N],[13,"NumPadPercent","","",18,N],[13,"NumPadLess","","",18,N],[13,"NumPadGreater","","",18,N],[13,"NumPadAmpersand","","",18,N],[13,"NumPadDblAmpersand","","",18,N],[13,"NumPadVerticalBar","","",18,N],[13,"NumPadDblVerticalBar","","",18,N],[13,"NumPadColon","","",18,N],[13,"NumPadHash","","",18,N],[13,"NumPadSpace","","",18,N],[13,"NumPadAt","","",18,N],[13,"NumPadExclam","","",18,N],[13,"NumPadMemStore","","",18,N],[13,"NumPadMemRecall","","",18,N],[13,"NumPadMemClear","","",18,N],[13,"NumPadMemAdd","","",18,N],[13,"NumPadMemSubtract","","",18,N],[13,"NumPadMemMultiply","","",18,N],[13,"NumPadMemDivide","","",18,N],[13,"NumPadPlusMinus","","",18,N],[13,"NumPadClear","","",18,N],[13,"NumPadClearEntry","","",18,N],[13,"NumPadBinary","","",18,N],[13,"NumPadOctal","","",18,N],[13,"NumPadDecimal","","",18,N],[13,"NumPadHexadecimal","","",18,N],[13,"LCtrl","","",18,N],[13,"LShift","","",18,N],[13,"LAlt","","",18,N],[13,"LGui","","",18,N],[13,"RCtrl","","",18,N],[13,"RShift","","",18,N],[13,"RAlt","","",18,N],[13,"RGui","","",18,N],[13,"Mode","","",18,N],[13,"AudioNext","","",18,N],[13,"AudioPrev","","",18,N],[13,"AudioStop","","",18,N],[13,"AudioPlay","","",18,N],[13,"AudioMute","","",18,N],[13,"MediaSelect","","",18,N],[13,"Www","","",18,N],[13,"Mail","","",18,N],[13,"Calculator","","",18,N],[13,"Computer","","",18,N],[13,"AcSearch","","",18,N],[13,"AcHome","","",18,N],[13,"AcBack","","",18,N],[13,"AcForward","","",18,N],[13,"AcStop","","",18,N],[13,"AcRefresh","","",18,N],[13,"AcBookmarks","","",18,N],[13,"BrightnessDown","","",18,N],[13,"BrightnessUp","","",18,N],[13,"DisplaySwitch","","",18,N],[13,"KbdIllumToggle","","",18,N],[13,"KbdIllumDown","","",18,N],[13,"KbdIllumUp","","",18,N],[13,"Eject","","",18,N],[13,"Sleep","","",18,N],[18,"NO_MODIFIER","","No modifier.",19,N],[18,"CTRL","","Ctrl.",19,N],[18,"SHIFT","","Shift.",19,N],[18,"ALT","","Alt.",19,N],[18,"GUI","","Gui.",19,N],[18,"CTRL_SHIFT","","Ctrl + Shift.",19,N],[18,"CTRL_ALT","","Ctrl + Alt.",19,N],[18,"CTRL_GUI","","Ctrl + Gui.",19,N],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",19,N],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",19,N],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",19,N],[18,"SHIFT_ALT","","Shift + Alt.",19,N],[18,"SHIFT_GUI","","Shift + Gui.",19,N],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",19,N],[18,"ALT_GUI","","Alt + Gui.",19,N],[11,"empty","","Returns an empty set of flags.",19,[[],["modifierkey"]]],[11,"all","","Returns the set containing all flags.",19,[[],["modifierkey"]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",19,[[["u8"]],["option",["modifierkey"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",19,[[["u8"]],["modifierkey"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,[[["self"],["modifierkey"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,[[["self"],["modifierkey"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",19,[[["self"],["modifierkey"],["bool"]]]],[11,"event","","Change modifier key state depending on input.",19,[[["self"],["e"]]]],[11,"code","","Returns an id of the key",18,[[["self"]],["i32"]]],[0,"mouse","input","Back-end agnostic mouse buttons.",N,N],[4,"MouseButton","input::mouse","Represent a mouse button.",N,N],[13,"Unknown","","Unknown mouse button.",20,N],[13,"Left","","Left mouse button.",20,N],[13,"Right","","Right mouse button.",20,N],[13,"Middle","","Middle mouse button.",20,N],[13,"X1","","Extra mouse button number 1.",20,N],[13,"X2","","Extra mouse button number 2.",20,N],[13,"Button6","","Mouse button number 6.",20,N],[13,"Button7","","Mouse button number 7.",20,N],[13,"Button8","","Mouse button number 8.",20,N],[8,"MouseCursorEvent","","The position of the mouse cursor",N,N],[10,"from_xy","","Creates a mouse cursor event.",21,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",21,[[["self"],["f"]],["option"]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",21,[[["self"]],["option"]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",N,N],[10,"from_xy","","Creates a mouse relative event.",22,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",22,[[["self"],["f"]],["option"]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",22,[[["self"]],["option"]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel",N,N],[10,"from_xy","","Creates a mouse scroll event.",23,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",23,[[["self"],["f"]],["option"]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",23,[[["self"]],["option"]]],[0,"generic_event","input","Trait for generic events",N,N],[8,"GenericEvent","input::generic_event","Implemented by all events",N,N],[10,"event_id","","The id of this event.",24,[[["self"]],["eventid"]]],[10,"with_args","","Calls closure with arguments",24,[[["self"],["f"]],["u"]]],[11,"viewport","input","Returns viewport information filling entire render area.",2,[[["self"]],["viewport"]]],[11,"new","","Creates arguments for 2D touch.",3,N],[11,"new_3d","","Creates arguments for 3D touch.",3,N],[11,"position","","The position of the touch in 2D.",3,N],[11,"position_3d","","The position of the touch in 3D.",3,N],[11,"pressure","","The pressure magnitude, normalized 0..1.",3,[[["self"]],["f64"]]],[11,"pressure_3d","","The pressure vector in 3D.",3,N],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",N,N],[10,"from_after_render_args","","Creates an after render event.",25,[[["afterrenderargs"],["self"]],["option"]]],[10,"after_render","","Calls closure if this is an after render event.",25,[[["self"],["f"]],["option"]]],[11,"after_render_args","","Returns after render arguments.",25,[[["self"]],["option",["afterrenderargs"]]]],[8,"CloseEvent","","Window is closing.",N,N],[10,"from_close_args","","Creates a close event from arguments.",26,[[["closeargs"],["self"]],["option"]]],[10,"close","","Calls closure if this is a close event.",26,[[["self"],["f"]],["option"]]],[11,"close_args","","Returns close arguments.",26,[[["self"]],["option",["closeargs"]]]],[8,"CursorEvent","","When window gets or loses cursor",N,N],[10,"from_cursor","","Creates a cursor event.",27,[[["bool"],["self"]],["option"]]],[10,"cursor","","Calls closure if this is a cursor event.",27,[[["self"],["f"]],["option"]]],[11,"cursor_args","","Returns cursor arguments.",27,[[["self"]],["option",["bool"]]]],[8,"FocusEvent","","When window gets or loses focus",N,N],[10,"from_focused","","Creates a focus event.",28,[[["bool"],["self"]],["option"]]],[10,"focus","","Calls closure if this is a focus event.",28,[[["self"],["f"]],["option"]]],[11,"focus_args","","Returns focus arguments.",28,[[["self"]],["option",["bool"]]]],[8,"IdleEvent","","When background tasks should be performed",N,N],[10,"from_idle_args","","Creates an idle event.",29,[[["idleargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",29,[[["f64"],["self"]],["option"]]],[10,"idle","","Calls closure if this is an idle event.",29,[[["self"],["f"]],["option"]]],[11,"idle_args","","Returns idle arguments.",29,[[["self"]],["option",["idleargs"]]]],[8,"ButtonEvent","","Changed button state.",N,N],[10,"from_button_args","","Creates a button event.",30,[[["buttonargs"],["self"]],["option"]]],[10,"button","","Calls closure if this is a button event.",30,[[["self"],["f"]],["option"]]],[11,"button_args","","Returns button arguments.",30,[[["self"]],["option",["buttonargs"]]]],[8,"PressEvent","","The press of a button",N,N],[10,"from_button","","Creates a press event.",31,[[["button"],["self"]],["option"]]],[10,"press","","Calls closure if this is a press event.",31,[[["self"],["f"]],["option"]]],[11,"press_args","","Returns press arguments.",31,[[["self"]],["option",["button"]]]],[8,"ReleaseEvent","","The release of a button",N,N],[10,"from_button","","Creates a release event.",32,[[["button"],["self"]],["option"]]],[10,"release","","Calls closure if this is a release event.",32,[[["self"],["f"]],["option"]]],[11,"release_args","","Returns release arguments.",32,[[["self"]],["option",["button"]]]],[8,"ResizeEvent","","When the window is resized",N,N],[10,"from_width_height","","Creates a resize event.",33,[[["u32"],["u32"],["self"]],["option"]]],[10,"resize","","Calls closure if this is a resize event.",33,[[["self"],["f"]],["option"]]],[11,"resize_args","","Returns resize arguments.",33,[[["self"]],["option"]]],[8,"RenderEvent","","When the next frame should be rendered",N,N],[10,"from_render_args","","Creates a render event.",34,[[["renderargs"],["self"]],["option"]]],[10,"render","","Calls closure if this is a render event.",34,[[["self"],["f"]],["option"]]],[11,"render_args","","Returns render arguments.",34,[[["self"]],["option",["renderargs"]]]],[8,"TextEvent","","When receiving text from user, such as typing a character",N,N],[10,"from_text","","Creates a text event.",35,[[["str"],["self"]],["option"]]],[10,"text","","Calls closure if this is a text event.",35,[[["self"],["f"]],["option"]]],[11,"text_args","","Returns text arguments.",35,[[["self"]],["option",["string"]]]],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",N,N],[10,"from_touch_args","","Creates a touch event.",36,[[["touchargs"],["self"]],["option"]]],[10,"touch","","Calls closure if this is a touch event.",36,[[["self"],["f"]],["option"]]],[11,"touch_args","","Returns touch arguments.",36,[[["self"]],["option",["touchargs"]]]],[8,"UpdateEvent","","When the application state should be updated",N,N],[10,"from_update_args","","Creates an update event.",37,[[["updateargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",37,[[["f64"],["self"]],["option"]]],[10,"update","","Calls closure if this is an update event.",37,[[["self"],["f"]],["option"]]],[11,"update_args","","Returns update arguments.",37,[[["self"]],["option",["updateargs"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","input::controller","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","input::keyboard","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","input::mouse","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from_controller_axis_args","input","",13,[[["controlleraxisargs"],["self"]],["option"]]],[11,"controller_axis","","",13,[[["self"],["f"]],["option"]]],[11,"from_xy","","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_cursor","","",13,[[["self"],["f"]],["option"]]],[11,"from_xy","","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_relative","","",13,[[["self"],["f"]],["option"]]],[11,"from_xy","","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_scroll","","",13,[[["self"],["f"]],["option"]]],[11,"event_id","","",13,[[["self"]],["eventid"]]],[11,"with_args","","",13,[[["self"],["f"]],["u"]]],[11,"from_after_render_args","","",13,[[["afterrenderargs"],["self"]],["option"]]],[11,"after_render","","",13,[[["self"],["f"]],["option"]]],[11,"from_button_args","","",13,[[["buttonargs"],["self"]],["option"]]],[11,"button","","",13,[[["self"],["f"]],["option"]]],[11,"from_close_args","","",13,[[["closeargs"],["self"]],["option"]]],[11,"close","","",13,[[["self"],["f"]],["option"]]],[11,"from_cursor","","",13,[[["bool"],["self"]],["option"]]],[11,"cursor","","",13,[[["self"],["f"]],["option"]]],[11,"from_focused","","",13,[[["bool"],["self"]],["option"]]],[11,"focus","","",13,[[["self"],["f"]],["option"]]],[11,"from_idle_args","","",13,[[["idleargs"],["self"]],["option"]]],[11,"idle","","",13,[[["self"],["f"]],["option"]]],[11,"from_render_args","","",13,[[["renderargs"],["self"]],["option"]]],[11,"render","","",13,[[["self"],["f"]],["option"]]],[11,"from_width_height","","",13,[[["u32"],["u32"],["self"]],["option"]]],[11,"resize","","",13,[[["self"],["f"]],["option"]]],[11,"from_text","","",13,[[["str"],["self"]],["option"]]],[11,"text","","",13,[[["self"],["f"]],["option"]]],[11,"from_touch_args","","",13,[[["touchargs"],["self"]],["option"]]],[11,"touch","","",13,[[["self"],["f"]],["option"]]],[11,"from_update_args","","",13,[[["updateargs"],["self"]],["option"]]],[11,"update","","",13,[[["self"],["f"]],["option"]]],[11,"clone","input::controller","",14,[[["self"]],["controllerbutton"]]],[11,"clone","","",15,[[["self"]],["controllerhat"]]],[11,"clone","","",16,[[["self"]],["controlleraxisargs"]]],[11,"clone","input::keyboard","",19,[[["self"]],["modifierkey"]]],[11,"clone","","",18,[[["self"]],["key"]]],[11,"clone","input::mouse","",20,[[["self"]],["mousebutton"]]],[11,"clone","input","",38,[[["self"]],["afterrenderargs"]]],[11,"clone","","",6,[[["self"]],["buttonstate"]]],[11,"clone","","",1,[[["self"]],["buttonargs"]]],[11,"clone","","",39,[[["self"]],["closeargs"]]],[11,"clone","","",0,[[["self"]],["idleargs"]]],[11,"clone","","",2,[[["self"]],["renderargs"]]],[11,"clone","","",7,[[["self"]],["touch"]]],[11,"clone","","",3,[[["self"]],["touchargs"]]],[11,"clone","","",4,[[["self"]],["updateargs"]]],[11,"clone","","",5,[[["self"]],["eventid"]]],[11,"clone","","",8,[[["self"]],["button"]]],[11,"clone","","",9,[[["self"]],["motion"]]],[11,"clone","","",10,[[["self"]],["hatstate"]]],[11,"clone","","",11,[[["self"]],["input"]]],[11,"clone","","",12,[[["self"]],["loop"]]],[11,"clone","","",13,[[["self"]],["event"]]],[11,"extend","input::keyboard","",19,[[["self"],["t"]]]],[11,"from","","",18,[[["u32"]],["key"]]],[11,"from","input::mouse","",20,[[["u32"]],["mousebutton"]]],[11,"from","input","",8,[[["key"]],["self"]]],[11,"from","","",8,[[["mousebutton"]],["self"]]],[11,"from","","",8,[[["controllerbutton"]],["self"]]],[11,"from","","",11,[[["buttonargs"]],["self"]]],[11,"from","","",9,[[["controlleraxisargs"]],["self"]]],[11,"from","","",11,[[["controlleraxisargs"]],["self"]]],[11,"from","","",9,[[["touchargs"]],["self"]]],[11,"from","","",11,[[["touchargs"]],["self"]]],[11,"from","","",11,[[["motion"]],["self"]]],[11,"from","","",12,[[["renderargs"]],["self"]]],[11,"from","","",13,[[["renderargs"]],["self"]]],[11,"from","","",12,[[["afterrenderargs"]],["self"]]],[11,"from","","",13,[[["afterrenderargs"]],["self"]]],[11,"from","","",12,[[["updateargs"]],["self"]]],[11,"from","","",13,[[["updateargs"]],["self"]]],[11,"from","","",12,[[["idleargs"]],["self"]]],[11,"from","","",13,[[["idleargs"]],["self"]]],[11,"from","","",11,[[["closeargs"]],["self"]]],[11,"from","","",13,[[["t"]],["self"]]],[11,"from","","",13,[[["loop"]],["self"]]],[11,"into","","",13,[[["self"]],["option",["input"]]]],[11,"into","","",13,[[["self"]],["option",["loop"]]]],[11,"partial_cmp","input::keyboard","",19,[[["self"],["modifierkey"]],["option",["ordering"]]]],[11,"lt","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"le","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"gt","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"ge","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["key"]],["option",["ordering"]]]],[11,"partial_cmp","input::mouse","",20,[[["self"],["mousebutton"]],["option",["ordering"]]]],[11,"default","input::keyboard","",19,[[],["modifierkey"]]],[11,"eq","input::controller","",14,[[["self"],["controllerbutton"]],["bool"]]],[11,"ne","","",14,[[["self"],["controllerbutton"]],["bool"]]],[11,"eq","","",15,[[["self"],["controllerhat"]],["bool"]]],[11,"ne","","",15,[[["self"],["controllerhat"]],["bool"]]],[11,"eq","","",16,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"ne","","",16,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"eq","input::keyboard","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"ne","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"eq","","",18,[[["self"],["key"]],["bool"]]],[11,"eq","input::mouse","",20,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","input","",38,[[["self"],["afterrenderargs"]],["bool"]]],[11,"eq","","",6,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"ne","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"eq","","",39,[[["self"],["closeargs"]],["bool"]]],[11,"eq","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"ne","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"eq","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"ne","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"eq","","",7,[[["self"],["touch"]],["bool"]]],[11,"eq","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"ne","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"eq","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"ne","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"eq","","",5,[[["self"],["eventid"]],["bool"]]],[11,"ne","","",5,[[["self"],["eventid"]],["bool"]]],[11,"eq","","",8,[[["self"],["button"]],["bool"]]],[11,"ne","","",8,[[["self"],["button"]],["bool"]]],[11,"eq","","",9,[[["self"],["motion"]],["bool"]]],[11,"ne","","",9,[[["self"],["motion"]],["bool"]]],[11,"eq","","",10,[[["self"],["hatstate"]],["bool"]]],[11,"eq","","",11,[[["self"],["input"]],["bool"]]],[11,"ne","","",11,[[["self"],["input"]],["bool"]]],[11,"eq","","",12,[[["self"],["loop"]],["bool"]]],[11,"ne","","",12,[[["self"],["loop"]],["bool"]]],[11,"eq","","",13,[[["self"],["event"]],["bool"]]],[11,"cmp","input::keyboard","",19,[[["self"],["modifierkey"]],["ordering"]]],[11,"cmp","","",18,[[["self"],["key"]],["ordering"]]],[11,"cmp","input::mouse","",20,[[["self"],["mousebutton"]],["ordering"]]],[11,"hash","input::controller","",14,N],[11,"hash","","",15,N],[11,"hash","input::keyboard","",19,N],[11,"hash","","",18,N],[11,"hash","input::mouse","",20,N],[11,"hash","input","",6,N],[11,"hash","","",1,N],[11,"hash","","",8,N],[11,"hash","","",10,N],[11,"fmt","input::controller","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","input::keyboard","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","input::mouse","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","input","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"sub","input::keyboard","Returns the set difference of the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["self"],["modifierkey"]]]],[11,"not","","Returns the complement of this set of flags.",19,[[["self"]],["modifierkey"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["self"],["modifierkey"]]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["self"],["modifierkey"]]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["self"],["modifierkey"]]]],[11,"from_iter","","",19,[[["t"]],["modifierkey"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"serialize","input::controller","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","input::keyboard","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","input::mouse","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","input","",38,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"deserialize","input::controller","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","input::keyboard","",19,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","input::mouse","",20,[[["__d"]],["result"]]],[11,"deserialize","input","",38,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",39,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"after_render_args","","Returns after render arguments.",25,[[["self"]],["option",["afterrenderargs"]]]],[11,"button_args","","Returns button arguments.",30,[[["self"]],["option",["buttonargs"]]]],[11,"press_args","","Returns press arguments.",31,[[["self"]],["option",["button"]]]],[11,"release_args","","Returns release arguments.",32,[[["self"]],["option",["button"]]]],[11,"close_args","","Returns close arguments.",26,[[["self"]],["option",["closeargs"]]]],[11,"cursor_args","","Returns cursor arguments.",27,[[["self"]],["option",["bool"]]]],[11,"focus_args","","Returns focus arguments.",28,[[["self"]],["option",["bool"]]]],[11,"from_dt","","Creates an update event with delta time.",29,[[["f64"],["self"]],["option"]]],[11,"idle_args","","Returns idle arguments.",29,[[["self"]],["option",["idleargs"]]]],[11,"render_args","","Returns render arguments.",34,[[["self"]],["option",["renderargs"]]]],[11,"resize_args","","Returns resize arguments.",33,[[["self"]],["option"]]],[11,"text_args","","Returns text arguments.",35,[[["self"]],["option",["string"]]]],[11,"touch_args","","Returns touch arguments.",36,[[["self"]],["option",["touchargs"]]]],[11,"from_dt","","Creates an update event with delta time.",37,[[["f64"],["self"]],["option"]]],[11,"update_args","","Returns update arguments.",37,[[["self"]],["option",["updateargs"]]]]],"paths":[[3,"IdleArgs"],[3,"ButtonArgs"],[3,"RenderArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[3,"EventId"],[4,"ButtonState"],[4,"Touch"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"IdleEvent"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[8,"RenderEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"UpdateEvent"],[3,"AfterRenderArgs"],[3,"CloseArgs"]]};
searchIndex["interpolation"]={"doc":"Interpolation algorithms.","items":[[4,"EaseFunction","interpolation","",N,N],[13,"QuadraticIn","","",0,N],[13,"QuadraticOut","","",0,N],[13,"QuadraticInOut","","",0,N],[13,"CubicIn","","",0,N],[13,"CubicOut","","",0,N],[13,"CubicInOut","","",0,N],[13,"QuarticIn","","",0,N],[13,"QuarticOut","","",0,N],[13,"QuarticInOut","","",0,N],[13,"QuinticIn","","",0,N],[13,"QuinticOut","","",0,N],[13,"QuinticInOut","","",0,N],[13,"SineIn","","",0,N],[13,"SineOut","","",0,N],[13,"SineInOut","","",0,N],[13,"CircularIn","","",0,N],[13,"CircularOut","","",0,N],[13,"CircularInOut","","",0,N],[13,"ExponentialIn","","",0,N],[13,"ExponentialOut","","",0,N],[13,"ExponentialInOut","","",0,N],[13,"ElasticIn","","",0,N],[13,"ElasticOut","","",0,N],[13,"ElasticInOut","","",0,N],[13,"BackIn","","",0,N],[13,"BackOut","","",0,N],[13,"BackInOut","","",0,N],[13,"BounceIn","","",0,N],[13,"BounceOut","","",0,N],[13,"BounceInOut","","",0,N],[5,"lerp","","Performs linear interpolation. A linear interpolation consists of two states 'a' and 'b'. The 't' variable is a factor between 0 and 1 that gives weight to 'a' or 'b'. When 't' is zero then 'a' has full weight. When 't' is one then 'b' has full weight.",N,N],[5,"quad_bez","","Performs quadratic beziér interpolation. This is done by nesting linear interpolations. For more information, see:",N,N],[5,"cub_bez","","Performs cubic beziér interpolation. This is done by interpolation between two quadratic beziér. For more information, see:",N,N],[8,"Ease","","",N,N],[10,"calc","","Calculate the eased value, normalized",1,[[["self"],["easefunction"]],["self"]]],[10,"quadratic_in","","",1,[[["self"]],["self"]]],[10,"quadratic_out","","",1,[[["self"]],["self"]]],[10,"quadratic_in_out","","",1,[[["self"]],["self"]]],[10,"cubic_in","","",1,[[["self"]],["self"]]],[10,"cubic_out","","",1,[[["self"]],["self"]]],[10,"cubic_in_out","","",1,[[["self"]],["self"]]],[10,"quartic_in","","",1,[[["self"]],["self"]]],[10,"quartic_out","","",1,[[["self"]],["self"]]],[10,"quartic_in_out","","",1,[[["self"]],["self"]]],[10,"quintic_in","","",1,[[["self"]],["self"]]],[10,"quintic_out","","",1,[[["self"]],["self"]]],[10,"quintic_in_out","","",1,[[["self"]],["self"]]],[10,"sine_in","","",1,[[["self"]],["self"]]],[10,"sine_out","","",1,[[["self"]],["self"]]],[10,"sine_in_out","","",1,[[["self"]],["self"]]],[10,"circular_in","","",1,[[["self"]],["self"]]],[10,"circular_out","","",1,[[["self"]],["self"]]],[10,"circular_in_out","","",1,[[["self"]],["self"]]],[10,"exponential_in","","",1,[[["self"]],["self"]]],[10,"exponential_out","","",1,[[["self"]],["self"]]],[10,"exponential_in_out","","",1,[[["self"]],["self"]]],[10,"elastic_in","","",1,[[["self"]],["self"]]],[10,"elastic_out","","",1,[[["self"]],["self"]]],[10,"elastic_in_out","","",1,[[["self"]],["self"]]],[10,"back_in","","",1,[[["self"]],["self"]]],[10,"back_out","","",1,[[["self"]],["self"]]],[10,"back_in_out","","",1,[[["self"]],["self"]]],[10,"bounce_in","","",1,[[["self"]],["self"]]],[10,"bounce_out","","",1,[[["self"]],["self"]]],[10,"bounce_in_out","","",1,[[["self"]],["self"]]],[8,"Spatial","","Used for interpolation over spatial structures.",N,N],[16,"Scalar","","The scalar type.",2,N],[10,"add","","Add",2,[[["self"],["self"]],["self"]]],[10,"sub","","Subtract",2,[[["self"],["self"]],["self"]]],[10,"scale","","Scales with a scalar.",2,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["easefunction"]]],[11,"eq","","",0,[[["self"],["easefunction"]],["bool"]]]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","items":[[3,"Decoder","jpeg_decoder","JPEG decoder",N,N],[3,"ImageInfo","","Represents metadata of an image.",N,N],[12,"width","","The width of the image, in pixels.",0,N],[12,"height","","The height of the image, in pixels.",0,N],[12,"pixel_format","","The pixel format of the image.",0,N],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit depths a pixel can have.",N,N],[13,"L8","","Luminance (grayscale), 8 bits",1,N],[13,"RGB24","","RGB, 8 bits per channel",1,N],[13,"CMYK32","","CMYK, 8 bits per channel",1,N],[4,"Error","","Errors that can occur while decoding a JPEG image.",N,N],[13,"Format","","The image is not formatted properly. The string contains detailed information about the error.",2,N],[13,"Unsupported","","The image makes use of a JPEG feature not (currently) supported by this library.",2,N],[13,"Io","","An I/O error occurred while decoding the image.",2,N],[13,"Internal","","An internal error occurred while decoding the image.",2,N],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported by this library.",N,N],[13,"Hierarchical","","Hierarchical JPEG.",3,N],[13,"Lossless","","Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman coding.",3,N],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what is currently supported.",3,N],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components are currently supported.",3,N],[13,"DNL","","An image can specify a zero height in the frame header and use the DNL (Define Number of Lines) marker at the end of the first scan to define the number of lines in the frame.",3,N],[13,"SubsamplingRatio","","Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,N],[11,"new","","Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info","","Returns metadata about the image.",4,[[["self"]],["option",["imageinfo"]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[["self"]],["result",["error"]]]],[11,"decode","","Decodes the image and returns the decoded pixels if successful.",4,[[["self"]],["result",["vec","error"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["pixelformat"]]],[11,"clone","","",0,[[["self"]],["imageinfo"]]],[11,"from","","",2,[[["ioerror"]],["error"]]],[11,"from","","",2,[[["recverror"]],["error"]]],[11,"from","","",2,[[["senderror"]],["error"]]],[11,"eq","","",1,[[["self"],["pixelformat"]],["bool"]]],[11,"eq","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]]],"paths":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",70,N],[12,"p_offset","","",70,N],[12,"p_vaddr","","",70,N],[12,"p_paddr","","",70,N],[12,"p_filesz","","",70,N],[12,"p_memsz","","",70,N],[12,"p_flags","","",70,N],[12,"p_align","","",70,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",71,N],[12,"p_flags","","",71,N],[12,"p_offset","","",71,N],[12,"p_vaddr","","",71,N],[12,"p_paddr","","",71,N],[12,"p_filesz","","",71,N],[12,"p_memsz","","",71,N],[12,"p_align","","",71,N],[3,"ucred","","",N,N],[12,"pid","","",72,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",73,N],[12,"mnt_dir","","",73,N],[12,"mnt_type","","",73,N],[12,"mnt_opts","","",73,N],[12,"mnt_freq","","",73,N],[12,"mnt_passno","","",73,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",74,N],[12,"version","","",74,N],[12,"reserved","","",74,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",75,N],[12,"ipi6_ifindex","","",75,N],[3,"arpd_request","","",N,N],[12,"req","","",76,N],[12,"ip","","",76,N],[12,"dev","","",76,N],[12,"stamp","","",76,N],[12,"updated","","",76,N],[12,"ha","","",76,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",77,N],[12,"aio_lio_opcode","","",77,N],[12,"aio_reqprio","","",77,N],[12,"aio_buf","","",77,N],[12,"aio_nbytes","","",77,N],[12,"aio_sigevent","","",77,N],[12,"aio_offset","","",77,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",78,N],[12,"e_exit","","",78,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",79,N],[12,"tv_usec","","",79,N],[3,"utmpx","","",N,N],[12,"ut_type","","",80,N],[12,"ut_pid","","",80,N],[12,"ut_line","","",80,N],[12,"ut_id","","",80,N],[12,"ut_user","","",80,N],[12,"ut_host","","",80,N],[12,"ut_exit","","",80,N],[12,"ut_session","","",80,N],[12,"ut_tv","","",80,N],[12,"ut_addr_v6","","",80,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",81,N],[12,"sa_mask","","",81,N],[12,"sa_flags","","",81,N],[12,"sa_restorer","","",81,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",82,N],[12,"ss_flags","","",82,N],[12,"ss_size","","",82,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",83,N],[12,"si_errno","","",83,N],[12,"si_code","","",83,N],[12,"_pad","","",83,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",84,N],[12,"gl_pathv","","",84,N],[12,"gl_offs","","",84,N],[12,"gl_flags","","",84,N],[3,"statfs","","",N,N],[12,"f_type","","",85,N],[12,"f_bsize","","",85,N],[12,"f_blocks","","",85,N],[12,"f_bfree","","",85,N],[12,"f_bavail","","",85,N],[12,"f_files","","",85,N],[12,"f_ffree","","",85,N],[12,"f_fsid","","",85,N],[12,"f_namelen","","",85,N],[12,"f_frsize","","",85,N],[3,"msghdr","","",N,N],[12,"msg_name","","",86,N],[12,"msg_namelen","","",86,N],[12,"msg_iov","","",86,N],[12,"msg_iovlen","","",86,N],[12,"msg_control","","",86,N],[12,"msg_controllen","","",86,N],[12,"msg_flags","","",86,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",87,N],[12,"cmsg_level","","",87,N],[12,"cmsg_type","","",87,N],[3,"termios","","",N,N],[12,"c_iflag","","",88,N],[12,"c_oflag","","",88,N],[12,"c_cflag","","",88,N],[12,"c_lflag","","",88,N],[12,"c_line","","",88,N],[12,"c_cc","","",88,N],[12,"c_ispeed","","",88,N],[12,"c_ospeed","","",88,N],[3,"flock","","",N,N],[12,"l_type","","",89,N],[12,"l_whence","","",89,N],[12,"l_start","","",89,N],[12,"l_len","","",89,N],[12,"l_pid","","",89,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",90,N],[12,"ordblks","","",90,N],[12,"smblks","","",90,N],[12,"hblks","","",90,N],[12,"hblkhd","","",90,N],[12,"usmblks","","",90,N],[12,"fsmblks","","",90,N],[12,"uordblks","","",90,N],[12,"fordblks","","",90,N],[12,"keepcost","","",90,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",91,N],[12,"nlmsg_type","","",91,N],[12,"nlmsg_flags","","",91,N],[12,"nlmsg_seq","","",91,N],[12,"nlmsg_pid","","",91,N],[3,"nlmsgerr","","",N,N],[12,"error","","",92,N],[12,"msg","","",92,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",93,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",94,N],[12,"nm_block_nr","","",94,N],[12,"nm_frame_size","","",94,N],[12,"nm_frame_nr","","",94,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",95,N],[12,"nm_len","","",95,N],[12,"nm_group","","",95,N],[12,"nm_pid","","",95,N],[12,"nm_uid","","",95,N],[12,"nm_gid","","",95,N],[3,"nlattr","","",N,N],[12,"nla_len","","",96,N],[12,"nla_type","","",96,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",97,N],[12,"rt_dst","","",97,N],[12,"rt_gateway","","",97,N],[12,"rt_genmask","","",97,N],[12,"rt_flags","","",97,N],[12,"rt_pad2","","",97,N],[12,"rt_pad3","","",97,N],[12,"rt_tos","","",97,N],[12,"rt_class","","",97,N],[12,"rt_pad4","","",97,N],[12,"rt_metric","","",97,N],[12,"rt_dev","","",97,N],[12,"rt_mtu","","",97,N],[12,"rt_window","","",97,N],[12,"rt_irtt","","",97,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",98,N],[12,"loads","","",98,N],[12,"totalram","","",98,N],[12,"freeram","","",98,N],[12,"sharedram","","",98,N],[12,"bufferram","","",98,N],[12,"totalswap","","",98,N],[12,"freeswap","","",98,N],[12,"procs","","",98,N],[12,"pad","","",98,N],[12,"totalhigh","","",98,N],[12,"freehigh","","",98,N],[12,"mem_unit","","",98,N],[12,"_f","","",98,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",99,N],[12,"msg_stime","","",99,N],[12,"msg_rtime","","",99,N],[12,"msg_ctime","","",99,N],[12,"msg_qnum","","",99,N],[12,"msg_qbytes","","",99,N],[12,"msg_lspid","","",99,N],[12,"msg_lrpid","","",99,N],[3,"stat","","",N,N],[12,"st_dev","","",100,N],[12,"st_ino","","",100,N],[12,"st_nlink","","",100,N],[12,"st_mode","","",100,N],[12,"st_uid","","",100,N],[12,"st_gid","","",100,N],[12,"st_rdev","","",100,N],[12,"st_size","","",100,N],[12,"st_blksize","","",100,N],[12,"st_blocks","","",100,N],[12,"st_atime","","",100,N],[12,"st_atime_nsec","","",100,N],[12,"st_mtime","","",100,N],[12,"st_mtime_nsec","","",100,N],[12,"st_ctime","","",100,N],[12,"st_ctime_nsec","","",100,N],[3,"stat64","","",N,N],[12,"st_dev","","",101,N],[12,"st_ino","","",101,N],[12,"st_nlink","","",101,N],[12,"st_mode","","",101,N],[12,"st_uid","","",101,N],[12,"st_gid","","",101,N],[12,"st_rdev","","",101,N],[12,"st_size","","",101,N],[12,"st_blksize","","",101,N],[12,"st_blocks","","",101,N],[12,"st_atime","","",101,N],[12,"st_atime_nsec","","",101,N],[12,"st_mtime","","",101,N],[12,"st_mtime_nsec","","",101,N],[12,"st_ctime","","",101,N],[12,"st_ctime_nsec","","",101,N],[3,"statfs64","","",N,N],[12,"f_type","","",102,N],[12,"f_bsize","","",102,N],[12,"f_blocks","","",102,N],[12,"f_bfree","","",102,N],[12,"f_bavail","","",102,N],[12,"f_files","","",102,N],[12,"f_ffree","","",102,N],[12,"f_fsid","","",102,N],[12,"f_namelen","","",102,N],[12,"f_frsize","","",102,N],[12,"f_flags","","",102,N],[12,"f_spare","","",102,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",103,N],[12,"f_frsize","","",103,N],[12,"f_blocks","","",103,N],[12,"f_bfree","","",103,N],[12,"f_bavail","","",103,N],[12,"f_files","","",103,N],[12,"f_ffree","","",103,N],[12,"f_favail","","",103,N],[12,"f_fsid","","",103,N],[12,"f_flag","","",103,N],[12,"f_namemax","","",103,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",104,N],[12,"exponent","","",104,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",105,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",106,N],[12,"swd","","",106,N],[12,"ftw","","",106,N],[12,"fop","","",106,N],[12,"rip","","",106,N],[12,"rdp","","",106,N],[12,"mxcsr","","",106,N],[12,"mxcr_mask","","",106,N],[12,"_st","","",106,N],[12,"_xmm","","",106,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",107,N],[12,"swd","","",107,N],[12,"ftw","","",107,N],[12,"fop","","",107,N],[12,"rip","","",107,N],[12,"rdp","","",107,N],[12,"mxcsr","","",107,N],[12,"mxcr_mask","","",107,N],[12,"st_space","","",107,N],[12,"xmm_space","","",107,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",108,N],[12,"r14","","",108,N],[12,"r13","","",108,N],[12,"r12","","",108,N],[12,"rbp","","",108,N],[12,"rbx","","",108,N],[12,"r11","","",108,N],[12,"r10","","",108,N],[12,"r9","","",108,N],[12,"r8","","",108,N],[12,"rax","","",108,N],[12,"rcx","","",108,N],[12,"rdx","","",108,N],[12,"rsi","","",108,N],[12,"rdi","","",108,N],[12,"orig_rax","","",108,N],[12,"rip","","",108,N],[12,"cs","","",108,N],[12,"eflags","","",108,N],[12,"rsp","","",108,N],[12,"ss","","",108,N],[12,"fs_base","","",108,N],[12,"gs_base","","",108,N],[12,"ds","","",108,N],[12,"es","","",108,N],[12,"fs","","",108,N],[12,"gs","","",108,N],[3,"user","","",N,N],[12,"regs","","",109,N],[12,"u_fpvalid","","",109,N],[12,"i387","","",109,N],[12,"u_tsize","","",109,N],[12,"u_dsize","","",109,N],[12,"u_ssize","","",109,N],[12,"start_code","","",109,N],[12,"start_stack","","",109,N],[12,"signal","","",109,N],[12,"u_ar0","","",109,N],[12,"u_fpstate","","",109,N],[12,"magic","","",109,N],[12,"u_comm","","",109,N],[12,"u_debugreg","","",109,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",110,N],[12,"fpregs","","",110,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",111,N],[12,"uc_link","","",111,N],[12,"uc_stack","","",111,N],[12,"uc_mcontext","","",111,N],[12,"uc_sigmask","","",111,N],[3,"ipc_perm","","",N,N],[12,"__key","","",112,N],[12,"uid","","",112,N],[12,"gid","","",112,N],[12,"cuid","","",112,N],[12,"cgid","","",112,N],[12,"mode","","",112,N],[12,"__seq","","",112,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",113,N],[12,"shm_segsz","","",113,N],[12,"shm_atime","","",113,N],[12,"shm_dtime","","",113,N],[12,"shm_ctime","","",113,N],[12,"shm_cpid","","",113,N],[12,"shm_lpid","","",113,N],[12,"shm_nattch","","",113,N],[3,"termios2","","",N,N],[12,"c_iflag","","",114,N],[12,"c_oflag","","",114,N],[12,"c_cflag","","",114,N],[12,"c_lflag","","",114,N],[12,"c_line","","",114,N],[12,"c_cc","","",114,N],[12,"c_ispeed","","",114,N],[12,"c_ospeed","","",114,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",115,N],[12,"f_frsize","","",115,N],[12,"f_blocks","","",115,N],[12,"f_bfree","","",115,N],[12,"f_bavail","","",115,N],[12,"f_files","","",115,N],[12,"f_ffree","","",115,N],[12,"f_favail","","",115,N],[12,"f_fsid","","",115,N],[12,"f_flag","","",115,N],[12,"f_namemax","","",115,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",116,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",117,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",118,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",119,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",120,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",121,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",122,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",123,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",124,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",125,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["ucred"]]],[11,"clone","","",73,[[["self"]],["mntent"]]],[11,"clone","","",126,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",127,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",74,[[["self"]],["genlmsghdr"]]],[11,"clone","","",75,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",76,[[["self"]],["arpd_request"]]],[11,"clone","","",77,[[["self"]],["aiocb"]]],[11,"clone","","",78,[[["self"]],["__exit_status"]]],[11,"clone","","",79,[[["self"]],["__timeval"]]],[11,"clone","","",80,[[["self"]],["utmpx"]]],[11,"clone","","",81,[[["self"]],["sigaction"]]],[11,"clone","","",82,[[["self"]],["stack_t"]]],[11,"clone","","",83,[[["self"]],["siginfo_t"]]],[11,"clone","","",84,[[["self"]],["glob64_t"]]],[11,"clone","","",85,[[["self"]],["statfs"]]],[11,"clone","","",86,[[["self"]],["msghdr"]]],[11,"clone","","",87,[[["self"]],["cmsghdr"]]],[11,"clone","","",88,[[["self"]],["termios"]]],[11,"clone","","",89,[[["self"]],["flock"]]],[11,"clone","","",128,[[["self"]],["sem_t"]]],[11,"clone","","",90,[[["self"]],["mallinfo"]]],[11,"clone","","",91,[[["self"]],["nlmsghdr"]]],[11,"clone","","",92,[[["self"]],["nlmsgerr"]]],[11,"clone","","",93,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",94,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",95,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",96,[[["self"]],["nlattr"]]],[11,"clone","","",97,[[["self"]],["rtentry"]]],[11,"clone","","",129,[[["self"]],["sigset_t"]]],[11,"clone","","",98,[[["self"]],["sysinfo"]]],[11,"clone","","",99,[[["self"]],["msqid_ds"]]],[11,"clone","","",100,[[["self"]],["stat"]]],[11,"clone","","",101,[[["self"]],["stat64"]]],[11,"clone","","",102,[[["self"]],["statfs64"]]],[11,"clone","","",103,[[["self"]],["statvfs64"]]],[11,"clone","","",130,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",104,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",105,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",106,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",107,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",108,[[["self"]],["user_regs_struct"]]],[11,"clone","","",109,[[["self"]],["user"]]],[11,"clone","","",110,[[["self"]],["mcontext_t"]]],[11,"clone","","",111,[[["self"]],["ucontext_t"]]],[11,"clone","","",112,[[["self"]],["ipc_perm"]]],[11,"clone","","",113,[[["self"]],["shmid_ds"]]],[11,"clone","","",114,[[["self"]],["termios2"]]],[11,"clone","","",115,[[["self"]],["statvfs"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sem_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","items":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is used for GIF files).",N,N],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early change” algorithm (used in TIFF files).",N,N],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",N,N],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",N,N],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",N,N],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",N,N],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",N,N],[4,"Bits","","Containes either the consumed bytes and reconstructed bits or only the consumed bytes if the supplied buffer was not bit enough",N,N],[13,"Some","","Consumed bytes, reconstructed bits",0,N],[13,"None","","Consumed bytes",0,N],[5,"encode","","Convenience function that reads and compresses all bytes from `R`.",N,[[["r"],["w"],["u8"]],["result"]]],[11,"new","","Creates a new LZW decoder. ",1,[[["r"],["u8"]],["decoder"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",1,N],[11,"new","","Creates a new LZW decoder. ",2,[[["r"],["u8"]],["decoderearlychange"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",2,N],[11,"new","","Creates a new LZW encoder.",3,[[["w"],["u8"]],["result",["encoder"]]]],[11,"encode_bytes","","Compresses `bytes` and writes the result into the writer.",3,N],[11,"new","","Creates a new bit reader",4,[[],["lsbreader"]]],[11,"new","","Creates a new bit reader",5,[[],["msbreader"]]],[11,"new","","Creates a new bit reader",6,[[["w"]],["lsbwriter"]]],[11,"new","","Creates a new bit reader",7,[[["w"]],["msbwriter"]]],[8,"BitReader","","A bit reader.",N,N],[10,"read_bits","","Returns the next `n` bits.",8,N],[8,"BitWriter","","A bit writer.",N,N],[10,"write_bits","","Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"read_bits","","",4,N],[11,"read_bits","","",5,N],[11,"write_bits","","",6,[[["self"],["u16"],["u8"]],["result"]]],[11,"write_bits","","",7,[[["self"],["u16"],["u8"]],["result"]]],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]]],"paths":[[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"BitReader"],[8,"BitWriter"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and their spans.","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the start of the struct. This macro supports arbitrary amount of subscripts and recursive member-accesses.",N,N],[14,"span_of","","Produces a range instance representing the sub-slice containing the specified member.",N,N]],"paths":[]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]]],"paths":[[3,"NoDrop"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,[[["self"]],["bool"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",12,N],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"pow","","",N,N],[8,"Pow","num::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"integer","","",N,N],[8,"Integer","num::integer","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",18,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",18,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",18,[[["self"]],["self"]]],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",N,[[["t"],["u32"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",N,[[["t"]],["t"]]],[0,"iter","num","",N,N],[3,"Range","num::iter","An iterator over the range [start, stop)",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[0,"traits","num","",N,N],[0,"bounds","num::traits","",N,N],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[0,"cast","num::traits","",N,N],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[0,"float","num::traits","",N,N],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with `no_std`.",N,N],[10,"infinity","","Returns positive infinity.",19,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",19,[[],["self"]]],[10,"nan","","Returns NaN.",19,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",19,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",19,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",19,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",19,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",19,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",19,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",19,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",19,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",19,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",19,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",19,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",19,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",19,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",19,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",19,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",19,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",19,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",19,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",19,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",19,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",19,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",19,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",19,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",19,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",19,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",19,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",12,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",20,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",20,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",20,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",20,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",20,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",20,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",20,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",20,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",20,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",20,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",20,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",20,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",20,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",20,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",20,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",20,[[],["self"]]],[0,"identities","num::traits","",N,N],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"int","num::traits","",N,N],[8,"PrimInt","num::traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[0,"ops","num::traits","",N,N],[0,"checked","num::traits::ops","",N,N],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",21,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",22,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",23,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",24,[[["self"],["u32"]],["option"]]],[0,"inv","num::traits::ops","",N,N],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",N,N],[16,"Output","","The result after applying the operator.",25,N],[10,"inv","","Returns the multiplicative inverse of `self`.",25,N],[0,"mul_add","num::traits::ops","",N,N],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",26,N],[10,"mul_add","","Performs the fused multiply-add operation.",26,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",27,N],[0,"saturating","num::traits::ops","",N,N],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[0,"wrapping","num::traits::ops","",N,N],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",28,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",29,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",30,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",31,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",32,[[["self"],["u32"]],["self"]]],[0,"pow","num::traits","",N,N],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[0,"real","num::traits","",N,N],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",33,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",33,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",33,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",33,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",33,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",33,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",33,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",33,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",33,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",33,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",33,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",33,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",33,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",33,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",33,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",33,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",33,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",33,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",33,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",33,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",33,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",33,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",33,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",33,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",33,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",33,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",33,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",33,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",33,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",33,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",33,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",33,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",33,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",33,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",33,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",33,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",33,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",33,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",33,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",33,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",33,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",33,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",33,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",33,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",33,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",33,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",33,[[["self"]],["self"]]],[0,"sign","num::traits","",N,N],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",34,N],[13,"Invalid","","",34,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",35,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[11,"from","num::integer","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","num::iter","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","num::traits","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"next","num::integer","",36,[[["self"]],["option"]]],[11,"next_back","num::iter","",38,[[["self"]],["option"]]],[11,"next_back","","",37,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,N],[11,"next","","",39,[[["self"]],["option"]]],[11,"clone","","",37,[[["self"]],["range"]]],[11,"clone","","",39,[[["self"]],["rangestep"]]],[11,"clone","","",38,[[["self"]],["rangeinclusive"]]],[11,"clone","","",40,[[["self"]],["rangestepinclusive"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",36,[[["t"]],["iterbinomial"]]]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_derive"]={"doc":"Procedural macros to derive numeric traits in Rust.","items":[[24,"FromPrimitive","num_derive","Derives [`num_traits::FromPrimitive`][from] for simple enums and newtypes.",N,N],[24,"ToPrimitive","","Derives [`num_traits::ToPrimitive`][to] for simple enums and newtypes.",N,N],[24,"NumOps","","Derives [`num_traits::NumOps`][num_ops] for newtypes.  The inner type must already implement `NumOps`.",N,N],[24,"NumCast","","Derives [`num_traits::NumCast`][num_cast] for newtypes.  The inner type must already implement `NumCast`.",N,N],[24,"Zero","","Derives [`num_traits::Zero`][zero] for newtypes.  The inner type must already implement `Zero`.",N,N],[24,"One","","Derives [`num_traits::One`][one] for newtypes.  The inner type must already implement `One`.",N,N],[24,"Num","","Derives [`num_traits::Num`][num] for newtypes.  The inner type must already implement `Num`.",N,N],[24,"Float","","Derives [`num_traits::Float`][float] for newtypes.  The inner type must already implement `Float`.",N,N]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",2,[[["t"]],["iterbinomial"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"]={"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",N,N],[3,"ParseRatioError","","",N,N],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","",N,N],[6,"Rational64","","",N,N],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or reducing.",0,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division rounded towards zero.",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"approximate_float","","",0,[[["f"]],["option",["ratio"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,N],[11,"into","","",0,N],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"neg","","",0,[[["self"]],["ratio"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"one","","",0,[[],["ratio"]]],[11,"checked_mul","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_div","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_add","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_sub","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[8,"Bounded","num_traits","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",0,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[],["self"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",1,[[],["self"]]],[10,"infinity","","Returns the infinite value.",1,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",1,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",1,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",1,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",1,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",1,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",1,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",1,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",1,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",1,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",1,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",1,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",1,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",1,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",2,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",2,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",2,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",2,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",2,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",2,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,[[],["self"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,[[["self"],["u32"]],["option"]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,[[["self"],["self"]],["self"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",15,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",15,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f64"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,[[["self"]],["option",["f64"]]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,[[["t"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,[[["self"],["u32"]],["self"]]],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",21,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",21,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",22,N],[13,"Invalid","","",22,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",23,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"identities","","",N,N],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"sign","num_traits","",N,N],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",15,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",15,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[0,"ops","num_traits","",N,N],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,[[["self"],["u32"]],["option"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,[[["self"],["self"]],["self"]]],[0,"bounds","num_traits","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",0,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[],["self"]]],[0,"float","num_traits","",N,N],[8,"Float","num_traits::float","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",1,[[],["self"]]],[10,"infinity","","Returns the infinite value.",1,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",1,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",1,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",1,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",1,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",1,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",1,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",1,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",1,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",1,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",1,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",1,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",1,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",1,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",2,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",2,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",2,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",2,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",2,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",2,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,[[],["self"]]],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",24,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",24,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",24,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",24,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",24,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",24,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",24,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",24,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",24,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",24,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",24,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",24,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",24,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",24,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",24,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",24,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",24,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",24,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",24,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",24,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",24,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",24,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",24,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",24,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",24,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",24,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",24,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",24,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",24,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",24,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",24,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",24,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",24,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",24,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",24,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",24,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",24,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",24,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",24,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",24,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",24,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",24,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",24,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",24,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",24,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",24,[[["self"]],["self"]]],[0,"cast","num_traits","",N,N],[8,"AsPrimitive","num_traits::cast","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f64"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,[[["self"]],["option",["f64"]]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,[[["t"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[11,"from","num_traits","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]]],"paths":[[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"Saturating"],[8,"Signed"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Real"]]};
searchIndex["opengl_graphics"]={"doc":"An OpenGL back-end for Rust-Graphics","items":[[4,"OpenGL","opengl_graphics","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[3,"Shaders","","Shader picker.",N,N],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the same as the OpenGL version.",N,N],[13,"V1_10","","",1,N],[13,"V1_20","","",1,N],[13,"V1_30","","",1,N],[13,"V1_40","","",1,N],[13,"V1_50","","",1,N],[13,"V3_30","","",1,N],[13,"V4_00","","",1,N],[13,"V4_10","","",1,N],[13,"V4_20","","",1,N],[13,"V4_30","","",1,N],[13,"V4_40","","",1,N],[13,"V4_50","","",1,N],[0,"ops","","Image operations for textures.",N,N],[5,"flip_vertical","opengl_graphics::ops","Flips the image vertically.",N,N],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",N,N],[8,"ImageSize","opengl_graphics","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",2,N],[11,"get_width","","Gets the image width.",2,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",2,[[["self"]],["u32"]]],[3,"TextureSettings","","Texture creation parameters.",N,N],[4,"Format","","Texture format.",N,N],[13,"Rgba8","","`(red, green, blue, alpha)` with values 0-255.",3,N],[8,"CreateTexture","","Implemented by textures for creation.",N,N],[16,"Error","","The error when creating texture.",4,N],[10,"create","","Create texture from memory.",4,N],[8,"UpdateTexture","","Implemented by textures for updating.",N,N],[16,"Error","","The error when updating texture.",5,N],[10,"update","","Update the texture.",5,N],[4,"Filter","","Sampling filter",N,N],[13,"Linear","","A Weighted Linear Blend",6,N],[13,"Nearest","","Nearest Texel",6,N],[3,"Colored","","Describes how to render colored objects.",N,N],[3,"Textured","","Describes how to render textured objects.",N,N],[3,"GlGraphics","","Contains OpenGL data.",N,N],[3,"Texture","","Wraps OpenGL texture data. The texture gets deleted when running out of scope.",N,N],[0,"shader_utils","","Helper functions for dealing with shaders.",N,N],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute.",N,N],[5,"compile_shader","","Compiles a shader.",N,[[["glenum"],["str"]],["result",["gluint","string"]]]],[5,"attribute_location","","Finds attribute location from a program.",N,[[["gluint"],["str"]],["result",["gluint","string"]]]],[5,"uniform_location","","Finds uniform location from a program.",N,[[["gluint"],["str"]],["result",["gluint","string"]]]],[11,"xyz","","Create XYZ vertex attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"xy","","Create XY vertex attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"rgb","","Create RGB color attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"rgba","","Create RGBA color attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"uv","","Create texture coordinate attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"set","","Sets attribute data.",7,N],[0,"error","opengl_graphics","Errors",N,N],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors that may occur.",N,N],[13,"IoError","","An error happened with I/O.",8,N],[0,"shader_uniforms","opengl_graphics","Types and methods for setting shader uniforms",N,N],[3,"ShaderUniform","opengl_graphics::shader_uniforms","Describes a shader uniform of a given type.",N,N],[3,"SUFloat","","Shader uniform float",N,N],[3,"SUInt","","Shader uniform integer",N,N],[3,"SUVec2","","Shader uniform vector of size 2 Vector elements are floats",N,N],[3,"SUVec3","","Shader uniform vector of size 3 Vector elements are floats",N,N],[3,"SUVec4","","Shader uniform vector of size 4 Vector elements are floats",N,N],[3,"SUMat2x2","","Shader uniform 2x2 matrix Matrix elements are floats",N,N],[3,"SUMat3x3","","Shader uniform 3x3 matrix Matrix elements are floats",N,N],[3,"SUMat4x4","","Shader uniform 4x4 matrix Matrix elements are floats",N,N],[8,"UniformType","","Shader uniform type",N,N],[11,"get_uniform","opengl_graphics","Try to get uniform from the current shader of a given name.",9,[[["self"],["str"]],["option",["shaderuniform"]]]],[11,"set","opengl_graphics::shader_uniforms","Set the value of the float uniform.",10,[[["self"],["glgraphics"],["f32"]]]],[11,"set","","Set the value of the integer uniform.",10,[[["self"],["glgraphics"],["i32"]]]],[11,"set","","Set the value of the vector 2 uniform.",10,N],[11,"set","","Set the value of the vector 3 uniform.",10,N],[11,"set","","Set the value of the vector 4 uniform.",10,N],[11,"set","","Set the value of the 2x2 matrix uniform.",10,N],[11,"set","","Set the value of the 3x3 matrix uniform.",10,N],[11,"set","","Set the value of the 4x4 matrix uniform.",10,N],[11,"new","opengl_graphics","Generate using pass-through shaders.",11,[[["glsl"]],["self"]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",11,[[["glsl"],["shaders"],["shaders"]],["result",["string"]]]],[11,"new","","Generate using pass-through shaders.",12,[[["glsl"]],["self"]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",12,[[["glsl"],["shaders"],["shaders"]],["result",["string"]]]],[11,"new","","Creates a new OpenGL back-end.",9,[[["opengl"]],["self"]]],[11,"from_colored_textured","","Create a new OpenGL back-end with `Colored` and `Textured` structs to describe how to render objects.",9,[[["colored"],["textured"]],["self"]]],[11,"viewport","","Sets viewport with normalized coordinates and center as origin.",9,[[["self"],["i32"],["i32"],["i32"],["i32"]]]],[11,"get_current_program","","Returns the current program",9,[[["self"]],["option",["gluint"]]]],[11,"use_program","","Sets the current program only if the program is not in use.",9,[[["self"],["gluint"]]]],[11,"clear_program","","Unset the current program.",9,[[["self"]]]],[11,"use_draw_state","","Sets the current draw state, by detecting changes.",9,[[["self"],["drawstate"]]]],[11,"clear_draw_state","","Unsets the current draw state.",9,[[["self"]]]],[11,"draw_begin","","Setup that should be called at the start of a frame's draw call.",9,[[["self"],["viewport"]],["context"]]],[11,"draw_end","","Finalize the frame's draw calls.",9,[[["self"]]]],[11,"draw","","Convenience for wrapping draw calls with the begin and end methods.",9,[[["self"],["viewport"],["f"]],["u"]]],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",9,[[["self"],["texture"]],["bool"]]],[11,"new","","Creates a new texture.",13,[[["gluint"],["u32"],["u32"]],["self"]]],[11,"get_id","","Gets the OpenGL id of the texture.",13,[[["self"]],["gluint"]]],[11,"empty","","Returns empty texture.",13,[[["texturesettings"]],["result",["string"]]]],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",13,N],[11,"from_path","","Loads image by relative file name to the asset root.",13,[[["p"],["texturesettings"]],["result",["string"]]]],[11,"from_image","","Creates a texture from image.",13,[[["rgbaimage"],["texturesettings"]],["self"]]],[11,"update","","Updates image with a new one.",13,[[["self"],["rgbaimage"]]]],[6,"GlyphCache","","Glyph cache implementation for OpenGL backend.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","opengl_graphics::shader_utils","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","opengl_graphics::error","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","opengl_graphics::shader_uniforms","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"clone","opengl_graphics","",1,[[["self"]],["glsl"]]],[11,"clone","","",0,[[["self"]],["opengl"]]],[11,"partial_cmp","","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["glsl"]],["option",["ordering"]]]],[11,"cmp","","",1,[[["self"],["glsl"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["opengl"]],["ordering"]]],[11,"pick_shader","","",1,[[["self"],["shaders"]],["option"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",0,[[["str"]],["result",["opengl"]]]],[11,"from_str","","",1,[[["str"]],["result",["glsl"]]]],[11,"eq","","",0,[[["self"],["opengl"]],["bool"]]],[11,"eq","","",1,[[["self"],["glsl"]],["bool"]]],[11,"clone","","",15,[[["self"]],["texturesettings"]]],[11,"clone","","",6,[[["self"]],["filter"]]],[11,"clone","","",3,[[["self"]],["format"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","opengl_graphics::shader_uniforms","",10,[[["self"]],["shaderuniform"]]],[11,"clone","","",16,[[["self"]],["sufloat"]]],[11,"clone","","",17,[[["self"]],["suint"]]],[11,"clone","","",18,[[["self"]],["suvec2"]]],[11,"clone","","",19,[[["self"]],["suvec3"]]],[11,"clone","","",20,[[["self"]],["suvec4"]]],[11,"clone","","",21,[[["self"]],["sumat2x2"]]],[11,"clone","","",22,[[["self"]],["sumat3x3"]]],[11,"clone","","",23,[[["self"]],["sumat4x4"]]],[11,"from","opengl_graphics::error","",8,[[["error"]],["error"]]],[11,"drop","opengl_graphics::shader_utils","",7,[[["self"]]]],[11,"drop","opengl_graphics","",11,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","","",13,[[["self"]]]],[11,"fmt","opengl_graphics::error","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clear_color","opengl_graphics","",9,N],[11,"clear_stencil","","",9,[[["self"],["u8"]]]],[11,"tri_list","","",9,N],[11,"tri_list_uv","","",9,N],[11,"get_size","","",13,N],[11,"create","","",13,N],[11,"update","","",13,N],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]],[11,"new","","Creates a new shader picker.",14,[[],["shaders"]]],[11,"set","","Sets source for a shader version.",14,[[["self"],["v"],["s"]],["shaders"]]],[11,"get","","Get the closest shader to a shader version.",14,[[["self"],["v"]],["option"]]],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,[[["self"]],["opengl"]]],[11,"new","","Create default settings.",15,[[],["texturesettings"]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",15,[[["self"]],["bool"]]],[11,"set_convert_gamma","","Sets convert gamma.",15,N],[11,"convert_gamma","","Sets convert gamma.",15,[[["self"],["bool"]],["texturesettings"]]],[11,"get_compress","","Gets wheter compress on the GPU.",15,[[["self"]],["bool"]]],[11,"set_compress","","Sets compress.",15,N],[11,"compress","","Sets compress.",15,[[["self"],["bool"]],["texturesettings"]]],[11,"get_generate_mipmap","","Gets generate mipmap.",15,[[["self"]],["bool"]]],[11,"set_generate_mipmap","","Sets generate mipmap.",15,N],[11,"generate_mipmap","","Sets generate mipmap.",15,[[["self"],["bool"]],["texturesettings"]]],[11,"get_min","","Gets minify filter.",15,[[["self"]],["filter"]]],[11,"set_min","","Sets minify filter.",15,N],[11,"min","","Sets minify filter.",15,[[["self"],["filter"]],["texturesettings"]]],[11,"get_mag","","Gets magnify filter",15,[[["self"]],["filter"]]],[11,"set_mag","","Sets magnify filter",15,N],[11,"mag","","Sets magnify filter",15,[[["self"],["filter"]],["texturesettings"]]],[11,"get_mipmap","","Gets minify mipmap filter",15,[[["self"]],["filter"]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true.",15,N],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true",15,[[["self"],["filter"]],["texturesettings"]]],[11,"get_filter","","Returns the min and mag filter",15,N],[11,"set_filter","","Sets the min and mag filter",15,N],[11,"filter","","Sets the min and mag filter",15,[[["self"],["filter"]],["texturesettings"]]]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"ImageSize"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[3,"DynamicAttribute"],[4,"Error"],[3,"GlGraphics"],[3,"ShaderUniform"],[3,"Colored"],[3,"Textured"],[3,"Texture"],[3,"Shaders"],[3,"TextureSettings"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","items":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord and Hash.",N,N],[12,"0","","",0,N],[3,"NotNaN","","A wrapper around Floats providing an implementation of Ord and Hash.",N,N],[3,"FloatIsNaN","","An error indicating an attempt to construct NotNaN from a NaN",N,N],[11,"into_inner","","Get the value out.",0,[[["self"]],["t"]]],[11,"new","","Create a NotNaN value.",1,[[["t"]],["result",["floatisnan"]]]],[11,"unchecked_new","","Create a NotNaN value from a value that is guaranteed to not be NaN",1,[[["t"]],["self"]]],[11,"into_inner","","Get the value out.",1,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["orderedfloat"]]],[11,"clone","","",1,[[["self"]],["notnan"]]],[11,"clone","","",2,[[["self"]],["floatisnan"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"into","","",0,[[["self"]],["f32"]]],[11,"into","","",0,[[["self"]],["f64"]]],[11,"into","","",1,[[["self"]],["f32"]]],[11,"into","","",1,[[["self"]],["f64"]]],[11,"into","","",2,[[["self"]],["error"]]],[11,"as_ref","","",0,[[["self"]],["t"]]],[11,"as_ref","","",1,[[["self"]],["t"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["notnan"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["notnan"]],["bool"]]],[11,"le","","",1,[[["self"],["notnan"]],["bool"]]],[11,"gt","","",1,[[["self"],["notnan"]],["bool"]]],[11,"ge","","",1,[[["self"],["notnan"]],["bool"]]],[11,"default","","",0,[[],["orderedfloat"]]],[11,"default","","",1,[[],["notnan"]]],[11,"as_mut","","",0,[[["self"]],["t"]]],[11,"eq","","",0,[[["self"],["orderedfloat"]],["bool"]]],[11,"eq","","",1,[[["self"],["notnan"]],["bool"]]],[11,"ne","","",1,[[["self"],["notnan"]],["bool"]]],[11,"eq","","",2,[[["self"],["floatisnan"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["notnan"]],["ordering"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"add","","",1,[[["self"],["self"]],["self"]]],[11,"add","","",1,[[["self"],["t"]],["self"]]],[11,"sub","","",1,[[["self"],["self"]],["self"]]],[11,"sub","","",1,[[["self"],["t"]],["self"]]],[11,"mul","","",1,[[["self"],["self"]],["self"]]],[11,"mul","","",1,[[["self"],["t"]],["self"]]],[11,"div","","",1,[[["self"],["self"]],["self"]]],[11,"div","","",1,[[["self"],["t"]],["self"]]],[11,"rem","","",1,[[["self"],["self"]],["self"]]],[11,"rem","","",1,[[["self"],["t"]],["self"]]],[11,"neg","","",1,[[["self"]],["self"]]],[11,"add_assign","","",1,[[["self"],["self"]]]],[11,"add_assign","","",1,[[["self"],["self"]]]],[11,"add_assign","","",1,[[["self"],["f64"]]]],[11,"add_assign","","",1,[[["self"],["f32"]]]],[11,"sub_assign","","",1,[[["self"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["f64"]]]],[11,"sub_assign","","",1,[[["self"],["f32"]]]],[11,"mul_assign","","",1,[[["self"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["f64"]]]],[11,"mul_assign","","",1,[[["self"],["f32"]]]],[11,"div_assign","","",1,[[["self"],["self"]]]],[11,"div_assign","","",1,[[["self"],["self"]]]],[11,"div_assign","","",1,[[["self"],["f64"]]]],[11,"div_assign","","",1,[[["self"],["f32"]]]],[11,"rem_assign","","",1,[[["self"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["f64"]]]],[11,"rem_assign","","",1,[[["self"],["f32"]]]],[11,"deref","","",0,N],[11,"deref","","",1,N],[11,"deref_mut","","",0,N],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"OrderedFloat"],[3,"NotNaN"],[3,"FloatIsNaN"]]};
searchIndex["piston"]={"doc":"A user friendly game engine written in Rust.","items":[],"paths":[]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder and decoder. It supports reading of single lines or whole frames. ## The decoder The most important types for decoding purposes are `Decoder` and `Reader`. They both wrap a `std::io::Read`. `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the image data is reached. ### Using the decoder     use std::fs::File;","items":[[3,"PixelDimensions","png","Pixel dimensions information",N,N],[12,"xppu","","Pixels per unit, X axis",0,N],[12,"yppu","","Pixels per unit, Y axis",0,N],[12,"unit","","Either Meter or Unspecified",0,N],[3,"FrameControl","","Frame control information",N,N],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,N],[12,"width","","Width of the following frame",1,N],[12,"height","","Height of the following frame",1,N],[12,"x_offset","","X position at which to render the following frame",1,N],[12,"y_offset","","Y position at which to render the following frame",1,N],[12,"delay_num","","Frame delay fraction numerator",1,N],[12,"delay_den","","Frame delay fraction denominator",1,N],[12,"dispose_op","","Type of frame area disposal to be done after rendering this frame",1,N],[12,"blend_op","","Type of frame area rendering for this frame",1,N],[3,"AnimationControl","","Animation control information",N,N],[12,"num_frames","","Number of frames",2,N],[12,"num_plays","","Number of times to loop this APNG.  0 indicates infinite looping.",2,N],[3,"Info","","PNG info struct",N,N],[12,"width","","",3,N],[12,"height","","",3,N],[12,"bit_depth","","",3,N],[12,"color_type","","",3,N],[12,"interlaced","","",3,N],[12,"trns","","",3,N],[12,"pixel_dims","","",3,N],[12,"palette","","",3,N],[12,"frame_control","","",3,N],[12,"animation_control","","",3,N],[3,"Transformations","","Output transformations",N,N],[3,"Decoder","","PNG Decoder",N,N],[3,"Reader","","PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo","","Output info",N,N],[12,"width","","",4,N],[12,"height","","",4,N],[12,"color_type","","",4,N],[12,"bit_depth","","",4,N],[12,"line_size","","",4,N],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",N,N],[3,"Encoder","","PNG Encoder",N,N],[3,"Writer","","PNG writer",N,N],[4,"ColorType","","",N,N],[13,"Grayscale","","",5,N],[13,"RGB","","",5,N],[13,"Indexed","","",5,N],[13,"GrayscaleAlpha","","",5,N],[13,"RGBA","","",5,N],[4,"BitDepth","","Bit depth of the png file",N,N],[13,"One","","",6,N],[13,"Two","","",6,N],[13,"Four","","",6,N],[13,"Eight","","",6,N],[13,"Sixteen","","",6,N],[4,"Unit","","Physical unit of the pixel dimensions",N,N],[13,"Unspecified","","",7,N],[13,"Meter","","",7,N],[4,"Decoded","","Result of the decoding process",N,N],[13,"Nothing","","Nothing decoded yet",8,N],[13,"Header","","",8,N],[13,"ChunkBegin","","",8,N],[13,"ChunkComplete","","",8,N],[13,"PixelDimensions","","",8,N],[13,"AnimationControl","","",8,N],[13,"FrameControl","","",8,N],[13,"ImageData","","Decoded raw image data.",8,N],[13,"PartialChunk","","",8,N],[13,"ImageEnd","","",8,N],[4,"DecodingError","","",N,N],[13,"IoError","","",9,N],[13,"Format","","",9,N],[13,"InvalidSignature","","",9,N],[13,"CrcMismatch","","",9,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",9,N],[12,"crc_val","","Stored CRC32 value",9,N],[12,"crc_sum","","Calculated CRC32 sum",9,N],[12,"chunk","","",9,N],[13,"Other","png","",9,N],[13,"CorruptFlateStream","","",9,N],[4,"EncodingError","","",N,N],[13,"IoError","","",10,N],[13,"Format","","",10,N],[0,"chunk","","Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[["chunktype"]],["bool"]]],[5,"is_private","","Returns true if the chunk is private.",N,[[["chunktype"]],["bool"]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set. If it is set the chunk name is invalid.",N,[[["chunktype"]],["bool"]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",N,[[["chunktype"]],["bool"]]],[6,"ChunkType","","",N,N],[17,"IHDR","","Image header",N,N],[17,"PLTE","","Palette",N,N],[17,"IDAT","","Image data",N,N],[17,"IEND","","Image trailer",N,N],[17,"tRNS","","Transparency",N,N],[17,"bKGD","","Background colour",N,N],[17,"tIME","","Image last-modification time",N,N],[17,"pHYs","","Physical pixel dimensions",N,N],[17,"acTL","","Animation control",N,N],[17,"fcTL","","Frame control",N,N],[17,"fdAT","","Frame data",N,N],[11,"new","png","Creates a new StreamingDecoder",11,[[],["streamingdecoder"]]],[11,"reset","","Resets the StreamingDecoder",11,[[["self"]]]],[11,"update","","Low level StreamingDecoder interface.",11,N],[11,"buffer_size","","Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new","","",12,[[["r"]],["decoder"]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",12,[[["self"]],["result",["decodingerror"]]]],[11,"info","","",13,[[["self"]],["info"]]],[11,"next_frame","","Decodes the next frame into `buf`",13,N],[11,"next_row","","Returns the next processed row of the image",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample of the data returned by `Reader::next_row` and Reader::frames`.",13,N],[11,"output_buffer_size","","Returns the number of bytes required to hold a deinterlaced image frame that is decoded using the given input transformations.",13,[[["self"]],["usize"]]],[11,"output_line_size","","Returns the number of bytes required to hold a deinterlaced row.",13,[[["self"],["u32"]],["usize"]]],[11,"new","","",14,[[["w"],["u32"],["u32"]],["encoder"]]],[11,"write_header","","",14,[[["self"]],["result",["writer","encodingerror"]]]],[11,"write_chunk","","",15,N],[11,"write_image_data","","Writes the image data.",15,N],[11,"samples","","Returns the number of samples used per pixel of `ColorType`",5,[[["self"]],["usize"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",5,[[["u8"]],["option",["colortype"]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",6,[[["u8"]],["option",["bitdepth"]]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",7,[[["u8"]],["option",["unit"]]]],[11,"size","","Size of the image",3,N],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,"animation_control","","Returns the frame control information of the image",3,[[["self"]],["option",["animationcontrol"]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[["self"]],["option",["framecontrol"]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced image",3,[[["self"]],["usize"]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced row of width `width`",3,[[["self"],["u32"]],["usize"]]],[18,"IDENTITY","","No transformation",16,N],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",16,N],[18,"STRIP_ALPHA","","Discard the alpha channel",16,N],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",16,N],[18,"PACKSWAP","","Change order of packed pixels to LSB first",16,N],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of less than 8-bit depth to 8-bit depth; and expand tRNS chunks to alpha channels.",16,N],[18,"INVERT_MONO","","Invert monochrome images",16,N],[18,"SHIFT","","Normalize pixels to the sBIT depth",16,N],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",16,N],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",16,N],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",16,N],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",16,N],[18,"STRIP_FILLER","","",16,N],[18,"STRIP_FILLER_BEFORE","","",16,N],[18,"STRIP_FILLER_AFTER","","",16,N],[18,"GRAY_TO_RGB","","",16,N],[18,"EXPAND_16","","",16,N],[18,"SCALE_16","","",16,N],[11,"empty","","Returns an empty set of flags.",16,[[],["transformations"]]],[11,"all","","Returns the set containing all flags.",16,[[],["transformations"]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",16,[[["u32"]],["option",["transformations"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",16,[[["u32"]],["transformations"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,[[["self"],["transformations"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,[[["self"],["transformations"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["self"],["transformations"]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["self"],["transformations"]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["self"],["transformations"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",16,[[["self"],["transformations"],["bool"]]]],[8,"Parameter","","Configuration parameter trait",N,N],[10,"set_param","","",17,[[["self"],["object"]]]],[8,"HasParameters","","Object has parameters",N,N],[11,"set","","",18,[[["self"],["t"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"set_param","","",16,[[["self"],["decoder"]]]],[11,"set_param","","",5,[[["self"],["encoder"]]]],[11,"set_param","","",6,[[["self"],["encoder"]]]],[11,"clone","","",5,[[["self"]],["colortype"]]],[11,"clone","","",6,[[["self"]],["bitdepth"]]],[11,"clone","","",0,[[["self"]],["pixeldimensions"]]],[11,"clone","","",7,[[["self"]],["unit"]]],[11,"clone","","",2,[[["self"]],["animationcontrol"]]],[11,"clone","","",16,[[["self"]],["transformations"]]],[11,"extend","","",16,[[["self"],["t"]]]],[11,"from","","",9,[[["error"]],["decodingerror"]]],[11,"from","","",9,[[["string"]],["decodingerror"]]],[11,"from","","",10,[[["error"]],["encodingerror"]]],[11,"drop","","",15,[[["self"]]]],[11,"partial_cmp","","",16,[[["self"],["transformations"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["transformations"]],["bool"]]],[11,"le","","",16,[[["self"],["transformations"]],["bool"]]],[11,"gt","","",16,[[["self"],["transformations"]],["bool"]]],[11,"ge","","",16,[[["self"],["transformations"]],["bool"]]],[11,"default","","",3,[[],["info"]]],[11,"eq","","",5,[[["self"],["colortype"]],["bool"]]],[11,"eq","","",6,[[["self"],["bitdepth"]],["bool"]]],[11,"eq","","",7,[[["self"],["unit"]],["bool"]]],[11,"eq","","",16,[[["self"],["transformations"]],["bool"]]],[11,"ne","","",16,[[["self"],["transformations"]],["bool"]]],[11,"cmp","","",16,[[["self"],["transformations"]],["ordering"]]],[11,"hash","","",16,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["self"],["transformations"]],["transformations"]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["self"],["transformations"]]]],[11,"not","","Returns the complement of this set of flags.",16,[[["self"]],["transformations"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["self"],["transformations"]],["transformations"]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["self"],["transformations"]],["transformations"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,[[["self"],["transformations"]],["transformations"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["self"],["transformations"]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["self"],["transformations"]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["self"],["transformations"]]]],[11,"from_iter","","",16,[[["t"]],["transformations"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"set","","",18,[[["self"],["t"]],["self"]]]],"paths":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"Decoded"],[4,"DecodingError"],[4,"EncodingError"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[3,"Transformations"],[8,"Parameter"],[8,"HasParameters"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a sequence of token trees.",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion information.",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`, `-` or `#`.",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another `Punct` or followed by another token or whitespace.",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type, such as iterators.",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span` method of the contained token or a delimited stream.",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token stream.",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in this `Group`.",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream, spanning the entire `Group`.",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not its internal tokens.",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character, indicating whether it's immediately followed by another `Punct` in the token stream, so they can potentially be combined into a multicharacter operator (`Joint`), or it's followed by some other token or whitespace (`Alone`) so the operator has certainly ended.",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified value.",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"not_found","","",9,[[["str"],["str"]],["e"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"not_found","","",6,[[["str"],["str"]],["e"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"not_found","","",7,[[["str"],["str"]],["e"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"not_found","","",8,[[["str"],["str"]],["e"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"not_found","","",10,[[["str"],["str"]],["e"]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],["option",["tokentree"]]]],[11,"partial_cmp","proc_macro2","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","proc_macro2","",3,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending tokens.",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[3,"Generator","","Iterator which will generate a stream of random items.",N,N],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",N,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g. `let mut rng = thread_rng();`.",N,[[],["threadrng"]]],[5,"weak_rng","","DEPRECATED: use [`SmallRng`] instead.",N,[[],["xorshiftrng"]]],[5,"random","","Generates a random value using the thread-local random number generator.",N,[[],["t"]]],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9.",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly in the half-open interval `(0, 1]`, i.e. including 1 but not 0.",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly in the open interval `(0, 1)`, i.e. not including either endpoint.",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal distribution `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to `Normal::new(0.0, 1.0)` but faster.",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the exponential distribution, with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or sampling with `-rng.gen::<f64>().ln()`, but faster.",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto distribution",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"DistIter","","An iterator that generates random values of `T` with distribution `D`, using `R` as the source of randomness.",N,N],[3,"Standard","","A generic random value distribution, implemented for many primitive types. Usually generates values with a numerically uniform distribution, and with a range appropriate to the type.",N,N],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",N,N],[0,"uniform","","A distribution uniformly sampling numbers within a given range.",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer types.",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for floating-point types.",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct implementation of [`UniformSampler`] for the sampling type.",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",6,N],[10,"new","","Construct self, with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,N],[10,"sample","","Sample a value.",6,N],[11,"sample_single","","Sample a single value uniformly from a range with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[11,"new","","Create a new `Uniform` instance which samples uniformly from the half open range `[low, high)` (excluding `high`). Panics if `low >= high`.",7,[[["x"],["x"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly from the closed range `[low, high]` (inclusive). Panics if `low > high`.",7,[[["x"],["x"]],["uniform"]]],[11,"new","rand::distributions","Construct an object representing the `Gamma(shape, scale)` distribution.",8,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",10,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",11,[[["f64"]],["studentt"]]],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",12,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",13,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",14,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and `shape`.",15,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters `n` (number of trials) and `p` (probability of success).",17,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Bernoulli` with the given probability of success `p`.",18,[[["f64"]],["bernoulli"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters `median` the peak location and `scale` the scale factor. Panics if `scale <= 0`.",19,[[["f64"],["f64"]],["cauchy"]]],[0,"range","","DEPRECATED: Use `distributions::uniform` instead.",N,N],[8,"Sample","","Types that can be used to create a random instance of `Support`.",N,N],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",20,[[["self"],["r"]],["support"]]],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",N,N],[10,"ind_sample","","Generate a random value.",21,[[["self"],["r"]],["support"]]],[8,"Distribution","","Types (distributions) that can be used to create a random instance of `T`.",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source of randomness.",22,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`, using `rng` as the source of randomness.",22,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",23,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",N,N],[0,"chacha","","The ChaCha random number generator.",N,N],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that uses the ChaCha algorithm.",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",24,[[],["chacharng"]]],[11,"set_stream","","Set the stream number.",24,[[["self"],["u64"]]]],[0,"hc128","rand::prng","The HC-128 random number generator.",N,N],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that uses the HC-128 algorithm.",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[0,"isaac","rand::prng","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",25,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",25,[[["u64"]],["self"]]],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit variant of the ISAAC algorithm.",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",26,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",26,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",27,[[["u64"]],["self"]]],[11,"new_unseeded","rand::prng","Creates a new XorShiftRng instance which is not seeded.",28,[[],["xorshiftrng"]]],[0,"rngs","rand","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",N,N],[3,"EntropyRng","","An interface returning random data from external source(s), provided specifically for securely seeding algorithmic generators (PRNGs).",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization and good performance are required. The PRNG algorithm in `SmallRng` is chosen to be efficient on the current platform, without consideration for cryptography or security. The size of its state is much smaller than for [`StdRng`].",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient on the current platform, to be statistically strong and unpredictable (meaning a cryptographically secure PRNG).",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a reference to the PRNG in thread-local memory.",N,N],[3,"OsRng","","A random number generator that retrieves randomness straight from the operating system.",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`] fails.",N,N],[13,"NoTimer","","No timer available.",29,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",29,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",29,N],[13,"TinyVariantions","","Variations of deltas of time too small.",29,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",29,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type supporting `std::io::Read`, for example files.",N,N],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying PRNG after it has generated a certain number of random bytes.",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` with the given parameters.",31,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a timer, or a platform-specific function with higher accuracy if necessary and available.",33,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",33,N],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",33,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",33,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterRng` entropy collector.",33,[[["self"],["bool"]],["i64"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence starting with `initial` and incremented by `increment` each time.",34,[[["u64"],["u64"]],["self"]]],[11,"new","rand::rngs","Create a new `OsRng`.",35,[[],["result",["osrng","error"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",N,[[["r"],["usize"],["usize"]],["vec",["usize"]]]],[8,"Rand","rand","A type that can be randomly generated using an [`Rng`].",N,N],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",36,[[["r"]],["self"]]],[8,"Rng","","An automatically-implemented extension trait on [`RngCore`] providing high-level generic methods for sampling values and other convenience methods.",N,N],[11,"gen","","Return a random value supporting the [`Standard`] distribution.",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e. inclusive of `low` and exclusive of `high`.",37,[[["self"],["t"],["t"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given distribution.",37,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",37,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"choose","","Return a random element from `values`.",37,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",37,N],[11,"shuffle","","Shuffle a mutable slice in place.",37,N],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",37,[[["self"]],["generator"]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",37,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",37,[[["self"]],["asciigenerator"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).",38,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing construction from fresh entropy. This trait is automatically implemented for any PRNG implementing [`SeedableRng`] and is not intended to be implemented by users.",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh entropy.",39,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng","",28,[[],["r"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::chacha","",24,[[],["r"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from_entropy","","",52,[[],["r"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::hc128","",53,[[],["r"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::isaac","",25,[[],["r"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::isaac64","",26,[[],["r"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from_entropy","","",27,[[],["r"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from_entropy","","",56,[[],["r"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from_entropy","","",57,[[],["r"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"clone","rand","",2,[[["self"]],["errorkind"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","","",0,N],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"new","rand::distributions::uniform","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,N],[11,"new_inclusive","","",50,N],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,N],[11,"new_inclusive","","",50,N],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["duration"],["duration"]],["uniformduration"]]],[11,"new_inclusive","","",51,[[["duration"],["duration"]],["uniformduration"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",23,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",23,[[["self"],["r"]],["t"]]],[11,"ind_sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"ind_sample","rand::distributions","",14,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",8,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",9,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",10,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",11,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",12,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["u64"]]],[11,"sample","","",18,[[["self"],["r"]],["bool"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",23,[[["self"],["r"]],["t"]]],[11,"clone","rand::distributions::uniform","",7,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",12,[[["self"]],["normal"]]],[11,"clone","","",13,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",14,[[["self"]],["exp"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["binomial"]]],[11,"clone","","",18,[[["self"]],["bernoulli"]]],[11,"clone","","",19,[[["self"]],["cauchy"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::prng::chacha","",24,[[["self"]],["chacharng"]]],[11,"clone","","",52,[[["self"]],["chachacore"]]],[11,"clone","rand::prng::hc128","",53,[[["self"]],["hc128rng"]]],[11,"clone","","",54,[[["self"]],["hc128core"]]],[11,"clone","rand::prng::isaac","",25,[[["self"]],["isaacrng"]]],[11,"clone","","",55,[[["self"]],["isaaccore"]]],[11,"clone","rand::prng::isaac64","",26,[[["self"]],["isaac64rng"]]],[11,"clone","","",27,[[["self"]],["isaac64core"]]],[11,"clone","rand::prng","",28,[[["self"]],["xorshiftrng"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs","",33,[[["self"]],["jitterrng"]]],[11,"clone","","",29,[[["self"]],["timererror"]]],[11,"clone","rand::rngs::mock","",34,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",56,[[["self"]],["smallrng"]]],[11,"clone","","",57,[[["self"]],["stdrng"]]],[11,"clone","","",58,[[["self"]],["threadrng"]]],[11,"clone","","",35,[[["self"]],["osrng"]]],[11,"from","rand::distributions::uniform","",7,[[["range"]],["uniform"]]],[11,"from","rand::prng::chacha","",24,[[["chachacore"]],["self"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"next","rand::distributions","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand","",40,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option",["char"]]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"eq","","",29,[[["self"],["timererror"]],["bool"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::uniform","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::chacha","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::hc128","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::isaac","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::isaac64","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"description","rand::rngs","",29,[[["self"]],["str"]]],[11,"from_seed","rand::prng::chacha","",24,N],[11,"from_rng","","",24,[[["r"]],["result",["error"]]]],[11,"from_seed","","",52,N],[11,"from_seed","rand::prng::hc128","",53,N],[11,"from_rng","","",53,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The seed has to be 256 bits in length, matching the 128 bit `key` followed by 128 bit `iv` when HC-128 where to be used as a stream cipher.",54,N],[11,"from_seed","rand::prng::isaac","",25,N],[11,"from_rng","","",25,[[["s"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::prng::isaac64","",26,N],[11,"from_rng","","",26,[[["s"]],["result",["error"]]]],[11,"from_seed","","",27,N],[11,"from_rng","","",27,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::prng","",28,N],[11,"from_rng","","",28,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::rngs","",56,N],[11,"from_rng","","",56,[[["r"]],["result",["error"]]]],[11,"from_seed","","",57,N],[11,"from_rng","","",57,[[["r"]],["result",["error"]]]],[11,"generate","rand::prng::chacha","",52,N],[11,"generate","rand::prng::hc128","",54,N],[11,"generate","rand::prng::isaac","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`IsaacRng`] documentation.",55,[[["self"],["isaacarray"]]]],[11,"generate","rand::prng::isaac64","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`Isaac64Rng`] documentation.",27,[[["self"],["isaacarray"]]]],[11,"next_u32","rand::prng::chacha","",24,[[["self"]],["u32"]]],[11,"next_u64","","",24,[[["self"]],["u64"]]],[11,"fill_bytes","","",24,N],[11,"try_fill_bytes","","",24,N],[11,"next_u32","rand::prng::hc128","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"next_u32","rand::prng::isaac","",25,[[["self"]],["u32"]]],[11,"next_u64","","",25,[[["self"]],["u64"]]],[11,"fill_bytes","","",25,N],[11,"try_fill_bytes","","",25,N],[11,"next_u32","rand::prng::isaac64","",26,[[["self"]],["u32"]]],[11,"next_u64","","",26,[[["self"]],["u64"]]],[11,"fill_bytes","","",26,N],[11,"try_fill_bytes","","",26,N],[11,"next_u32","rand::prng","",28,[[["self"]],["u32"]]],[11,"next_u64","","",28,[[["self"]],["u64"]]],[11,"fill_bytes","","",28,N],[11,"try_fill_bytes","","",28,N],[11,"next_u32","rand::rngs::adapter","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,N],[11,"try_fill_bytes","","",30,N],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,N],[11,"try_fill_bytes","","",31,N],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs::mock","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"next_u32","","",57,[[["self"]],["u32"]]],[11,"next_u64","","",57,[[["self"]],["u64"]]],[11,"fill_bytes","","",57,N],[11,"try_fill_bytes","","",57,N],[11,"next_u32","","",58,[[["self"]],["u32"]]],[11,"next_u64","","",58,[[["self"]],["u64"]]],[11,"fill_bytes","","",58,N],[11,"try_fill_bytes","","",58,N],[11,"next_u32","","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[8,"SampleUniform"],[8,"UniformSampler"],[3,"Uniform"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"WeightedChoice"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"XorShiftRng"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"OsRng"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Generator"],[3,"AsciiGenerator"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacCore"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","rand_core::block","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"clone","","",3,[[["self"]],["blockrng"]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"description","rand_core","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","","",5,N],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"should_retry","","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert sequential computations into parallel","items":[[5,"current_num_threads","rayon","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",N,[[],["usize"]]],[3,"ThreadPool","","Represents a user created [thread-pool].",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the global rayon thread pool. ## Creating a ThreadPool The following creates a thread pool with 22 threads.",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[5,"join","","Takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",N,N],[5,"join_context","","Identical to `join`, except that the closures have a parameter that provides context for the way the closure has been called, especially indicating whether they're executing on a different thread than where `join_context` was called.  This will occur if the second job is stolen by a different thread, or if `join_context` was called from outside the thread pool to begin with.",N,N],[3,"FnContext","","Provides the calling context to a closure called by `join_context`.",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",N,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",N,N],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",N,N],[0,"collections","","Parallel iterator types for [standard collections][std::collections]",N,N],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps (`BinaryHeap<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a binary heap",N,N],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for B-Tree maps (`BTreeMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for B-Tree sets (`BTreeSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree set",N,N],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash maps (`HashMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash sets (`HashSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for linked lists (`LinkedList<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a linked list",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for double-ended queues (`VecDeque<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a double-ended queue",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a double-ended queue",N,N],[0,"iter","rayon","Traits for writing parallel programs using an iterator-style interface",N,N],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a sequential iterator.",N,N],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one continuous iterator. This struct is created by the [`chain()`] method on [`ParallelIterator`]",N,N],[3,"Chunks","","`Chunks` is an iterator that groups elements of an underlying iterator.",N,N],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count along with the element. This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]",N,N],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out elements that match. This struct is created by the [`filter()`] method on [`ParallelIterator`]",N,N],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to both filter and map elements. This struct is created by the [`filter_map()`] method on [`ParallelIterator`].",N,N],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens these iterators together. This struct is created by the [`flat_map()`] method on [`ParallelIterator`]",N,N],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens these iterators together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].",N,N],[3,"Fold","","`Fold` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold()`] method on [`ParallelIterator`]",N,N],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold_with()`] method on [`ParallelIterator`]",N,N],[3,"TryFold","","`TryFold` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`try_fold()`] method on [`ParallelIterator`]",N,N],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]",N,N],[3,"Skip","","`Skip` is an iterator that skips over the first `n` elements. This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]",N,N],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a splitting function. This struct is created by the [`split()`] function.",N,N],[3,"Take","","`Take` is an iterator that iterates over the first `n` elements. This struct is created by the [`take()`] method on [`IndexedParallelIterator`]",N,N],[3,"Map","","`Map` is an iterator that transforms the elements of an underlying iterator.",N,N],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of an underlying iterator.",N,N],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of an underlying iterator.",N,N],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a single iterator of pairs. This struct is created by the [`zip()`] method on [`IndexedParallelIterator`]",N,N],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal length simultaneously.",N,N],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of iterators `i` and `j` in one continuous iterator. This struct is created by the [`interleave()`] method on [`IndexedParallelIterator`]",N,N],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly to `Interleave`, but this version stops returning elements once one of the iterators run out.",N,N],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular item between each item of the adapted iterator.  This struct is created by the [`intersperse()`] method on [`ParallelIterator`]",N,N],[3,"Update","","`Update` is an iterator that mutates the elements of an underlying iterator before they are yielded.",N,N],[3,"Rev","","`Rev` is an iterator that produces elements in reverse order. This struct is created by the [`rev()`] method on [`IndexedParallelIterator`]",N,N],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on iterator splits. This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]",N,N],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on iterator splits. This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]",N,N],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an underlying iterator.",N,N],[3,"Inspect","","`Inspect` is an iterator that calls a function with a reference to each element before yielding it.",N,N],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements of an iterator, halting as soon as any `None` is produced.",N,N],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty","","Iterator adaptor for the `empty()` function.",N,N],[3,"Once","","Iterator adaptor for the `once()` function.",N,N],[5,"split","","The `split` function takes arbitrary data and a closure that knows how to split it, and turns this into a `ParallelIterator`.",N,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt` (by cloning it). Note that this iterator has \"infinite\" length, so typically you would want to use `zip` or `take` or some other means to shorten it, or consider using the `repeatn()` function instead.",N,[[["t"]],["repeat"]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of `elt` (by cloning it).",N,[[["t"],["usize"]],["repeatn"]]],[5,"empty","","Creates a parallel iterator that produces nothing.",N,[[],["empty"]]],[5,"once","","Creates a parallel iterator that produces an element exactly once.",N,[[["t"]],["once"]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.  These are low-level details -- users of parallel iterators should not need to interact with them directly.  See [the `plumbing` README][r] for a high-level overview.",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel iterator to a consumer. It will convert the `par_iter` into a producer P and then pull items from P and feed them to `consumer`, splitting and creating parallel threads as needed.",N,N],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a consumer. You may prefer to call [`bridge`], which wraps this function. This function will draw items from `producer` and feed them to `consumer`, splitting and creating parallel tasks when needed.",N,N],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.",N,N],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure, [analogous to `FnOnce`][FnOnce]. See [the corresponding section in the plumbing README][r] for more details.",N,N],[16,"Output","","The type of value returned by this callback. Analogous to [`Output` from the `FnOnce` trait][Output].",1,N],[10,"callback","","Invokes the callback with the given producer as argument. The key point of this trait is that this method is generic over `P`, and hence implementors must be defined for any producer.",1,N],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\". That is, a producer is a value which can be converted into an iterator at any time: at that point, it simply produces items on demand, like any iterator. But what makes a `Producer` special is that, before we convert to an iterator, we can also split it at a particular point using the `split_at` method. This will yield up two producers, one producing the items before that point, and one producing the items after that point (these two producers can then independently be split further, or be converted into iterators). In Rayon, this splitting is used to divide between threads. See [the `plumbing` README][r] for further details.",N,N],[16,"Item","","The type of item that will be produced by this producer once it is converted into an iterator.",2,N],[16,"IntoIter","","The type of iterator we will become.",2,N],[10,"into_iter","","Convert `self` into an iterator; at this point, no more parallel splits are possible.",2,N],[11,"min_len","","The minimum number of items that we will process sequentially. Defaults to 1, which means that we will split all the way down to a single item. This can be raised higher using the [`with_min_len`] method, which will force us to create sequential tasks at a larger granularity. Note that Rayon automatically normally attempts to adjust the size of parallel splits to reduce overhead, so this should not be needed.",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process sequentially. Defaults to MAX, which means that we can choose not to split at all. This can be lowered using the [`with_max_len`] method, which will force us to create more parallel tasks. Note that Rayon automatically normally attempts to adjust the size of parallel splits to reduce overhead, so this should not be needed.",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`, the other `index..N`. Index must be less than or equal to `N`.",2,N],[11,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",2,[[["self"],["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\" operation][fold], and in fact each consumer will eventually be converted into a [`Folder`]. What makes a consumer special is that, like a [`Producer`], it can be split into multiple consumers using the `split_at` method. When a consumer is split, it produces two consumers, as well as a reducer. The two consumers can be fed items independently, and when they are done the reducer is used to combine their two results into one. See [the `plumbing` README][r] for further details.",N,N],[16,"Folder","","The type of folder that this consumer can be converted into.",3,N],[16,"Reducer","","The type of reducer that is produced if this consumer is split.",3,N],[16,"Result","","The type of result that this consumer will ultimately produce.",3,N],[10,"split_at","","Divide the consumer into two consumers, one processing items `0..index` and one processing items from `index..`. Also produces a reducer that can be used to reduce the results at the end.",3,N],[10,"into_folder","","Convert the consumer into a folder that can consume items sequentially, eventually producing a final result.",3,N],[10,"full","","Hint whether this `Consumer` would like to stop processing further items, e.g. if a search has been completed.",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold operation][fold].  It can be fed many items using the `consume` method. At the end, once all items have been consumed, it can then be converted (using `complete`) into a final value.",N,N],[16,"Result","","The type of result that will ultimately be produced by the folder.",4,N],[10,"consume","","Consume next item and return new sequential state.",4,[[["self"],["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new sequential state.",4,[[["self"],["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,N],[10,"full","","Hint whether this `Folder` would like to stop processing further items, e.g. if a search has been completed.",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a consumer has been split into two parts, and each of those parts has been fully processed, we are left with two results. The reducer is then used to combine those two results into one. See [the `plumbing` README][r] for further details.",N,N],[10,"reduce","","Reduce two final results into one; this is executed after a split.",5,[[["self"],["result"],["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers can be used like regular consumers, but they also support a `split_off_left` method that does not take an index to split, but simply splits at some arbitrary point (`for_each`, for example, produces an unindexed consumer).",N,N],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self` consumer should then be used to consume the \"right\" portion of the data. (The ordering matters for methods like find_first -- values produced by the returned value are given precedence over values produced by `self`.) Once the left and right halves have been fully consumed, you should reduce the results with the result of `to_reducer`.",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results from a split consumer.",6,N],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact length or cannot represent it in a `usize`. These producers act like ordinary producers except that they cannot be told to split at a particular point. Instead, you just ask them to split 'somewhere'.",N,N],[16,"Item","","The type of item returned by this producer.",7,N],[10,"split","","Split midway into a new producer if possible, otherwise return `None`.",7,N],[10,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",7,[[["self"],["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the general `take()`.",8,[[["self"],["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from another iterator, similar to the general `zip()`.",8,[[["self"],["z"]],["zip",["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a `ParallelIterator`.",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a [`ParallelIterator`].",N,N],[16,"Iter","","The parallel iterator type that will be created.",10,N],[16,"Item","","The type of item that the parallel iterator will produce.",10,N],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,N],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a [`ParallelIterator`], providing shared references to the data.",N,N],[16,"Iter","","The type of the parallel iterator that will be returned.",11,N],[16,"Item","","The type of item that the parallel iterator will produce. This will typically be an `&'data T` reference type.",11,N],[10,"par_iter","","Converts `self` into a parallel iterator.",11,N],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to a [`ParallelIterator`], providing mutable references to the data.",N,N],[16,"Iter","","The type of iterator that will be created.",12,N],[16,"Item","","The type of item that will be produced; this is typically an `&'data mut T` reference.",12,N],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,N],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",N,N],[16,"Item","","The type of item that this parallel iterator produces. For example, if you use the [`for_each`] method, this is the type of item that your closure will be invoked with.",13,N],[11,"for_each","","Executes `OP` on each item produced by the iterator, in parallel.",13,[[["self"],["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item produced by the iterator, in parallel.",13,[[["self"],["t"],["op"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item produced by the iterator, in parallel.",13,[[["self"],["init"],["op"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the iterator, in parallel.",13,[[["self"],["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with each item produced by the iterator, in parallel.",13,[[["self"],["t"],["op"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init` with each item produced by the iterator, in parallel.",13,[[["self"],["init"],["op"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[["self"]],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing a new iterator with the results.",13,[[["self"],["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item of this iterator, producing a new iterator with the results.",13,[[["self"],["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each item of this iterator, producing a new iterator with the results.",13,[[["self"],["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements.  This may be useful when you have an iterator over `&T`, but you need `T`.",13,[[["self"]],["cloned"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this iterator, producing a new iterator passing through the original items.  This is often useful for debugging to see what's happening in iterator stages.",13,[[["self"],["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["self"],["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator, producing a new iterator with only the items that gave `true` results.",13,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get an `Option`, producing a new iterator with only the items from `Some` results.",13,[[["self"],["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get nested iterators, producing a new iterator that flattens these back into one.",13,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large iterator",13,[[["self"]],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using `op`. The argument `identity` should be a closure that can produce \"identity\" value which may be inserted into the sequence as needed to create opportunities for parallel execution. So, for example, if you are doing a summation, then `identity()` ought to produce something that represents the zero for your type (but consider just calling `sum()` in that case).",13,N],[11,"reduce_with","","Reduces the items in the iterator into one item using `op`. If the iterator is empty, `None` is returned; otherwise, `Some` is returned.",13,[[["self"],["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a fallible `op`. The `identity` argument is used the same way as in [`reduce()`].",13,N],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a fallible `op`.",13,[[["self"],["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that the sequence of items may be subdivided before it is folded. Consider a list of numbers like `22 3 77 89 46`. If you used sequential fold to add them (`fold(0, |a,b| a+b)`, you would wind up first adding 0 + 22, then 22 + 3, then 25 + 77, and so forth. The parallel fold works similarly except that it first breaks up your list into sublists, and hence instead of yielding up a single sum at the end, it yields up multiple sums. The number of results is nondeterministic, as is the point where the breaks occur.",13,[[["self"],["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item of this iterator, finally producing the value for further use.",13,[[["self"],["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["self"],["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init` value.",13,[[["self"],["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[["self"]],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[["self"]],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",13,[[["self"]],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",13,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",13,[[["self"],["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(max)` is returned.",13,[[["self"]],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",13,[[["self"],["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",13,[[["self"],["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["self"],["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that matches the given predicate and returns it. This operation is similar to [`find` on sequential iterators][find] but the item returned may not be the first one in the parallel sequence which matches, since we search the entire sequence in parallel.",13,[[["self"],["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate and returns it.",13,[[["self"],["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate and returns it.",13,[[["self"],["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that matches the given predicate, and if so returns true.  Once a match is found, we'll attempt to stop process the rest of the items.  Proving that there's no match, returning false, does require visiting every item.",13,[[["self"],["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the given predicate, and if so returns true.  If a counter-example is found, we'll attempt to stop processing more items, then return false.",13,[[["self"],["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this iterator, halting as soon as any `None` is found.",13,[[["self"]],["whilesome"]]],[11,"collect","","Create a fresh collection containing all the element produced by this parallel iterator.",13,[[["self"]],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.",13,N],[11,"partition","","Partitions the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  Items for which the `predicate` returns true go into the first container, and the rest go into the second.",13,N],[11,"partition_map","","Partitions and maps the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  `Either::Left` items go into the first container, and `Either::Right` items go into the second.",13,N],[11,"intersperse","","Intersperses clones of an element between items of this iterator.",13,N],[10,"drive_unindexed","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",13,N],[11,"opt_len","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",13,[[["self"]],["option",["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data, meaning that you can split it at arbitrary indices and draw data from those points.",N,N],[11,"collect_into_vec","","Collects the results of the iterator into the specified vector. The vector is always truncated before execution begins. If possible, reusing the vector across calls can lead to better performance since it reuses the same backing buffer.",14,[[["self"],["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified vectors. The vectors are always truncated before execution begins. If possible, reusing the vectors across calls can lead to better performance since they reuse the same backing buffer.",14,[[["self"],["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from this iterator and `B` are from the iterator given as argument. Like the `zip` method on ordinary iterators, if the two iterators are of unequal length, you only get the items they have in common.",14,[[["self"],["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have the same length.",14,[[["self"],["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given iterator. Alternately yields elements from this iterator and the given iterator, until both are exhausted. If one iterator is exhausted before the other, the last elements are provided from the other.",14,[[["self"],["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given iterator, until one is exhausted.",14,[[["self"],["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["self"],["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",14,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",14,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are equal to those of another",14,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are unequal to those of another",14,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are lexicographically less than those of another.",14,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",14,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are lexicographically greater than those of another.",14,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",14,[[["self"],["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[["self"]],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["self"],["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that matches the given predicate, and returns its index.  Like `ParallelIterator::find_any`, the parallel search will not necessarily find the first match, and once a match is found we'll attempt to stop processing any more.",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate, and returns its index.",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate, and returns its index.",14,[[["self"],["p"]],["option",["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator in reverse order.",14,[[["self"]],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in each thread.  Rayon will not split any smaller than this length, but of course an iterator could already be smaller to begin with.",14,[[["self"],["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in each thread.  Rayon will try to split at least below this length, unless that would put it below the length from `with_min_len()`. For example, given min=10 and max=15, a length of 16 will not be split any further.",14,[[["self"],["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator will produce, presuming no panic occurs.",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",14,N],[10,"with_producer","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",14,N],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a collection from a [`ParallelIterator`]. By implementing `FromParallelIterator` for a given type, you define how it will be created from an iterator.",N,N],[10,"from_par_iter","","Creates an instance of the collection from the parallel iterator `par_iter`.",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].",N,N],[10,"par_extend","","Extends an instance of the collection with the elements drawn from the parallel iterator `par_iter`.",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",N,N],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of an [`Option`].",N,N],[3,"Iter","","A parallel iterator over a reference to the [`Some`] variant of an [`Option`].",N,N],[3,"IterMut","","A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator` traits. The intention is that one can include `use rayon::prelude::*` and have easy access to the various traits and methods you will need.",N,N],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a `ParallelIterator`.",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type for values created by `a..b` expressions",N,N],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all integer types.",N,N],[0,"result","rayon","Parallel iterator types for [results][std::result]",N,N],[3,"IntoIter","rayon::result","Parallel iterator over a result",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",N,N],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of a slice",N,N],[3,"Windows","","Parallel iterator over immutable overlapping windows of a slice",N,N],[3,"IterMut","","Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a slice",N,N],[3,"Split","","Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut","","Parallel iterator over mutable slices separated by a predicate",N,N],[8,"ParallelSlice","","Parallel extensions for slices.",N,N],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest of the parallel methods.",17,N],[11,"par_split","","Returns a parallel iterator over subslices separated by elements that match the separator.",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of length `window_size`. The windows overlap.",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size` elements of `self` at a time. The chunks do not overlap.",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement the rest of the parallel methods.",18,N],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices separated by elements that match the separator.",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size` elements of `self` at a time. The chunks are mutable and do not overlap.",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the order of equal elements.",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function, but may not preserve the order of equal elements.",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction function, but may not preserve the order of equal elements.",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",N,N],[3,"CharIndices","","Parallel iterator over the characters of a string, with their positions",N,N],[3,"Bytes","","Parallel iterator over the bytes of a string",N,N],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split","","Parallel iterator over substrings separated by a pattern",N,N],[3,"SplitTerminator","","Parallel iterator over substrings separated by a terminator pattern",N,N],[3,"Lines","","Parallel iterator over lines in a string",N,N],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches","","Parallel iterator over substrings that match a pattern",N,N],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern, with their positions",N,N],[8,"ParallelString","","Parallel extensions for strings.",N,N],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement the rest of the parallel methods.",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a string, with their positions.",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a given character or predicate, similar to `str::split`.",19,[[["self"],["p"]],["split"]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by a given character or predicate, similar to `str::split_terminator`. It's equivalent to `par_split`, except it doesn't produce an empty substring after a trailing terminator.",19,[[["self"],["p"]],["splitterminator"]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string, ending with an optional carriage return and with a newline (`\\r\\n` or just `\\n`). The final line ending is optional, and line endings are not included in the output strings.",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a string that are separated by any amount of whitespace.",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a given character or predicate, similar to `str::matches`.",19,[[["self"],["p"]],["matches"]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a given character or predicate, with their positions, similar to `str::match_indices`.",19,[[["self"],["p"]],["matchindices"]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",N,N],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",25,[[["self"]],["t"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_par_iter","","",26,[[["self"]],["t"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",27,[[["self"]],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[["self"]],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","","",29,[[["self"]],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",30,[[["self"]],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[["self"]],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",32,[[["self"]],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[["self"]],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","","",34,[[["self"]],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",35,[[["self"]],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[["self"]],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",37,[[["self"]],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[["self"]],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","","",39,[[["self"]],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",40,[[["self"]],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[["self"]],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","","",42,[[["self"]],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[["self"]],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[["self"]],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[["self"]],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[["self"]],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[["self"]],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[["self"]],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[["self"]],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[["self"]],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[["self"]],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[["self"]],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[["self"]],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[["self"]],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[["self"]],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[["self"]],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[["self"]],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[["self"]],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[["self"]],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[["self"]],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[["self"]],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[["self"]],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[["self"]],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[["self"]],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[["self"]],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[["self"]],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[["self"]],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[["self"]],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[["self"]],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[["self"]],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[["self"]],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[["self"]],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[["self"]],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[["self"]],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[["self"]],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[["self"]],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",76,[[["self"]],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[["self"]],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[["self"]],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",79,[[["self"]],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",80,[[["self"]],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","","",81,[[["self"]],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[["self"]],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",83,[[["self"]],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","","",84,[[["self"]],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","","",85,[[["self"]],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","","",86,[[["self"]],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[["self"]],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[["self"]],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","","",89,[[["self"]],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",90,[[["self"]],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[["self"]],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[["self"]],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[["self"]],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[["self"]],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[["self"]],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","","",96,[[["self"]],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[["self"]],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[["self"]],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[["self"]],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",100,[[["self"]],["t"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"description","rayon","",22,[[["self"]],["str"]]],[11,"default","","",21,[[],["threadpoolbuilder"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"drop","","",20,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","rayon::iter","",0,[[["result"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"extend","","",0,N],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"deref_mut","","",0,N],[11,"deref","","",0,N],[11,"hash","","",0,N],[11,"drive_unindexed","rayon::collections::binary_heap","",25,N],[11,"opt_len","","",25,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",26,N],[11,"opt_len","","",26,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",27,N],[11,"opt_len","","",27,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",28,N],[11,"opt_len","","",28,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",29,N],[11,"opt_len","","",29,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",30,N],[11,"opt_len","","",30,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",31,N],[11,"opt_len","","",31,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",32,N],[11,"opt_len","","",32,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",33,N],[11,"opt_len","","",33,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",34,N],[11,"opt_len","","",34,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",35,N],[11,"opt_len","","",35,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",36,N],[11,"opt_len","","",36,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",37,N],[11,"opt_len","","",37,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",38,N],[11,"opt_len","","",38,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",39,N],[11,"opt_len","","",39,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",40,N],[11,"opt_len","","",40,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",41,N],[11,"opt_len","","",41,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",42,N],[11,"opt_len","","",42,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",43,N],[11,"drive_unindexed","","",44,N],[11,"opt_len","","",44,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",45,N],[11,"opt_len","","",45,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",46,N],[11,"opt_len","","",46,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",47,N],[11,"drive_unindexed","","",48,N],[11,"drive_unindexed","","",49,N],[11,"drive_unindexed","","",50,N],[11,"drive_unindexed","","",51,N],[11,"drive_unindexed","","",52,N],[11,"drive_unindexed","","",53,N],[11,"drive_unindexed","","",54,N],[11,"drive_unindexed","","",55,N],[11,"opt_len","","",55,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",56,N],[11,"drive_unindexed","","",57,N],[11,"opt_len","","",57,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",58,N],[11,"opt_len","","",58,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",59,N],[11,"opt_len","","",59,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",60,N],[11,"opt_len","","",60,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",61,N],[11,"opt_len","","",61,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",62,N],[11,"opt_len","","",62,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",63,N],[11,"opt_len","","",63,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",64,N],[11,"opt_len","","",64,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",65,N],[11,"opt_len","","",65,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",66,N],[11,"opt_len","","",66,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",67,N],[11,"opt_len","","",67,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",68,N],[11,"opt_len","","",68,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",69,N],[11,"opt_len","","",69,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",71,N],[11,"opt_len","","",71,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",72,N],[11,"drive_unindexed","","",8,N],[11,"drive_unindexed","","",73,N],[11,"opt_len","","",73,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",74,N],[11,"opt_len","","",74,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",75,N],[11,"opt_len","","",75,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::option","",76,N],[11,"opt_len","","",76,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",77,N],[11,"opt_len","","",77,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::range","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::result","",80,N],[11,"opt_len","","",80,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",81,N],[11,"opt_len","","",81,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",82,N],[11,"opt_len","","",82,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::slice","",83,N],[11,"opt_len","","",83,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",84,N],[11,"opt_len","","",84,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",85,N],[11,"opt_len","","",85,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",86,N],[11,"opt_len","","",86,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",87,N],[11,"opt_len","","",87,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",88,N],[11,"drive_unindexed","","",89,N],[11,"drive_unindexed","rayon::str","",90,N],[11,"drive_unindexed","","",91,N],[11,"drive_unindexed","","",92,N],[11,"drive_unindexed","","",93,N],[11,"drive_unindexed","","",94,N],[11,"drive_unindexed","","",95,N],[11,"drive_unindexed","","",96,N],[11,"drive_unindexed","","",97,N],[11,"drive_unindexed","","",98,N],[11,"drive_unindexed","","",99,N],[11,"drive_unindexed","rayon::vec","",100,N],[11,"opt_len","","",100,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,N],[11,"opt_len","","",0,[[["self"]],["option",["usize"]]]],[11,"drive","rayon::collections::binary_heap","",25,N],[11,"len","","",25,[[["self"]],["usize"]]],[11,"with_producer","","",25,N],[11,"drive","","",26,N],[11,"len","","",26,[[["self"]],["usize"]]],[11,"with_producer","","",26,N],[11,"drive","rayon::collections::vec_deque","",40,N],[11,"len","","",40,[[["self"]],["usize"]]],[11,"with_producer","","",40,N],[11,"drive","","",41,N],[11,"len","","",41,[[["self"]],["usize"]]],[11,"with_producer","","",41,N],[11,"drive","","",42,N],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,N],[11,"drive","rayon::iter","",44,N],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,N],[11,"drive","","",45,N],[11,"len","","",45,[[["self"]],["usize"]]],[11,"with_producer","","",45,N],[11,"drive","","",46,N],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,N],[11,"len","","",55,[[["self"]],["usize"]]],[11,"drive","","",55,N],[11,"with_producer","","",55,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,N],[11,"with_producer","","",57,N],[11,"drive","","",58,N],[11,"len","","",58,[[["self"]],["usize"]]],[11,"with_producer","","",58,N],[11,"drive","","",59,N],[11,"len","","",59,[[["self"]],["usize"]]],[11,"with_producer","","",59,N],[11,"drive","","",60,N],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,N],[11,"drive","","",61,N],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,N],[11,"drive","","",62,N],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,N],[11,"drive","","",63,N],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,N],[11,"drive","","",64,N],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,N],[11,"drive","","",65,N],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,N],[11,"drive","","",66,N],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,N],[11,"drive","","",67,N],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,N],[11,"drive","","",68,N],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,N],[11,"drive","","",69,N],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,N],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive","","",71,N],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,N],[11,"drive","","",73,N],[11,"with_producer","","",73,N],[11,"len","","",73,[[["self"]],["usize"]]],[11,"drive","","",74,N],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,N],[11,"drive","","",75,N],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,N],[11,"drive","rayon::option","",76,N],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,N],[11,"drive","","",77,N],[11,"len","","",77,[[["self"]],["usize"]]],[11,"with_producer","","",77,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","rayon::range","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","rayon::result","",80,N],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,N],[11,"drive","","",81,N],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,N],[11,"drive","","",82,N],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,N],[11,"drive","rayon::slice","",83,N],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,N],[11,"drive","","",84,N],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,N],[11,"drive","","",85,N],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,N],[11,"drive","","",86,N],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,N],[11,"drive","","",87,N],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,N],[11,"drive","rayon::vec","",100,N],[11,"len","","",100,[[["self"]],["usize"]]],[11,"with_producer","","",100,N],[11,"drive","rayon::iter","",0,N],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,N],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",25,[[["self"]],["intoiter"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",31,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",36,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",37,[[["self"]],["intoiter"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",40,[[["self"]],["intoiter"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","rayon::iter","",43,[[["self"]],["iterbridge"]]],[11,"clone","","",44,[[["self"]],["chain"]]],[11,"clone","","",45,[[["self"]],["chunks"]]],[11,"clone","","",46,[[["self"]],["enumerate"]]],[11,"clone","","",47,[[["self"]],["filter"]]],[11,"clone","","",48,[[["self"]],["filtermap"]]],[11,"clone","","",49,[[["self"]],["flatmap"]]],[11,"clone","","",50,[[["self"]],["flatten"]]],[11,"clone","","",51,[[["self"]],["fold"]]],[11,"clone","","",52,[[["self"]],["foldwith"]]],[11,"clone","","",53,[[["self"]],["tryfold"]]],[11,"clone","","",54,[[["self"]],["tryfoldwith"]]],[11,"clone","","",55,[[["self"]],["skip"]]],[11,"clone","","",56,[[["self"]],["split"]]],[11,"clone","","",57,[[["self"]],["take"]]],[11,"clone","","",58,[[["self"]],["map"]]],[11,"clone","","",59,[[["self"]],["mapwith"]]],[11,"clone","","",60,[[["self"]],["mapinit"]]],[11,"clone","","",61,[[["self"]],["zip"]]],[11,"clone","","",62,[[["self"]],["zipeq"]]],[11,"clone","","",63,[[["self"]],["interleave"]]],[11,"clone","","",64,[[["self"]],["interleaveshortest"]]],[11,"clone","","",65,[[["self"]],["intersperse"]]],[11,"clone","","",66,[[["self"]],["update"]]],[11,"clone","","",67,[[["self"]],["rev"]]],[11,"clone","","",68,[[["self"]],["minlen"]]],[11,"clone","","",69,[[["self"]],["maxlen"]]],[11,"clone","","",70,[[["self"]],["cloned"]]],[11,"clone","","",71,[[["self"]],["inspect"]]],[11,"clone","","",72,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",73,[[["self"]],["repeatn"]]],[11,"clone","","",74,[[["self"]],["self"]]],[11,"clone","","",75,[[["self"]],["once"]]],[11,"clone","rayon::option","",76,[[["self"]],["intoiter"]]],[11,"clone","","",77,[[["self"]],["self"]]],[11,"clone","rayon::range","",79,[[["self"]],["iter"]]],[11,"clone","rayon::result","",80,[[["self"]],["intoiter"]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"clone","rayon::slice","",83,[[["self"]],["self"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"clone","","",88,[[["self"]],["self"]]],[11,"clone","rayon::str","",90,[[["self"]],["chars"]]],[11,"clone","","",91,[[["self"]],["charindices"]]],[11,"clone","","",92,[[["self"]],["bytes"]]],[11,"clone","","",93,[[["self"]],["encodeutf16"]]],[11,"clone","","",94,[[["self"]],["split"]]],[11,"clone","","",95,[[["self"]],["splitterminator"]]],[11,"clone","","",96,[[["self"]],["lines"]]],[11,"clone","","",97,[[["self"]],["splitwhitespace"]]],[11,"clone","","",98,[[["self"]],["matches"]]],[11,"clone","","",99,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",100,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::iter","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::option","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::range","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::result","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::slice","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::str","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::vec","",100,[[["self"],["formatter"]],["result"]]],[11,"new","rayon","Deprecated in favor of `ThreadPoolBuilder::build`.",20,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",20,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",20,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",20,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",20,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",20,N],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",20,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",20,N],[11,"new","","Creates and returns a valid rayon thread pool builder, but does not initialize it.",21,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",21,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. Calling `build_global` is not recommended, except in two scenarios:",21,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",21,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",21,[[["self"]],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"migrated","","Returns `true` if the closure was called from a different thread than it was provided from.",23,[[["self"]],["bool"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to the scope `self` as argument. This can be used to inject new jobs into `self`.",24,N],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]]],"paths":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"FnContext"],[3,"Scope"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"]={"doc":"Under construction","items":[[3,"ThreadPool","rayon_core","Represents a user created [thread-pool].",N,N],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the global rayon thread pool. ## Creating a ThreadPool The following creates a thread pool with 22 threads.",N,N],[3,"Configuration","","Contains the rayon thread pool configuration. Use [`ThreadPoolBuilder`] instead.",N,N],[3,"FnContext","","Provides the calling context to a closure called by `join_context`.",N,N],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of that thread within its current pool; if not called from a Rayon thread, returns `None`.",N,[[],["option",["usize"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether that thread's local deque still has pending tasks. Otherwise, returns `None`. For more information, see [the `ThreadPool::current_thread_has_pending_tasks()` method][m].",N,[[],["option",["bool"]]]],[5,"join","","Takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",N,N],[5,"join_context","","Identical to `join`, except that the closures have a parameter that provides context for the way the closure has been called, especially indicating whether they're executing on a different thread than where `join_context` was called.  This will occur if the second job is stolen by a different thread, or if `join_context` was called from outside the thread pool to begin with.",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",N,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",N,[[["f"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",N,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[["configuration"]],["result",["box"]]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to the scope `self` as argument. This can be used to inject new jobs into `self`.",0,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",1,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",1,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",1,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",1,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",1,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",1,N],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",1,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",1,[[["self"],["op"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but does not initialize it.",2,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",2,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. Calling `build_global` is not recommended, except in two scenarios:",2,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",2,[[["self"],["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",2,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",2,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",2,[[["self"]],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"new","","Creates and return a valid rayon thread pool configuration, but does not initialize it.",3,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["self"]],["result",["threadpool","box"]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",3,[[["self"],["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",3,[[["self"],["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",3,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",3,[[["self"]],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different thread than it was provided from.",4,[[["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"default","","",2,[[],["threadpoolbuilder"]]],[11,"default","","",3,[[],["configuration"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]]],"paths":[[3,"Scope"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["read_color"]={"doc":"A simple library for reading hex colors.","items":[[5,"char_to_hex","read_color","Converts a character into a u8 value.",N,[[["char"]],["option",["u8"]]]],[5,"hex","","Reads a hex value from an iterator of characters.",N,[[["chars"]],["option",["u8"]]]],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",N,[[["chars"]],["option",["u8"]]]],[5,"rgb","","Reads RGB colors from iterator of characters.",N,[[["chars"]],["option"]]],[5,"rgba","","Reads RGBA colors from iterator of characters.",N,[[["chars"]],["option"]]],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",N,[[["chars"]],["option"]]]],"paths":[]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["rusttype"]={"doc":"RustType is a pure Rust alternative to libraries like FreeType.","items":[[3,"Rect","rusttype","A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.",N,N],[12,"min","","",0,N],[12,"max","","",0,N],[3,"Point","","A point in 2-dimensional space, with each dimension of type `N`.",N,N],[12,"x","","",1,N],[12,"y","","",1,N],[3,"Vector","","A vector in 2-dimensional space, with each dimension of type `N`.",N,N],[12,"x","","",2,N],[12,"y","","",2,N],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",N,N],[12,"p","","",3,N],[3,"Curve","","A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.",N,N],[12,"p","","",4,N],[3,"FontCollection","","A collection of fonts read straight from a font file's data. The data in the collection is not validated. This structure may or may not own the font data.",N,N],[3,"Font","","A single font. This may or may not own the font data.",N,N],[3,"Codepoint","","Represents a Unicode code point.",N,N],[12,"0","","",5,N],[3,"GlyphId","","Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to the correct glyph in a font other than the one that it was obtained from.",N,N],[12,"0","","",6,N],[3,"Glyph","","A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or it may be a standalone glyph that owns the data needed by it.",N,N],[3,"SharedGlyphData","","",N,N],[12,"id","","",7,N],[12,"extents","","",7,N],[12,"scale_for_1_pixel","","",7,N],[12,"unit_h_metrics","","",7,N],[12,"shape","","",7,N],[3,"HMetrics","","The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph from the previous one in a string when laying a string out horizontally.",N,N],[12,"advance_width","","The horizontal offset that the origin of the next glyph should be from the origin of this glyph.",8,N],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.",8,N],[3,"VMetrics","","The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of vertical space to give a line of text, and for computing the vertical offset between successive lines.",N,N],[12,"ascent","","The highest point that any glyph in the font extends to above the baseline. Typically positive.",9,N],[12,"descent","","The lowest point that any glyph in the font extends to below the baseline. Typically negative.",9,N],[12,"line_gap","","The gap to leave between the descent of one line and the ascent of the next. This is of course only a guideline given by the font's designers.",9,N],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query such a glyph for information that depends on the scale of the glyph.",N,N],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling information. You can query such a glyph for information that depends on the scale and position of the glyph.",N,N],[3,"Scale","","Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor f in the horizontal direction is achieved by setting `x` equal to f times `y`.",N,N],[12,"x","","Horizontal scale, in pixels.",10,N],[12,"y","","Vertical scale, in pixels.",10,N],[3,"IntoFontsIter","","",N,N],[3,"GlyphIter","","",N,N],[3,"LayoutIter","","",N,N],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",N,N],[12,"segments","","",11,N],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared reference to externally owned data, or managed by reference counting. `SharedBytes` can be conveniently used with `From` and `Into`, and dereferences to the contained bytes.",N,N],[13,"ByRef","","",12,N],[13,"ByArc","","",12,N],[4,"CodepointOrGlyphId","","Represents either a Unicode code point, or a glyph identifier for a font.",N,N],[13,"Codepoint","","",13,N],[13,"GlyphId","","",13,N],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",N,N],[13,"Line","","",14,N],[13,"Curve","","",14,N],[5,"point","","A convenience function for generating `Point`s.",N,[[["n"],["n"]],["point"]]],[5,"vector","","A convenience function for generating `Vector`s.",N,[[["n"],["n"]],["vector"]]],[11,"width","","",0,[[["self"]],["n"]]],[11,"height","","",0,[[["self"]],["n"]]],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[["f32"]],["scale"]]],[11,"from_bytes","","Constructs a font collection from an array of bytes, typically loaded from a font file. This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.",15,[[["b"]],["fontcollection"]]],[11,"into_font","","In the common case that a font collection consists of only one font, this function consumes this font collection and turns it into a font. If this is not the case, or the font is not valid (read: not supported by this library), `None` is returned.",15,[[["self"]],["option",["font"]]]],[11,"font_at","","Gets the font at index `i` in the font collection, if it exists and is valid. The produced font borrows the font data that is either borrowed or owned by this font collection.",15,[[["self"],["usize"]],["option",["font"]]]],[11,"into_fonts","","Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.",15,[[["self"]],["intofontsiter"]]],[11,"v_metrics","","The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs in the font. See `VMetrics` for more detail.",16,[[["self"],["scale"]],["vmetrics"]]],[11,"v_metrics_unscaled","","Get the unscaled VMetrics for this font, shared by all glyphs. See `VMetrics` for more detail.",16,[[["self"]],["vmetrics"]]],[11,"units_per_em","","Returns the units per EM square of this font",16,[[["self"]],["u16"]]],[11,"glyph_count","","The number of glyphs present in this font. Glyph identifiers for this font will always be in the range `0..self.glyph_count()`",16,[[["self"]],["usize"]]],[11,"glyph","","Returns the corresponding glyph for a Unicode code point or a glyph id for this font. If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`), otherwise `None` is returned.",16,[[["self"],["c"]],["option",["glyph"]]]],[11,"glyphs_for","","A convenience function.",16,[[["self"],["i"]],["glyphiter"]]],[11,"font_name_strings","","Returns an iterator over the names for this font.",16,[[["self"]],["fontnameiter",["sharedbytes"]]]],[11,"layout","","A convenience function for laying out glyphs for a string horizontally. It does not take control characters like line breaks into account, as treatment of these is likely to depend on the application.",16,[[["self"],["str"],["scale"],["point",["f32"]]],["layoutiter"]]],[11,"pair_kerning","","Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.",16,[[["self"],["scale"],["a"],["b"]],["f32"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",17,[[["self"]],["option",["font"]]]],[11,"id","","The glyph identifier for this glyph.",17,[[["self"]],["glyphid"]]],[11,"scaled","","Augments this glyph with scaling information, making methods that depend on the scale of the glyph available.",17,[[["self"],["scale"]],["scaledglyph"]]],[11,"standalone","","Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources, extracted from the font. This glyph can outlive the font that it comes from.",17,[[["self"]],["glyph"]]],[11,"get_data","","Get the data from this glyph (such as width, extents, vertices, etc.). Only possible if the glyph is a shared glyph.",17,[[["self"]],["option",["arc"]]]],[11,"id","","The glyph identifier for this glyph.",18,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",18,[[["self"]],["option",["font"]]]],[11,"into_unscaled","","A reference to this glyph without the scaling",18,[[["self"]],["glyph"]]],[11,"unscaled","","Removes the scaling from this glyph",18,[[["self"]],["glyph"]]],[11,"positioned","","Augments this glyph with positioning information, making methods that depend on the position of the glyph available.",18,[[["self"],["point",["f32"]]],["positionedglyph"]]],[11,"scale","","",18,[[["self"]],["scale"]]],[11,"h_metrics","","Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.",18,[[["self"]],["hmetrics"]]],[11,"shape","","Produces a list of the contours that make up the shape of this glyph. Each contour consists of a sequence of segments. Each segment is either a straight `Line` or a `Curve`.",18,[[["self"]],["option",["vec"]]]],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.",18,[[["self"]],["option",["rect"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",18,[[["self"]],["scaledglyph"]]],[11,"id","","The glyph identifier for this glyph.",19,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",19,[[["self"]],["option",["font"]]]],[11,"unpositioned","","A reference to this glyph without positioning",19,[[["self"]],["scaledglyph"]]],[11,"into_unpositioned","","Removes the positioning from this glyph",19,[[["self"]],["scaledglyph"]]],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle aligned to pixel boundaries that encloses the shape of this glyph at this position.",19,[[["self"]],["option",["rect"]]]],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.",19,[[["self"]],["option",["vec"]]]],[11,"scale","","",19,[[["self"]],["scale"]]],[11,"position","","",19,[[["self"]],["point",["f32"]]]],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:",19,[[["self"],["o"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",19,[[["self"]],["positionedglyph"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["point"]]],[11,"clone","","",2,[[["self"]],["vector"]]],[11,"clone","","",3,[[["self"]],["line"]]],[11,"clone","","",4,[[["self"]],["curve"]]],[11,"clone","","",0,[[["self"]],["rect"]]],[11,"clone","","",15,[[["self"]],["fontcollection"]]],[11,"clone","","",16,[[["self"]],["font"]]],[11,"clone","","",12,[[["self"]],["sharedbytes"]]],[11,"clone","","",5,[[["self"]],["codepoint"]]],[11,"clone","","",13,[[["self"]],["codepointorglyphid"]]],[11,"clone","","",6,[[["self"]],["glyphid"]]],[11,"clone","","",17,[[["self"]],["glyph"]]],[11,"clone","","",8,[[["self"]],["hmetrics"]]],[11,"clone","","",9,[[["self"]],["vmetrics"]]],[11,"clone","","",18,[[["self"]],["scaledglyph"]]],[11,"clone","","",19,[[["self"]],["positionedglyph"]]],[11,"clone","","",10,[[["self"]],["scale"]]],[11,"clone","","",21,[[["self"]],["glyphiter"]]],[11,"clone","","",22,[[["self"]],["layoutiter"]]],[11,"clone","","",14,[[["self"]],["segment"]]],[11,"clone","","",11,[[["self"]],["contour"]]],[11,"from","","",12,N],[11,"from","","",12,[[["arc"]],["sharedbytes"]]],[11,"from","","",12,[[["box"]],["sharedbytes"]]],[11,"from","","",12,[[["vec",["u8"]]],["sharedbytes"]]],[11,"from","","",9,[[["vmetrics"]],["self"]]],[11,"from","","",5,[[["char"]],["codepoint"]]],[11,"from","","",13,[[["codepoint"]],["codepointorglyphid"]]],[11,"from","","",13,[[["glyphid"]],["codepointorglyphid"]]],[11,"from","","",13,[[["char"]],["codepointorglyphid"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"next","","",21,[[["self"]],["option",["glyph"]]]],[11,"next","","",22,[[["self"]],["option",["positionedglyph"]]]],[11,"partial_cmp","","",1,[[["self"],["point"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["point"]],["bool"]]],[11,"le","","",1,[[["self"],["point"]],["bool"]]],[11,"gt","","",1,[[["self"],["point"]],["bool"]]],[11,"ge","","",1,[[["self"],["point"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["vector"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["vector"]],["bool"]]],[11,"le","","",2,[[["self"],["vector"]],["bool"]]],[11,"gt","","",2,[[["self"],["vector"]],["bool"]]],[11,"ge","","",2,[[["self"],["vector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["line"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["line"]],["bool"]]],[11,"le","","",3,[[["self"],["line"]],["bool"]]],[11,"gt","","",3,[[["self"],["line"]],["bool"]]],[11,"ge","","",3,[[["self"],["line"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["curve"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["curve"]],["bool"]]],[11,"le","","",4,[[["self"],["curve"]],["bool"]]],[11,"gt","","",4,[[["self"],["curve"]],["bool"]]],[11,"ge","","",4,[[["self"],["curve"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["rect"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["rect"]],["bool"]]],[11,"le","","",0,[[["self"],["rect"]],["bool"]]],[11,"gt","","",0,[[["self"],["rect"]],["bool"]]],[11,"ge","","",0,[[["self"],["rect"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["codepoint"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"le","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"gt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ge","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"partial_cmp","","",13,[[["self"],["codepointorglyphid"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"le","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"gt","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"ge","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["glyphid"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"le","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"gt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ge","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["hmetrics"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"le","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"gt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ge","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["vmetrics"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"le","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"gt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ge","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["scale"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["scale"]],["bool"]]],[11,"le","","",10,[[["self"],["scale"]],["bool"]]],[11,"gt","","",10,[[["self"],["scale"]],["bool"]]],[11,"ge","","",10,[[["self"],["scale"]],["bool"]]],[11,"eq","","",1,[[["self"],["point"]],["bool"]]],[11,"ne","","",1,[[["self"],["point"]],["bool"]]],[11,"eq","","",2,[[["self"],["vector"]],["bool"]]],[11,"ne","","",2,[[["self"],["vector"]],["bool"]]],[11,"eq","","",3,[[["self"],["line"]],["bool"]]],[11,"ne","","",3,[[["self"],["line"]],["bool"]]],[11,"eq","","",4,[[["self"],["curve"]],["bool"]]],[11,"ne","","",4,[[["self"],["curve"]],["bool"]]],[11,"eq","","",0,[[["self"],["rect"]],["bool"]]],[11,"ne","","",0,[[["self"],["rect"]],["bool"]]],[11,"eq","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ne","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"eq","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"ne","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"eq","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ne","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"eq","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ne","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"eq","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ne","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"eq","","",10,[[["self"],["scale"]],["bool"]]],[11,"ne","","",10,[[["self"],["scale"]],["bool"]]],[11,"cmp","","",1,[[["self"],["point"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["vector"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["rect"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["codepoint"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["codepointorglyphid"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["glyphid"]],["ordering"]]],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",0,N],[11,"hash","","",5,N],[11,"hash","","",13,N],[11,"hash","","",6,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"add","","",2,[[["self"],["vector"]],["vector"]]],[11,"add","","",1,[[["self"],["vector"]],["point"]]],[11,"add","","",2,[[["self"],["point"]],["point"]]],[11,"sub","","",1,[[["self"],["point"]],["vector"]]],[11,"sub","","",2,[[["self"],["vector"]],["vector"]]],[11,"sub","","",1,[[["self"],["vector"]],["point"]]],[11,"mul","","",2,[[["self"],["f32"]],["vector",["f32"]]]],[11,"mul","","",2,[[["self"],["f64"]],["vector",["f64"]]]],[11,"mul","","",9,[[["self"],["f32"]],["self"]]],[11,"div","","",2,[[["self"],["f32"]],["vector",["f32"]]]],[11,"div","","",2,[[["self"],["f64"]],["vector",["f64"]]]],[11,"deref","","",12,N]],"paths":[[3,"Rect"],[3,"Point"],[3,"Vector"],[3,"Line"],[3,"Curve"],[3,"Codepoint"],[3,"GlyphId"],[3,"SharedGlyphData"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"CodepointOrGlyphId"],[4,"Segment"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"IntoFontsIter"],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","items":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads spawned at construction.",N,N],[3,"Scope","","Handle to the scope during which the threadpool is borrowed.",N,N],[11,"new","","Construct a threadpool with the given number of threads. Minimum value is `1`.",0,[[["u32"]],["pool"]]],[11,"scoped","","Borrows the pool and allows executing jobs on other threads during that scope via the argument of the closure.",0,[[["self"],["f"]],["r"]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute","","Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all","","Blocks until all currently queued jobs have run to completion.",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of scope, even if the code between panics. (as long as panic doesn't abort)","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected value.",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run (in the context where this method is called).",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through deref) and calls `dropfn` when its destructor runs.",1,[[["t"],["f"]],["scopeguard"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from panic).",N,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["sdl2"]={"doc":"","items":[[3,"Sdl","sdl2","The SDL context type. Initialize with `sdl2::init()`.",N,N],[3,"AudioSubsystem","","",N,N],[3,"GameControllerSubsystem","","",N,N],[3,"HapticSubsystem","","",N,N],[3,"JoystickSubsystem","","",N,N],[3,"VideoSubsystem","","",N,N],[3,"TimerSubsystem","","",N,N],[3,"EventSubsystem","","",N,N],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping functions.",N,N],[4,"Error","","",N,N],[13,"NoMemError","","",0,N],[13,"ReadError","","",0,N],[13,"WriteError","","",0,N],[13,"SeekError","","",0,N],[13,"UnsupportedError","","",0,N],[4,"IntegerOrSdlError","","A given integer was so big that its representation as a C integer would be negative.",N,N],[13,"IntegerOverflows","","",1,N],[13,"SdlError","","",1,N],[5,"init","","Initializes the SDL library. This must be called before using any other SDL function.",N,[[],["result",["sdl","string"]]]],[5,"get_error","","",N,[[],["string"]]],[5,"set_error","","",N,[[["str"]],["result",["nulerror"]]]],[5,"set_error_from_code","","",N,[[["error"]]]],[5,"clear_error","","",N,[[]]],[0,"clipboard","","",N,N],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with `VideoSubsystem::clipboard()`.",N,N],[11,"clipboard","sdl2","",2,[[["self"]],["clipboardutil"]]],[11,"set_clipboard_text","sdl2::clipboard","",3,[[["self"],["str"]],["result",["string"]]]],[11,"clipboard_text","","",3,[[["self"]],["result",["string","string"]]]],[11,"has_clipboard_text","","",3,[[["self"]],["bool"]]],[0,"cpuinfo","sdl2","",N,N],[5,"cpu_count","sdl2::cpuinfo","",N,[[],["i32"]]],[5,"cpu_cache_line_size","","",N,[[],["i32"]]],[5,"has_rdtsc","","",N,[[],["bool"]]],[5,"has_alti_vec","","",N,[[],["bool"]]],[5,"has_mmx","","",N,[[],["bool"]]],[5,"has_3d_now","","",N,[[],["bool"]]],[5,"has_sse","","",N,[[],["bool"]]],[5,"has_sse2","","",N,[[],["bool"]]],[5,"has_sse3","","",N,[[],["bool"]]],[5,"has_sse41","","",N,[[],["bool"]]],[5,"has_sse42","","",N,[[],["bool"]]],[5,"has_avx","","",N,[[],["bool"]]],[5,"system_ram","","",N,[[],["i32"]]],[17,"CACHELINESIZE","","",N,N],[0,"macros","sdl2","",N,N],[0,"event","","Event Handling",N,N],[3,"EventPollIterator","sdl2::event","An iterator that calls `EventPump::poll_event()`.",N,N],[3,"EventWaitIterator","","An iterator that calls `EventPump::wait_event()`.",N,N],[3,"EventWaitTimeoutIterator","","An iterator that calls `EventPump::wait_event_timeout()`.",N,N],[4,"EventType","","Types of events that can be delivered.",N,N],[13,"First","","",4,N],[13,"Quit","","",4,N],[13,"AppTerminating","","",4,N],[13,"AppLowMemory","","",4,N],[13,"AppWillEnterBackground","","",4,N],[13,"AppDidEnterBackground","","",4,N],[13,"AppWillEnterForeground","","",4,N],[13,"AppDidEnterForeground","","",4,N],[13,"Window","","",4,N],[13,"KeyDown","","",4,N],[13,"KeyUp","","",4,N],[13,"TextEditing","","",4,N],[13,"TextInput","","",4,N],[13,"MouseMotion","","",4,N],[13,"MouseButtonDown","","",4,N],[13,"MouseButtonUp","","",4,N],[13,"MouseWheel","","",4,N],[13,"JoyAxisMotion","","",4,N],[13,"JoyBallMotion","","",4,N],[13,"JoyHatMotion","","",4,N],[13,"JoyButtonDown","","",4,N],[13,"JoyButtonUp","","",4,N],[13,"JoyDeviceAdded","","",4,N],[13,"JoyDeviceRemoved","","",4,N],[13,"ControllerAxisMotion","","",4,N],[13,"ControllerButtonDown","","",4,N],[13,"ControllerButtonUp","","",4,N],[13,"ControllerDeviceAdded","","",4,N],[13,"ControllerDeviceRemoved","","",4,N],[13,"ControllerDeviceRemapped","","",4,N],[13,"FingerDown","","",4,N],[13,"FingerUp","","",4,N],[13,"FingerMotion","","",4,N],[13,"DollarGesture","","",4,N],[13,"DollarRecord","","",4,N],[13,"MultiGesture","","",4,N],[13,"ClipboardUpdate","","",4,N],[13,"DropFile","","",4,N],[13,"User","","",4,N],[13,"Last","","",4,N],[4,"WindowEvent","","An enum of window events.",N,N],[13,"None","","",5,N],[13,"Shown","","",5,N],[13,"Hidden","","",5,N],[13,"Exposed","","",5,N],[13,"Moved","","",5,N],[13,"Resized","","",5,N],[13,"SizeChanged","","",5,N],[13,"Minimized","","",5,N],[13,"Maximized","","",5,N],[13,"Restored","","",5,N],[13,"Enter","","",5,N],[13,"Leave","","",5,N],[13,"FocusGained","","",5,N],[13,"FocusLost","","",5,N],[13,"Close","","",5,N],[13,"TakeFocus","","",5,N],[13,"HitTest","","",5,N],[4,"Event","","Different event types.",N,N],[13,"Quit","","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppTerminating","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppLowMemory","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppWillEnterBackground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppDidEnterBackground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppWillEnterForeground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppDidEnterForeground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"Window","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"win_event","","",6,N],[13,"KeyDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"keycode","","",6,N],[12,"scancode","","",6,N],[12,"keymod","","",6,N],[12,"repeat","","",6,N],[13,"KeyUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"keycode","","",6,N],[12,"scancode","","",6,N],[12,"keymod","","",6,N],[12,"repeat","","",6,N],[13,"TextEditing","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"text","","",6,N],[12,"start","","",6,N],[12,"length","","",6,N],[13,"TextInput","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"text","","",6,N],[13,"MouseMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mousestate","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"xrel","","",6,N],[12,"yrel","","",6,N],[13,"MouseButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mouse_btn","","",6,N],[12,"clicks","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MouseButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mouse_btn","","",6,N],[12,"clicks","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MouseWheel","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"direction","","",6,N],[13,"JoyAxisMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"axis_idx","","",6,N],[12,"value","","",6,N],[13,"JoyBallMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"ball_idx","","",6,N],[12,"xrel","","",6,N],[12,"yrel","","",6,N],[13,"JoyHatMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"hat_idx","","",6,N],[12,"state","","",6,N],[13,"JoyButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"button_idx","","",6,N],[13,"JoyButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"button_idx","","",6,N],[13,"JoyDeviceAdded","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The newly added joystick's `joystick_index`",6,N],[13,"JoyDeviceRemoved","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[13,"ControllerAxisMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"axis","","",6,N],[12,"value","","",6,N],[13,"ControllerButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"button","","",6,N],[13,"ControllerButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"button","","",6,N],[13,"ControllerDeviceAdded","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The newly added controller's `joystick_index`",6,N],[13,"ControllerDeviceRemoved","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[13,"ControllerDeviceRemapped","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[13,"FingerDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"FingerUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"FingerMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"DollarGesture","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"gesture_id","","",6,N],[12,"num_fingers","","",6,N],[12,"error","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"DollarRecord","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"gesture_id","","",6,N],[12,"num_fingers","","",6,N],[12,"error","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MultiGesture","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"d_theta","","",6,N],[12,"d_dist","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"num_fingers","","",6,N],[13,"ClipboardUpdate","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"DropFile","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"filename","","",6,N],[13,"User","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"type_","","",6,N],[12,"code","","",6,N],[12,"data1","","",6,N],[12,"data2","","",6,N],[13,"Unknown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"type_","","",6,N],[11,"flush_event","sdl2","Removes all events in the event queue that match the specified event type.",7,[[["self"],["eventtype"]]]],[11,"flush_events","","Removes all events in the event queue that match the specified type range.",7,[[["self"],["u32"],["u32"]]]],[11,"peek_events","","Reads the events at the front of the event queue, until the maximum amount of events is read.",7,[[["self"],["u32"]],["b"]]],[11,"push_event","","Pushes an event to the event queue.",7,[[["self"],["event"]],["result",["string"]]]],[11,"register_event","","Register a custom SDL event.",7,[[["self"]],["result",["u32","string"]]]],[11,"register_events","","Registers custom SDL events.",7,[[["self"],["u32"]],["result",["vec","string"]]]],[11,"register_custom_event","","Register a custom event",7,[[["self"]],["result",["string"]]]],[11,"push_custom_event","","Push a custom event",7,[[["self"],["t"]],["result",["string"]]]],[11,"is_user_event","sdl2::event","",6,[[["self"]],["bool"]]],[11,"as_user_event_type","","",6,[[["self"]],["option"]]],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",8,[[["self"],["eventtype"]],["bool"]]],[11,"enable_event","","Enable an event type. Returns if the event type was enabled before the call.",8,[[["self"],["eventtype"]],["bool"]]],[11,"disable_event","","Disable an event type. Returns if the event type was enabled before the call.",8,[[["self"],["eventtype"]],["bool"]]],[11,"poll_event","","Polls for currently pending events.",8,[[["self"]],["option",["event"]]]],[11,"poll_iter","","Returns a polling iterator that calls `poll_event()`. The iterator will terminate once there are no more pending events.",8,[[["self"]],["eventpolliterator"]]],[11,"pump_events","","Pumps the event loop, gathering events from the input devices.",8,[[["self"]]]],[11,"wait_event","","Waits indefinitely for the next available event.",8,[[["self"]],["event"]]],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for the next available event.",8,[[["self"],["u32"]],["option",["event"]]]],[11,"wait_iter","","Returns a waiting iterator that calls `wait_event()`.",8,[[["self"]],["eventwaititerator"]]],[11,"wait_timeout_iter","","Returns a waiting iterator that calls `wait_event_timeout()`.",8,[[["self"],["u32"]],["eventwaittimeoutiterator"]]],[11,"keyboard_state","","",8,[[["self"]],["keyboardstate"]]],[11,"mouse_state","","",8,[[["self"]],["mousestate"]]],[11,"relative_mouse_state","","",8,[[["self"]],["relativemousestate"]]],[0,"filesystem","","",N,N],[4,"PrefPathError","sdl2::filesystem","",N,N],[13,"InvalidOrganizationName","","",9,N],[13,"InvalidApplicationName","","",9,N],[13,"SdlError","","",9,N],[5,"base_path","","",N,[[],["result",["string","string"]]]],[5,"pref_path","","Return the preferred directory for the application to write files on this system, based on the given organization and application name.",N,[[["str"],["str"]],["result",["string","prefpatherror"]]]],[0,"gesture","sdl2","",N,N],[0,"touch","","",N,N],[5,"num_touch_devices","sdl2::touch","",N,[[],["i32"]]],[5,"touch_device","","",N,[[["i32"]],["touchdevice"]]],[5,"num_touch_fingers","","",N,[[["touchdevice"]],["i32"]]],[5,"touch_finger","","",N,[[["touchdevice"],["i32"]],["option",["finger"]]]],[6,"Finger","","",N,N],[6,"TouchDevice","","",N,N],[0,"joystick","sdl2","",N,N],[3,"Joystick","sdl2::joystick","Wrapper around the `SDL_Joystick` object",N,N],[3,"Guid","","Wrapper around a `SDL_JoystickGUID`, a globally unique identifier for a joystick.",N,N],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all combinations make sense: 5 for instance would mean up and down at the same time... To simplify things I turn it into an enum which is how the SDL2 docs present it anyway (using macros).",N,N],[13,"Centered","","",10,N],[13,"Up","","",10,N],[13,"Right","","",10,N],[13,"Down","","",10,N],[13,"Left","","",10,N],[13,"RightUp","","",10,N],[13,"RightDown","","",10,N],[13,"LeftUp","","",10,N],[13,"LeftDown","","",10,N],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks and controllers identified by SDL.",11,[[["self"]],["result",["u32","string"]]]],[11,"open","","Attempt to open the joystick at index `joystick_index` and return it.",11,[[["self"],["u32"]],["result",["joystick","integerorsdlerror"]]]],[11,"name_for_index","","Return the name of the joystick at index `joystick_index`.",11,[[["self"],["u32"]],["result",["string","integerorsdlerror"]]]],[11,"device_guid","","Get the GUID for the joystick at index `joystick_index`",11,[[["self"],["u32"]],["result",["guid","integerorsdlerror"]]]],[11,"set_event_state","","If state is `true` joystick events are processed, otherwise they're ignored.",11,[[["self"],["bool"]]]],[11,"event_state","","Return `true` if joystick events are processed.",11,[[["self"]],["bool"]]],[11,"update","","Force joystick update when not using the event loop",11,[[["self"]]]],[11,"subsystem","sdl2::joystick","",12,[[["self"]],["joysticksubsystem"]]],[11,"name","","Return the name of the joystick or an empty string if no name is found.",12,[[["self"]],["string"]]],[11,"attached","","Return true if the joystick has been opened and currently connected.",12,[[["self"]],["bool"]]],[11,"instance_id","","",12,[[["self"]],["i32"]]],[11,"guid","","Retreive the joystick's GUID",12,[[["self"]],["guid"]]],[11,"num_axes","","Retreive the number of axes for this joystick",12,[[["self"]],["u32"]]],[11,"axis","","Gets the position of the given `axis`.",12,[[["self"],["u32"]],["result",["i16","integerorsdlerror"]]]],[11,"num_buttons","","Retreive the number of buttons for this joystick",12,[[["self"]],["u32"]]],[11,"button","","Return `Ok(true)` if `button` is pressed.",12,[[["self"],["u32"]],["result",["bool","integerorsdlerror"]]]],[11,"num_balls","","Retreive the number of balls for this joystick",12,[[["self"]],["u32"]]],[11,"ball","","Return a pair `(dx, dy)` containing the difference in axis position since the last poll",12,[[["self"],["u32"]],["result",["integerorsdlerror"]]]],[11,"num_hats","","Retreive the number of balls for this joystick",12,[[["self"]],["u32"]]],[11,"hat","","Return the position of `hat` for this joystick",12,[[["self"],["u32"]],["result",["hatstate","integerorsdlerror"]]]],[11,"from_string","","Create a GUID from a string representation.",13,[[["str"]],["result",["guid","nulerror"]]]],[11,"is_zero","","Return `true` if GUID is full 0s",13,[[["self"]],["bool"]]],[11,"string","","Return a String representation of GUID",13,[[["self"]],["string"]]],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",13,[[["self"]],["sdl_joystickguid"]]],[11,"from_raw","","",10,[[["u8"]],["hatstate"]]],[11,"to_raw","","",10,[[["self"]],["u8"]]],[0,"controller","sdl2","",N,N],[3,"GameController","sdl2::controller","Wrapper around the `SDL_GameController` object",N,N],[4,"AddMappingError","","",N,N],[13,"InvalidMapping","","",14,N],[13,"InvalidFilePath","","",14,N],[13,"SdlError","","",14,N],[4,"Axis","","",N,N],[13,"LeftX","","",15,N],[13,"LeftY","","",15,N],[13,"RightX","","",15,N],[13,"RightY","","",15,N],[13,"TriggerLeft","","",15,N],[13,"TriggerRight","","",15,N],[4,"Button","","",N,N],[13,"A","","",16,N],[13,"B","","",16,N],[13,"X","","",16,N],[13,"Y","","",16,N],[13,"Back","","",16,N],[13,"Guide","","",16,N],[13,"Start","","",16,N],[13,"LeftStick","","",16,N],[13,"RightStick","","",16,N],[13,"LeftShoulder","","",16,N],[13,"RightShoulder","","",16,N],[13,"DPadUp","","",16,N],[13,"DPadDown","","",16,N],[13,"DPadLeft","","",16,N],[13,"DPadRight","","",16,N],[4,"MappingStatus","","Possible return values for `add_mapping`",N,N],[13,"Added","","",17,N],[13,"Updated","","",17,N],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks and controllers identified by SDL.",18,[[["self"]],["result",["u32","string"]]]],[11,"is_game_controller","","Return true if the joystick at index `joystick_index` is a game controller.",18,[[["self"],["u32"]],["bool"]]],[11,"open","","Attempt to open the controller ad index `joystick_index` and return it. Controller IDs are the same as joystick IDs and the maximum number can be retreived using the `SDL_NumJoysticks` function.",18,[[["self"],["u32"]],["result",["gamecontroller","integerorsdlerror"]]]],[11,"name_for_index","","Return the name of the controller at index `joystick_index`.",18,[[["self"],["u32"]],["result",["string","integerorsdlerror"]]]],[11,"set_event_state","","If state is `true` controller events are processed, otherwise they're ignored.",18,[[["self"],["bool"]]]],[11,"event_state","","Return `true` if controller events are processed.",18,[[["self"]],["bool"]]],[11,"add_mapping","","Add a new mapping from a mapping string",18,[[["self"],["str"]],["result",["mappingstatus","addmappingerror"]]]],[11,"load_mappings","","Load mappings from a file",18,[[["self"],["p"]],["result",["i32","addmappingerror"]]]],[11,"mapping_for_guid","","",18,[[["self"],["guid"]],["result",["string","string"]]]],[11,"update","","Force controller update when not using the event loop",18,[[["self"]]]],[11,"from_string","sdl2::controller","Return the Axis from a string description in the same format used by the game controller mapping strings.",15,[[["str"]],["option",["axis"]]]],[11,"string","","Return a string for a given axis in the same format using by the game controller mapping strings",15,[[["self"]],["string"]]],[11,"from_ll","","",15,[[["sdl_gamecontrolleraxis"]],["option",["axis"]]]],[11,"to_ll","","",15,[[["self"]],["sdl_gamecontrolleraxis"]]],[11,"from_string","","Return the Button from a string description in the same format used by the game controller mapping strings.",16,[[["str"]],["option",["button"]]]],[11,"string","","Return a string for a given button in the same format using by the game controller mapping strings",16,[[["self"]],["string"]]],[11,"from_ll","","",16,[[["sdl_gamecontrollerbutton"]],["option",["button"]]]],[11,"to_ll","","",16,[[["self"]],["sdl_gamecontrollerbutton"]]],[11,"subsystem","","",19,[[["self"]],["gamecontrollersubsystem"]]],[11,"name","","Return the name of the controller or an empty string if no name is found.",19,[[["self"]],["string"]]],[11,"mapping","","Return a String describing the controller's button and axis mappings",19,[[["self"]],["string"]]],[11,"attached","","Return true if the controller has been opened and currently connected.",19,[[["self"]],["bool"]]],[11,"instance_id","","Return the joystick instance id of this controller",19,[[["self"]],["i32"]]],[11,"axis","","Get the position of the given `axis`",19,[[["self"],["axis"]],["i16"]]],[11,"button","","Returns `true` if `button` is pressed.",19,[[["self"],["button"]],["bool"]]],[0,"haptic","sdl2","Haptic Functions",N,N],[3,"Haptic","sdl2::haptic","Wrapper around the `SDL_Haptic` object",N,N],[11,"open_from_joystick_id","sdl2","Attempt to open the joystick at index `joystick_index` and return its haptic device.",20,[[["self"],["u32"]],["result",["haptic","integerorsdlerror"]]]],[11,"subsystem","sdl2::haptic","",21,[[["self"]],["hapticsubsystem"]]],[11,"rumble_play","","Run a simple rumble effect on the haptic device.",21,[[["self"],["f32"],["u32"]]]],[11,"rumble_stop","","Stop the simple rumble on the haptic device.",21,[[["self"]]]],[0,"keyboard","sdl2","",N,N],[3,"Mod","sdl2::keyboard","",N,N],[3,"KeyboardState","","",N,N],[3,"ScancodeIterator","","",N,N],[3,"PressedScancodeIterator","","",N,N],[3,"KeyboardUtil","","Keyboard utility functions. Access with `Sdl::keyboard()`.",N,N],[3,"TextInputUtil","","Text input utility functions. Access with `VideoSubsystem::text_input()`.",N,N],[4,"Keycode","","",N,N],[13,"Backspace","","",22,N],[13,"Tab","","",22,N],[13,"Return","","",22,N],[13,"Escape","","",22,N],[13,"Space","","",22,N],[13,"Exclaim","","",22,N],[13,"Quotedbl","","",22,N],[13,"Hash","","",22,N],[13,"Dollar","","",22,N],[13,"Percent","","",22,N],[13,"Ampersand","","",22,N],[13,"Quote","","",22,N],[13,"LeftParen","","",22,N],[13,"RightParen","","",22,N],[13,"Asterisk","","",22,N],[13,"Plus","","",22,N],[13,"Comma","","",22,N],[13,"Minus","","",22,N],[13,"Period","","",22,N],[13,"Slash","","",22,N],[13,"Num0","","",22,N],[13,"Num1","","",22,N],[13,"Num2","","",22,N],[13,"Num3","","",22,N],[13,"Num4","","",22,N],[13,"Num5","","",22,N],[13,"Num6","","",22,N],[13,"Num7","","",22,N],[13,"Num8","","",22,N],[13,"Num9","","",22,N],[13,"Colon","","",22,N],[13,"Semicolon","","",22,N],[13,"Less","","",22,N],[13,"Equals","","",22,N],[13,"Greater","","",22,N],[13,"Question","","",22,N],[13,"At","","",22,N],[13,"LeftBracket","","",22,N],[13,"Backslash","","",22,N],[13,"RightBracket","","",22,N],[13,"Caret","","",22,N],[13,"Underscore","","",22,N],[13,"Backquote","","",22,N],[13,"A","","",22,N],[13,"B","","",22,N],[13,"C","","",22,N],[13,"D","","",22,N],[13,"E","","",22,N],[13,"F","","",22,N],[13,"G","","",22,N],[13,"H","","",22,N],[13,"I","","",22,N],[13,"J","","",22,N],[13,"K","","",22,N],[13,"L","","",22,N],[13,"M","","",22,N],[13,"N","","",22,N],[13,"O","","",22,N],[13,"P","","",22,N],[13,"Q","","",22,N],[13,"R","","",22,N],[13,"S","","",22,N],[13,"T","","",22,N],[13,"U","","",22,N],[13,"V","","",22,N],[13,"W","","",22,N],[13,"X","","",22,N],[13,"Y","","",22,N],[13,"Z","","",22,N],[13,"Delete","","",22,N],[13,"CapsLock","","",22,N],[13,"F1","","",22,N],[13,"F2","","",22,N],[13,"F3","","",22,N],[13,"F4","","",22,N],[13,"F5","","",22,N],[13,"F6","","",22,N],[13,"F7","","",22,N],[13,"F8","","",22,N],[13,"F9","","",22,N],[13,"F10","","",22,N],[13,"F11","","",22,N],[13,"F12","","",22,N],[13,"PrintScreen","","",22,N],[13,"ScrollLock","","",22,N],[13,"Pause","","",22,N],[13,"Insert","","",22,N],[13,"Home","","",22,N],[13,"PageUp","","",22,N],[13,"End","","",22,N],[13,"PageDown","","",22,N],[13,"Right","","",22,N],[13,"Left","","",22,N],[13,"Down","","",22,N],[13,"Up","","",22,N],[13,"NumLockClear","","",22,N],[13,"KpDivide","","",22,N],[13,"KpMultiply","","",22,N],[13,"KpMinus","","",22,N],[13,"KpPlus","","",22,N],[13,"KpEnter","","",22,N],[13,"Kp1","","",22,N],[13,"Kp2","","",22,N],[13,"Kp3","","",22,N],[13,"Kp4","","",22,N],[13,"Kp5","","",22,N],[13,"Kp6","","",22,N],[13,"Kp7","","",22,N],[13,"Kp8","","",22,N],[13,"Kp9","","",22,N],[13,"Kp0","","",22,N],[13,"KpPeriod","","",22,N],[13,"Application","","",22,N],[13,"Power","","",22,N],[13,"KpEquals","","",22,N],[13,"F13","","",22,N],[13,"F14","","",22,N],[13,"F15","","",22,N],[13,"F16","","",22,N],[13,"F17","","",22,N],[13,"F18","","",22,N],[13,"F19","","",22,N],[13,"F20","","",22,N],[13,"F21","","",22,N],[13,"F22","","",22,N],[13,"F23","","",22,N],[13,"F24","","",22,N],[13,"Execute","","",22,N],[13,"Help","","",22,N],[13,"Menu","","",22,N],[13,"Select","","",22,N],[13,"Stop","","",22,N],[13,"Again","","",22,N],[13,"Undo","","",22,N],[13,"Cut","","",22,N],[13,"Copy","","",22,N],[13,"Paste","","",22,N],[13,"Find","","",22,N],[13,"Mute","","",22,N],[13,"VolumeUp","","",22,N],[13,"VolumeDown","","",22,N],[13,"KpComma","","",22,N],[13,"KpEqualsAS400","","",22,N],[13,"AltErase","","",22,N],[13,"Sysreq","","",22,N],[13,"Cancel","","",22,N],[13,"Clear","","",22,N],[13,"Prior","","",22,N],[13,"Return2","","",22,N],[13,"Separator","","",22,N],[13,"Out","","",22,N],[13,"Oper","","",22,N],[13,"ClearAgain","","",22,N],[13,"CrSel","","",22,N],[13,"ExSel","","",22,N],[13,"Kp00","","",22,N],[13,"Kp000","","",22,N],[13,"ThousandsSeparator","","",22,N],[13,"DecimalSeparator","","",22,N],[13,"CurrencyUnit","","",22,N],[13,"CurrencySubUnit","","",22,N],[13,"KpLeftParen","","",22,N],[13,"KpRightParen","","",22,N],[13,"KpLeftBrace","","",22,N],[13,"KpRightBrace","","",22,N],[13,"KpTab","","",22,N],[13,"KpBackspace","","",22,N],[13,"KpA","","",22,N],[13,"KpB","","",22,N],[13,"KpC","","",22,N],[13,"KpD","","",22,N],[13,"KpE","","",22,N],[13,"KpF","","",22,N],[13,"KpXor","","",22,N],[13,"KpPower","","",22,N],[13,"KpPercent","","",22,N],[13,"KpLess","","",22,N],[13,"KpGreater","","",22,N],[13,"KpAmpersand","","",22,N],[13,"KpDblAmpersand","","",22,N],[13,"KpVerticalBar","","",22,N],[13,"KpDblVerticalBar","","",22,N],[13,"KpColon","","",22,N],[13,"KpHash","","",22,N],[13,"KpSpace","","",22,N],[13,"KpAt","","",22,N],[13,"KpExclam","","",22,N],[13,"KpMemStore","","",22,N],[13,"KpMemRecall","","",22,N],[13,"KpMemClear","","",22,N],[13,"KpMemAdd","","",22,N],[13,"KpMemSubtract","","",22,N],[13,"KpMemMultiply","","",22,N],[13,"KpMemDivide","","",22,N],[13,"KpPlusMinus","","",22,N],[13,"KpClear","","",22,N],[13,"KpClearEntry","","",22,N],[13,"KpBinary","","",22,N],[13,"KpOctal","","",22,N],[13,"KpDecimal","","",22,N],[13,"KpHexadecimal","","",22,N],[13,"LCtrl","","",22,N],[13,"LShift","","",22,N],[13,"LAlt","","",22,N],[13,"LGui","","",22,N],[13,"RCtrl","","",22,N],[13,"RShift","","",22,N],[13,"RAlt","","",22,N],[13,"RGui","","",22,N],[13,"Mode","","",22,N],[13,"AudioNext","","",22,N],[13,"AudioPrev","","",22,N],[13,"AudioStop","","",22,N],[13,"AudioPlay","","",22,N],[13,"AudioMute","","",22,N],[13,"MediaSelect","","",22,N],[13,"Www","","",22,N],[13,"Mail","","",22,N],[13,"Calculator","","",22,N],[13,"Computer","","",22,N],[13,"AcSearch","","",22,N],[13,"AcHome","","",22,N],[13,"AcBack","","",22,N],[13,"AcForward","","",22,N],[13,"AcStop","","",22,N],[13,"AcRefresh","","",22,N],[13,"AcBookmarks","","",22,N],[13,"BrightnessDown","","",22,N],[13,"BrightnessUp","","",22,N],[13,"DisplaySwitch","","",22,N],[13,"KbdIllumToggle","","",22,N],[13,"KbdIllumDown","","",22,N],[13,"KbdIllumUp","","",22,N],[13,"Eject","","",22,N],[13,"Sleep","","",22,N],[4,"Scancode","","",N,N],[13,"A","","",23,N],[13,"B","","",23,N],[13,"C","","",23,N],[13,"D","","",23,N],[13,"E","","",23,N],[13,"F","","",23,N],[13,"G","","",23,N],[13,"H","","",23,N],[13,"I","","",23,N],[13,"J","","",23,N],[13,"K","","",23,N],[13,"L","","",23,N],[13,"M","","",23,N],[13,"N","","",23,N],[13,"O","","",23,N],[13,"P","","",23,N],[13,"Q","","",23,N],[13,"R","","",23,N],[13,"S","","",23,N],[13,"T","","",23,N],[13,"U","","",23,N],[13,"V","","",23,N],[13,"W","","",23,N],[13,"X","","",23,N],[13,"Y","","",23,N],[13,"Z","","",23,N],[13,"Num1","","",23,N],[13,"Num2","","",23,N],[13,"Num3","","",23,N],[13,"Num4","","",23,N],[13,"Num5","","",23,N],[13,"Num6","","",23,N],[13,"Num7","","",23,N],[13,"Num8","","",23,N],[13,"Num9","","",23,N],[13,"Num0","","",23,N],[13,"Return","","",23,N],[13,"Escape","","",23,N],[13,"Backspace","","",23,N],[13,"Tab","","",23,N],[13,"Space","","",23,N],[13,"Minus","","",23,N],[13,"Equals","","",23,N],[13,"LeftBracket","","",23,N],[13,"RightBracket","","",23,N],[13,"Backslash","","",23,N],[13,"NonUsHash","","",23,N],[13,"Semicolon","","",23,N],[13,"Apostrophe","","",23,N],[13,"Grave","","",23,N],[13,"Comma","","",23,N],[13,"Period","","",23,N],[13,"Slash","","",23,N],[13,"CapsLock","","",23,N],[13,"F1","","",23,N],[13,"F2","","",23,N],[13,"F3","","",23,N],[13,"F4","","",23,N],[13,"F5","","",23,N],[13,"F6","","",23,N],[13,"F7","","",23,N],[13,"F8","","",23,N],[13,"F9","","",23,N],[13,"F10","","",23,N],[13,"F11","","",23,N],[13,"F12","","",23,N],[13,"PrintScreen","","",23,N],[13,"ScrollLock","","",23,N],[13,"Pause","","",23,N],[13,"Insert","","",23,N],[13,"Home","","",23,N],[13,"PageUp","","",23,N],[13,"Delete","","",23,N],[13,"End","","",23,N],[13,"PageDown","","",23,N],[13,"Right","","",23,N],[13,"Left","","",23,N],[13,"Down","","",23,N],[13,"Up","","",23,N],[13,"NumLockClear","","",23,N],[13,"KpDivide","","",23,N],[13,"KpMultiply","","",23,N],[13,"KpMinus","","",23,N],[13,"KpPlus","","",23,N],[13,"KpEnter","","",23,N],[13,"Kp1","","",23,N],[13,"Kp2","","",23,N],[13,"Kp3","","",23,N],[13,"Kp4","","",23,N],[13,"Kp5","","",23,N],[13,"Kp6","","",23,N],[13,"Kp7","","",23,N],[13,"Kp8","","",23,N],[13,"Kp9","","",23,N],[13,"Kp0","","",23,N],[13,"KpPeriod","","",23,N],[13,"NonUsBackslash","","",23,N],[13,"Application","","",23,N],[13,"Power","","",23,N],[13,"KpEquals","","",23,N],[13,"F13","","",23,N],[13,"F14","","",23,N],[13,"F15","","",23,N],[13,"F16","","",23,N],[13,"F17","","",23,N],[13,"F18","","",23,N],[13,"F19","","",23,N],[13,"F20","","",23,N],[13,"F21","","",23,N],[13,"F22","","",23,N],[13,"F23","","",23,N],[13,"F24","","",23,N],[13,"Execute","","",23,N],[13,"Help","","",23,N],[13,"Menu","","",23,N],[13,"Select","","",23,N],[13,"Stop","","",23,N],[13,"Again","","",23,N],[13,"Undo","","",23,N],[13,"Cut","","",23,N],[13,"Copy","","",23,N],[13,"Paste","","",23,N],[13,"Find","","",23,N],[13,"Mute","","",23,N],[13,"VolumeUp","","",23,N],[13,"VolumeDown","","",23,N],[13,"KpComma","","",23,N],[13,"KpEqualsAS400","","",23,N],[13,"International1","","",23,N],[13,"International2","","",23,N],[13,"International3","","",23,N],[13,"International4","","",23,N],[13,"International5","","",23,N],[13,"International6","","",23,N],[13,"International7","","",23,N],[13,"International8","","",23,N],[13,"International9","","",23,N],[13,"Lang1","","",23,N],[13,"Lang2","","",23,N],[13,"Lang3","","",23,N],[13,"Lang4","","",23,N],[13,"Lang5","","",23,N],[13,"Lang6","","",23,N],[13,"Lang7","","",23,N],[13,"Lang8","","",23,N],[13,"Lang9","","",23,N],[13,"AltErase","","",23,N],[13,"SysReq","","",23,N],[13,"Cancel","","",23,N],[13,"Clear","","",23,N],[13,"Prior","","",23,N],[13,"Return2","","",23,N],[13,"Separator","","",23,N],[13,"Out","","",23,N],[13,"Oper","","",23,N],[13,"ClearAgain","","",23,N],[13,"CrSel","","",23,N],[13,"ExSel","","",23,N],[13,"Kp00","","",23,N],[13,"Kp000","","",23,N],[13,"ThousandsSeparator","","",23,N],[13,"DecimalSeparator","","",23,N],[13,"CurrencyUnit","","",23,N],[13,"CurrencySubUnit","","",23,N],[13,"KpLeftParen","","",23,N],[13,"KpRightParen","","",23,N],[13,"KpLeftBrace","","",23,N],[13,"KpRightBrace","","",23,N],[13,"KpTab","","",23,N],[13,"KpBackspace","","",23,N],[13,"KpA","","",23,N],[13,"KpB","","",23,N],[13,"KpC","","",23,N],[13,"KpD","","",23,N],[13,"KpE","","",23,N],[13,"KpF","","",23,N],[13,"KpXor","","",23,N],[13,"KpPower","","",23,N],[13,"KpPercent","","",23,N],[13,"KpLess","","",23,N],[13,"KpGreater","","",23,N],[13,"KpAmpersand","","",23,N],[13,"KpDblAmpersand","","",23,N],[13,"KpVerticalBar","","",23,N],[13,"KpDblVerticalBar","","",23,N],[13,"KpColon","","",23,N],[13,"KpHash","","",23,N],[13,"KpSpace","","",23,N],[13,"KpAt","","",23,N],[13,"KpExclam","","",23,N],[13,"KpMemStore","","",23,N],[13,"KpMemRecall","","",23,N],[13,"KpMemClear","","",23,N],[13,"KpMemAdd","","",23,N],[13,"KpMemSubtract","","",23,N],[13,"KpMemMultiply","","",23,N],[13,"KpMemDivide","","",23,N],[13,"KpPlusMinus","","",23,N],[13,"KpClear","","",23,N],[13,"KpClearEntry","","",23,N],[13,"KpBinary","","",23,N],[13,"KpOctal","","",23,N],[13,"KpDecimal","","",23,N],[13,"KpHexadecimal","","",23,N],[13,"LCtrl","","",23,N],[13,"LShift","","",23,N],[13,"LAlt","","",23,N],[13,"LGui","","",23,N],[13,"RCtrl","","",23,N],[13,"RShift","","",23,N],[13,"RAlt","","",23,N],[13,"RGui","","",23,N],[13,"Mode","","",23,N],[13,"AudioNext","","",23,N],[13,"AudioPrev","","",23,N],[13,"AudioStop","","",23,N],[13,"AudioPlay","","",23,N],[13,"AudioMute","","",23,N],[13,"MediaSelect","","",23,N],[13,"Www","","",23,N],[13,"Mail","","",23,N],[13,"Calculator","","",23,N],[13,"Computer","","",23,N],[13,"AcSearch","","",23,N],[13,"AcHome","","",23,N],[13,"AcBack","","",23,N],[13,"AcForward","","",23,N],[13,"AcStop","","",23,N],[13,"AcRefresh","","",23,N],[13,"AcBookmarks","","",23,N],[13,"BrightnessDown","","",23,N],[13,"BrightnessUp","","",23,N],[13,"DisplaySwitch","","",23,N],[13,"KbdIllumToggle","","",23,N],[13,"KbdIllumDown","","",23,N],[13,"KbdIllumUp","","",23,N],[13,"Eject","","",23,N],[13,"Sleep","","",23,N],[13,"App1","","",23,N],[13,"App2","","",23,N],[13,"Num","","",23,N],[11,"from_i32","","",22,[[["i32"]],["option",["keycode"]]]],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if there is no corresponding virtual key.",22,[[["scancode"]],["option",["keycode"]]]],[11,"from_name","","",22,[[["str"]],["option",["keycode"]]]],[11,"name","","",22,[[["self"]],["string"]]],[11,"from_i32","","",23,[[["i32"]],["option",["scancode"]]]],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if there is no corresponding scancode.",23,[[["keycode"]],["option",["scancode"]]]],[11,"from_name","","",23,[[["str"]],["option",["scancode"]]]],[11,"name","","",23,[[["self"]],["str"]]],[17,"NOMOD","","",N,N],[17,"LSHIFTMOD","","",N,N],[17,"RSHIFTMOD","","",N,N],[17,"LCTRLMOD","","",N,N],[17,"RCTRLMOD","","",N,N],[17,"LALTMOD","","",N,N],[17,"RALTMOD","","",N,N],[17,"LGUIMOD","","",N,N],[17,"RGUIMOD","","",N,N],[17,"NUMMOD","","",N,N],[17,"CAPSMOD","","",N,N],[17,"MODEMOD","","",N,N],[17,"RESERVEDMOD","","",N,N],[11,"empty","","Returns an empty set of flags.",24,[[],["mod"]]],[11,"all","","Returns the set containing all flags.",24,[[],["mod"]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",24,[[["u16"]],["option",["mod"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",24,[[["u16"]],["mod"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24,[[["self"],["mod"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24,[[["self"],["mod"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["self"],["mod"]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["self"],["mod"]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["self"],["mod"]]]],[11,"new","","",25,[[["eventpump"]],["keyboardstate"]]],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",25,[[["self"],["scancode"]],["bool"]]],[11,"scancodes","","Returns an iterator all scancodes with a boolean indicating if the scancode is pressed.",25,[[["self"]],["scancodeiterator"]]],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",25,[[["self"]],["pressedscancodeiterator"]]],[11,"keyboard","sdl2","",26,[[["self"]],["keyboardutil"]]],[11,"text_input","","",2,[[["self"]],["textinpututil"]]],[11,"focused_window_id","sdl2::keyboard","Gets the id of the window which currently has keyboard focus.",27,[[["self"]],["option",["u32"]]]],[11,"mod_state","","",27,[[["self"]],["mod"]]],[11,"set_mod_state","","",27,[[["self"],["mod"]]]],[11,"start","","",28,[[["self"]]]],[11,"is_active","","",28,[[["self"]],["bool"]]],[11,"stop","","",28,[[["self"]]]],[11,"set_rect","","",28,[[["self"],["rect"]]]],[11,"has_screen_keyboard_support","","",28,[[["self"]],["bool"]]],[11,"is_screen_keyboard_shown","","",28,[[["self"],["window"]],["bool"]]],[0,"mouse","sdl2","",N,N],[3,"RelativeMouseState","sdl2::mouse","",N,N],[3,"Cursor","","",N,N],[3,"MouseState","","",N,N],[3,"MouseButtonIterator","","",N,N],[3,"PressedMouseButtonIterator","","",N,N],[3,"MouseUtil","","Mouse utility functions. Access with `Sdl::mouse()`.",N,N],[4,"SystemCursor","","",N,N],[13,"Arrow","","",29,N],[13,"IBeam","","",29,N],[13,"Wait","","",29,N],[13,"Crosshair","","",29,N],[13,"WaitArrow","","",29,N],[13,"SizeNWSE","","",29,N],[13,"SizeNESW","","",29,N],[13,"SizeWE","","",29,N],[13,"SizeNS","","",29,N],[13,"SizeAll","","",29,N],[13,"No","","",29,N],[13,"Hand","","",29,N],[4,"MouseWheelDirection","","",N,N],[13,"Normal","","",30,N],[13,"Flipped","","",30,N],[13,"Unknown","","",30,N],[4,"MouseButton","","",N,N],[13,"Unknown","","",31,N],[13,"Left","","",31,N],[13,"Middle","","",31,N],[13,"Right","","",31,N],[13,"X1","","",31,N],[13,"X2","","",31,N],[11,"new","","",32,[[["eventpump"]],["relativemousestate"]]],[11,"from_sdl_state","","",32,[[["u32"]],["relativemousestate"]]],[11,"to_sdl_state","","",32,[[["self"]],["u32"]]],[11,"left","","Returns true if the left mouse button is pressed.",32,[[["self"]],["bool"]]],[11,"middle","","Tests if the middle mouse button was pressed.",32,[[["self"]],["bool"]]],[11,"right","","Tests if the right mouse button was pressed.",32,[[["self"]],["bool"]]],[11,"x1","","Tests if the X1 mouse button was pressed.",32,[[["self"]],["bool"]]],[11,"x2","","Tests if the X2 mouse button was pressed.",32,[[["self"]],["bool"]]],[11,"x","","Returns the x coordinate of the state",32,[[["self"]],["i32"]]],[11,"y","","Returns the y coordinate of the state",32,[[["self"]],["i32"]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",32,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",32,[[["self"]],["mousebuttoniterator"]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",32,[[["self"]],["pressedmousebuttoniterator"]]],[11,"new","","",33,N],[11,"from_surface","","",33,[[["s"],["i32"],["i32"]],["result",["cursor","string"]]]],[11,"from_system","","",33,[[["systemcursor"]],["result",["cursor","string"]]]],[11,"set","","",33,[[["self"]]]],[11,"from_ll","","",30,[[["u32"]],["mousewheeldirection"]]],[11,"to_ll","","",30,[[["self"]],["u32"]]],[11,"from_ll","","",31,[[["u8"]],["mousebutton"]]],[11,"new","","",34,[[["eventpump"]],["mousestate"]]],[11,"from_sdl_state","","",34,[[["u32"]],["mousestate"]]],[11,"to_sdl_state","","",34,[[["self"]],["u32"]]],[11,"left","","Returns true if the left mouse button is pressed.",34,[[["self"]],["bool"]]],[11,"middle","","Tests if the middle mouse button was pressed.",34,[[["self"]],["bool"]]],[11,"right","","Tests if the right mouse button was pressed.",34,[[["self"]],["bool"]]],[11,"x1","","Tests if the X1 mouse button was pressed.",34,[[["self"]],["bool"]]],[11,"x2","","Tests if the X2 mouse button was pressed.",34,[[["self"]],["bool"]]],[11,"x","","Returns the x coordinate of the state",34,[[["self"]],["i32"]]],[11,"y","","Returns the y coordinate of the state",34,[[["self"]],["i32"]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",34,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",34,[[["self"]],["mousebuttoniterator"]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",34,[[["self"]],["pressedmousebuttoniterator"]]],[11,"mouse","sdl2","",26,[[["self"]],["mouseutil"]]],[11,"focused_window_id","sdl2::mouse","Gets the id of the window which currently has mouse focus.",35,[[["self"]],["option",["u32"]]]],[11,"warp_mouse_in_window","","",35,[[["self"],["window"],["i32"],["i32"]]]],[11,"set_relative_mouse_mode","","",35,[[["self"],["bool"]]]],[11,"relative_mouse_mode","","",35,[[["self"]],["bool"]]],[11,"is_cursor_showing","","",35,[[["self"]],["bool"]]],[11,"show_cursor","","",35,[[["self"],["bool"]]]],[11,"capture","","",35,[[["self"],["bool"]]]],[0,"rect","sdl2","Rectangles and points.",N,N],[3,"Rect","sdl2::rect","A (non-empty) rectangle.",N,N],[3,"Point","","Immutable point type, consisting of x and y.",N,N],[5,"max_int_value","","The maximal integer value that can be used for rectangles.",N,[[],["u32"]]],[5,"min_int_value","","The minimal integer value that can be used for rectangle positions and points.",N,[[],["i32"]]],[11,"new","","Creates a new rectangle from the given values.",36,[[["i32"],["i32"],["u32"],["u32"]],["rect"]]],[11,"from_center","","Creates a new rectangle centered on the given position.",36,[[["p"],["u32"],["u32"]],["rect"]]],[11,"x","","The horizontal position of this rectangle.",36,[[["self"]],["i32"]]],[11,"y","","The vertical position of this rectangle.",36,[[["self"]],["i32"]]],[11,"width","","The width of this rectangle.",36,[[["self"]],["u32"]]],[11,"height","","The height of this rectangle.",36,[[["self"]],["u32"]]],[11,"size","","Returns the width and height of this rectangle.",36,N],[11,"set_x","","Sets the horizontal position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["i32"]]]],[11,"set_y","","Sets the vertical position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["i32"]]]],[11,"set_width","","Sets the width of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["u32"]]]],[11,"set_height","","Sets the height of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["u32"]]]],[11,"left","","Returns the x-position of the left side of this rectangle.",36,[[["self"]],["i32"]]],[11,"right","","Returns the x-position of the right side of this rectangle.",36,[[["self"]],["i32"]]],[11,"top","","Returns the y-position of the top side of this rectangle.",36,[[["self"]],["i32"]]],[11,"bottom","","Returns the y-position of the bottom side of this rectangle.",36,[[["self"]],["i32"]]],[11,"center","","Returns the center position of this rectangle.",36,[[["self"]],["point"]]],[11,"top_left","","Returns the top-left corner of this rectangle.",36,[[["self"]],["point"]]],[11,"top_right","","Returns the top-right corner of this rectangle.",36,[[["self"]],["point"]]],[11,"bottom_left","","Returns the bottom-left corner of this rectangle.",36,[[["self"]],["point"]]],[11,"bottom_right","","Returns the bottom-right corner of this rectangle.",36,[[["self"]],["point"]]],[11,"set_right","","Sets the position of the right side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["i32"]]]],[11,"set_bottom","","Sets the position of the bottom side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",36,[[["self"],["i32"]]]],[11,"center_on","","Centers the rectangle on the given point.",36,[[["self"],["p"]]]],[11,"offset","","Move this rect and clamp the positions to prevent over/underflow. This also clamps the size to prevent overflow.",36,[[["self"],["i32"],["i32"]]]],[11,"reposition","","Moves this rect to the given position after clamping the values.",36,[[["self"],["p"]]]],[11,"resize","","Resizes this rect to the given size after clamping the values.",36,[[["self"],["u32"],["u32"]]]],[11,"contains","","Checks whether this rect contains a given point, or touches it on the right and/or bottom edges.  This method is deprecated in favor of `Rect::contains_point`.",36,[[["self"],["p"]],["bool"]]],[11,"contains_point","","Checks whether this rectangle contains a given point.",36,[[["self"],["p"]],["bool"]]],[11,"contains_rect","","Checks whether this rectangle completely contains another rectangle.",36,[[["self"],["rect"]],["bool"]]],[11,"raw","","Returns the underlying C Rect.",36,N],[11,"raw_mut","","",36,N],[11,"raw_slice","","",36,N],[11,"from_ll","","",36,[[["sdl_rect"]],["rect"]]],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points. If a clipping rectangle is given, only points that are within it will be considered.",36,N],[11,"has_intersection","","Determines whether two rectangles intersect.",36,[[["self"],["rect"]],["bool"]]],[11,"intersection","","Calculates the intersection of two rectangles.",36,[[["self"],["rect"]],["option",["rect"]]]],[11,"union","","Calculates the union of two rectangles (i.e. the smallest rectangle that contains both).",36,[[["self"],["rect"]],["rect"]]],[11,"intersect_line","","Calculates the intersection of a rectangle and a line segment and returns the points of their intersection.",36,[[["self"],["point"],["point"]],["option"]]],[11,"new","","Creates a new point from the given coordinates.",37,[[["i32"],["i32"]],["point"]]],[11,"from_ll","","",37,[[["sdl_point"]],["point"]]],[11,"raw_slice","","",37,N],[11,"raw","","",37,N],[11,"offset","","Returns a new point by shifting this point's coordinates by the given x and y values.",37,[[["self"],["i32"],["i32"]],["point"]]],[11,"scale","","Returns a new point by multiplying this point's coordinates by the given scale factor.",37,[[["self"],["i32"]],["point"]]],[11,"x","","Returns the x-coordinate of this point.",37,[[["self"]],["i32"]]],[11,"y","","Returns the y-coordinate of this point.",37,[[["self"]],["i32"]]],[0,"surface","sdl2","",N,N],[3,"SurfaceContext","sdl2::surface","Holds a `SDL_Surface`",N,N],[3,"Surface","","Holds a `Rc<SurfaceContext>`.",N,N],[3,"SurfaceRef","","An unsized Surface reference.",N,N],[11,"from_ll","","",38,N],[11,"new","","Creates a new surface using a pixel format.",38,[[["u32"],["u32"],["pixelformatenum"]],["result",["surface","string"]]]],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",38,[[["u32"],["u32"],["pixelmasks"]],["result",["surface","string"]]]],[11,"from_data","","Creates a new surface from an existing buffer, using a pixel format.",38,N],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using pixel masks.",38,N],[11,"load_bmp_rw","","",38,[[["rwops"]],["result",["surface","string"]]]],[11,"load_bmp","","",38,[[["p"]],["result",["surface","string"]]]],[11,"into_canvas","","Creates a Software Canvas to allow rendering in the Surface itself. This `Canvas` will never be accelerated materially, so there is no performance change between `Surface` and `Canvas` coming from a `Surface`.",38,[[["self"]],["result",["canvas","string"]]]],[11,"context","","",38,[[["self"]],["rc",["surfacecontext"]]]],[11,"from_ll","","",39,N],[11,"from_ll_mut","","",39,N],[11,"raw","","",39,N],[11,"width","","",39,[[["self"]],["u32"]]],[11,"height","","",39,[[["self"]],["u32"]]],[11,"pitch","","",39,[[["self"]],["u32"]]],[11,"size","","",39,N],[11,"rect","","",39,[[["self"]],["rect"]]],[11,"pixel_format","","",39,[[["self"]],["pixelformat"]]],[11,"pixel_format_enum","","",39,[[["self"]],["pixelformatenum"]]],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",39,[[["self"],["f"]],["r"]]],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly accessed safely.",39,[[["self"],["f"]],["r"]]],[11,"without_lock","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",39,[[["self"]],["option"]]],[11,"without_lock_mut","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",39,[[["self"]],["option"]]],[11,"must_lock","","Returns true if the Surface needs to be locked before accessing the Surface pixels.",39,[[["self"]],["bool"]]],[11,"save_bmp_rw","","",39,[[["self"],["rwops"]],["result",["string"]]]],[11,"save_bmp","","",39,[[["self"],["p"]],["result",["string"]]]],[11,"set_palette","","",39,[[["self"],["palette"]],["result",["string"]]]],[11,"enable_RLE","","",39,[[["self"]]]],[11,"disable_RLE","","",39,[[["self"]]]],[11,"set_color_key","","",39,[[["self"],["bool"],["color"]],["result",["string"]]]],[11,"color_key","","The function will fail if the surface doesn't have color key enabled.",39,[[["self"]],["result",["color","string"]]]],[11,"set_color_mod","","",39,[[["self"],["color"]]]],[11,"color_mod","","",39,[[["self"]],["color"]]],[11,"fill_rect","","",39,[[["self"],["r"],["color"]],["result",["string"]]]],[11,"fill_rects","","",39,N],[11,"set_alpha_mod","","",39,[[["self"],["u8"]]]],[11,"alpha_mod","","",39,[[["self"]],["u8"]]],[11,"set_blend_mode","","The function will fail if the blend mode is not supported by SDL.",39,[[["self"],["blendmode"]],["result",["string"]]]],[11,"blend_mode","","",39,[[["self"]],["blendmode"]]],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",39,[[["self"],["r"]],["bool"]]],[11,"clip_rect","","Gets the clip rectangle for the surface.",39,[[["self"]],["option",["rect"]]]],[11,"convert","","Copies the surface into a new one that is optimized for blitting to a surface of a specified pixel format.",39,[[["self"],["pixelformat"]],["result",["surface","string"]]]],[11,"blit","","Performs surface blitting (surface copying).",39,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["option","string"]]]],[11,"lower_blit","","Performs low-level surface blitting.",39,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["string"]]]],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",39,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["option","string"]]]],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",39,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["string"]]]],[0,"pixels","sdl2","",N,N],[3,"Palette","sdl2::pixels","",N,N],[3,"Color","","",N,N],[12,"r","","",40,N],[12,"g","","",40,N],[12,"b","","",40,N],[12,"a","","",40,N],[3,"PixelMasks","","",N,N],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",41,N],[12,"rmask","","The red mask",41,N],[12,"gmask","","The green mask",41,N],[12,"bmask","","The blue mask",41,N],[12,"amask","","The alpha mask",41,N],[3,"PixelFormat","","",N,N],[4,"PixelFormatEnum","","",N,N],[13,"Unknown","","",42,N],[13,"Index1LSB","","",42,N],[13,"Index1MSB","","",42,N],[13,"Index4LSB","","",42,N],[13,"Index4MSB","","",42,N],[13,"Index8","","",42,N],[13,"RGB332","","",42,N],[13,"RGB444","","",42,N],[13,"RGB555","","",42,N],[13,"BGR555","","",42,N],[13,"ARGB4444","","",42,N],[13,"RGBA4444","","",42,N],[13,"ABGR4444","","",42,N],[13,"BGRA4444","","",42,N],[13,"ARGB1555","","",42,N],[13,"RGBA5551","","",42,N],[13,"ABGR1555","","",42,N],[13,"BGRA5551","","",42,N],[13,"RGB565","","",42,N],[13,"BGR565","","",42,N],[13,"RGB24","","",42,N],[13,"BGR24","","",42,N],[13,"RGB888","","",42,N],[13,"RGBX8888","","",42,N],[13,"BGR888","","",42,N],[13,"BGRX8888","","",42,N],[13,"ARGB8888","","",42,N],[13,"RGBA8888","","",42,N],[13,"ABGR8888","","",42,N],[13,"BGRA8888","","",42,N],[13,"ARGB2101010","","",42,N],[13,"YV12","","",42,N],[13,"IYUV","","",42,N],[13,"YUY2","","",42,N],[13,"UYVY","","",42,N],[13,"YVYU","","",42,N],[11,"new","","Creates a new, uninitialized palette",43,[[["usize"]],["result",["string"]]]],[11,"with_colors","","Creates a palette from the provided colors",43,N],[11,"len","","",43,[[["self"]],["usize"]]],[11,"is_empty","","",43,[[["self"]],["bool"]]],[11,"raw","","",43,N],[11,"RGB","","",40,[[["u8"],["u8"],["u8"]],["color"]]],[11,"RGBA","","",40,[[["u8"],["u8"],["u8"],["u8"]],["color"]]],[11,"to_u32","","",40,[[["self"],["pixelformat"]],["u32"]]],[11,"from_u32","","",40,[[["pixelformat"],["u32"]],["color"]]],[11,"rgb","","",40,N],[11,"rgba","","",40,N],[11,"raw","","",44,N],[11,"from_ll","","",44,N],[11,"from_masks","","",42,[[["pixelmasks"]],["pixelformatenum"]]],[11,"into_masks","","",42,[[["self"]],["result",["pixelmasks","string"]]]],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given its pitch and height.",42,[[["self"],["usize"],["usize"]],["usize"]]],[11,"byte_size_of_pixels","","",42,[[["self"],["usize"]],["usize"]]],[11,"byte_size_per_pixel","","",42,[[["self"]],["usize"]]],[11,"supports_alpha","","",42,[[["self"]],["bool"]]],[0,"video","sdl2","",N,N],[3,"WindowSurfaceRef","sdl2::video","",N,N],[3,"DisplayMode","","",N,N],[12,"format","","",45,N],[12,"w","","",45,N],[12,"h","","",45,N],[12,"refresh_rate","","",45,N],[3,"GLContext","","",N,N],[3,"WindowContext","","Holds a `SDL_Window`",N,N],[3,"Window","","Represents the \"shell\" of a `Window`.",N,N],[3,"WindowBuilder","","The type that allows you to build windows.",N,N],[3,"DriverIterator","","",N,N],[4,"GLProfile","","",N,N],[13,"Core","","OpenGL core profile - deprecated functions are disabled",46,N],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are allowed",46,N],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL functionality is available",46,N],[13,"Unknown","","Unknown profile - SDL will tend to return 0 if you ask when no particular profile has been defined or requested.",46,N],[4,"FullscreenType","","",N,N],[13,"Off","","",47,N],[13,"True","","",47,N],[13,"Desktop","","",47,N],[4,"WindowPos","","",N,N],[13,"Undefined","","",48,N],[13,"Centered","","",48,N],[13,"Positioned","","",48,N],[4,"SwapInterval","","Represents a setting for vsync/swap interval.",N,N],[13,"Immediate","","",49,N],[13,"VSync","","",49,N],[13,"LateSwapTearing","","",49,N],[4,"WindowBuildError","","",N,N],[13,"HeightOverflows","","",50,N],[13,"WidthOverflows","","",50,N],[13,"InvalidTitle","","",50,N],[13,"SdlError","","",50,N],[5,"drivers","","Gets an iterator of all video drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[0,"gl_attr","","OpenGL context getters and setters",N,N],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with `VideoSubsystem::gl_attr()`.",N,N],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context configuration.",N,N],[3,"ContextFlags","","",N,N],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",2,[[["self"]],["glattr"]]],[11,"set_red_size","sdl2::video::gl_attr","Sets the attribute:  the minimum number of bits for the red channel of the color buffer; defaults to 3",51,[[["self"],["u8"]]]],[11,"red_size","","Gets the attribute:  the minimum number of bits for the red channel of the color buffer; defaults to 3",51,[[["self"]],["u8"]]],[11,"set_green_size","","Sets the attribute:  the minimum number of bits for the green channel of the color buffer; defaults to 3",51,[[["self"],["u8"]]]],[11,"green_size","","Gets the attribute:  the minimum number of bits for the green channel of the color buffer; defaults to 3",51,[[["self"]],["u8"]]],[11,"set_blue_size","","Sets the attribute:  the minimum number of bits for the blue channel of the color buffer; defaults to 2",51,[[["self"],["u8"]]]],[11,"blue_size","","Gets the attribute:  the minimum number of bits for the blue channel of the color buffer; defaults to 2",51,[[["self"]],["u8"]]],[11,"set_alpha_size","","Sets the attribute:  the minimum number of bits for the alpha channel of the color buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"alpha_size","","Gets the attribute:  the minimum number of bits for the alpha channel of the color buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_buffer_size","","Sets the attribute:  the minimum number of bits for frame buffer size; defaults to 0",51,[[["self"],["u8"]]]],[11,"buffer_size","","Gets the attribute:  the minimum number of bits for frame buffer size; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_double_buffer","","Sets the attribute:  whether the output is single or double buffered; defaults to double buffering on",51,[[["self"],["bool"]]]],[11,"double_buffer","","Gets the attribute:  whether the output is single or double buffered; defaults to double buffering on",51,[[["self"]],["bool"]]],[11,"set_depth_size","","Sets the attribute:  the minimum number of bits in the depth buffer; defaults to 16",51,[[["self"],["u8"]]]],[11,"depth_size","","Gets the attribute:  the minimum number of bits in the depth buffer; defaults to 16",51,[[["self"]],["u8"]]],[11,"set_stencil_size","","Sets the attribute:  the minimum number of bits in the stencil buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"stencil_size","","Gets the attribute:  the minimum number of bits in the stencil buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_accum_red_size","","Sets the attribute:  the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"accum_red_size","","Gets the attribute:  the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_accum_green_size","","Sets the attribute:  the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"accum_green_size","","Gets the attribute:  the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_accum_blue_size","","Sets the attribute:  the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"accum_blue_size","","Gets the attribute:  the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_accum_alpha_size","","Sets the attribute:  the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",51,[[["self"],["u8"]]]],[11,"accum_alpha_size","","Gets the attribute:  the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_stereo","","Sets the attribute:  whether the output is stereo 3D; defaults to off",51,[[["self"],["bool"]]]],[11,"stereo","","Gets the attribute:  whether the output is stereo 3D; defaults to off",51,[[["self"]],["bool"]]],[11,"set_multisample_buffers","","Sets the attribute:  the number of buffers used for multisample anti-aliasing; defaults to 0",51,[[["self"],["u8"]]]],[11,"multisample_buffers","","Gets the attribute:  the number of buffers used for multisample anti-aliasing; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_multisample_samples","","Sets the attribute:  the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",51,[[["self"],["u8"]]]],[11,"multisample_samples","","Gets the attribute:  the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",51,[[["self"]],["u8"]]],[11,"set_accelerated_visual","","Sets the attribute:  whether to require hardware acceleration; false to force software rendering; defaults to allow either",51,[[["self"],["bool"]]]],[11,"accelerated_visual","","Gets the attribute:  whether to require hardware acceleration; false to force software rendering; defaults to allow either",51,[[["self"]],["bool"]]],[11,"set_context_major_version","","Sets the attribute:  OpenGL context major version",51,[[["self"],["u8"]]]],[11,"context_major_version","","Gets the attribute:  OpenGL context major version",51,[[["self"]],["u8"]]],[11,"set_context_minor_version","","Sets the attribute:  OpenGL context minor version",51,[[["self"],["u8"]]]],[11,"context_minor_version","","Gets the attribute:  OpenGL context minor version",51,[[["self"]],["u8"]]],[11,"set_context_profile","","Sets the attribute:  type of GL context (Core, Compatibility, ES)",51,[[["self"],["glprofile"]]]],[11,"context_profile","","Gets the attribute:  type of GL context (Core, Compatibility, ES)",51,[[["self"]],["glprofile"]]],[11,"set_share_with_current_context","","Sets the attribute:  OpenGL context sharing; defaults to false",51,[[["self"],["bool"]]]],[11,"share_with_current_context","","Gets the attribute:  OpenGL context sharing; defaults to false",51,[[["self"]],["bool"]]],[11,"set_framebuffer_srgb_compatible","","Sets the attribute:  requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",51,[[["self"],["bool"]]]],[11,"framebuffer_srgb_compatible","","Gets the attribute:  requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",51,[[["self"]],["bool"]]],[11,"set_context_version","","Sets the OpenGL context major and minor versions.",51,[[["self"],["u8"],["u8"]]]],[11,"context_version","","Gets the OpenGL context major and minor versions as a tuple.",51,N],[11,"set","","Finishes the builder and applies the GL context flags to the GL context.",52,[[["self"]]]],[11,"debug","","Sets the context into \"debug\" mode.",52,[[["self"]],["contextflagsbuilder"]]],[11,"forward_compatible","","Sets the context into \"forward compatible\" mode.",52,[[["self"]],["contextflagsbuilder"]]],[11,"robust_access","","",52,[[["self"]],["contextflagsbuilder"]]],[11,"reset_isolation","","",52,[[["self"]],["contextflagsbuilder"]]],[11,"has_debug","","",53,[[["self"]],["bool"]]],[11,"has_forward_compatible","","",53,[[["self"]],["bool"]]],[11,"has_robust_access","","",53,[[["self"]],["bool"]]],[11,"has_reset_isolation","","",53,[[["self"]],["bool"]]],[11,"set_context_flags","","Sets any combination of OpenGL context configuration flags.",51,[[["self"]],["contextflagsbuilder"]]],[11,"context_flags","","Gets the applied OpenGL context configuration flags.",51,[[["self"]],["contextflags"]]],[11,"update_window","sdl2::video","Updates the change made to the inner Surface to the Window it was created from.",54,[[["self"]],["result",["string"]]]],[11,"update_window_rects","","Same as `update_window`, but only update the parts included in `rects` to the Window it was created from.",54,N],[11,"finish","","Gives up this WindowSurfaceRef, allowing to use the window freely again. Before being destroyed, calls `update_window` one last time.",54,[[["self"]],["result",["string"]]]],[11,"new","","",45,[[["pixelformatenum"],["i32"],["i32"],["i32"]],["displaymode"]]],[11,"from_ll","","",45,[[["sdl_displaymode"]],["displaymode"]]],[11,"to_ll","","",45,[[["self"]],["sdl_displaymode"]]],[11,"from_window_flags","","",47,[[["u32"]],["fullscreentype"]]],[11,"is_current","","Returns true if the OpenGL context is the current one in the thread.",55,[[["self"]],["bool"]]],[11,"from_ll","","Unsafe if the `*mut SDL_Window` is used after the `WindowContext` is dropped",56,N],[11,"raw","","",55,[[["self"]],["sdl_glcontext"]]],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method that calls `WindowBuilder::new()`.",2,[[["self"],["str"],["u32"],["u32"]],["windowbuilder"]]],[11,"current_video_driver","","",2,[[["self"]],["str"]]],[11,"num_video_displays","","",2,[[["self"]],["result",["i32","string"]]]],[11,"display_name","","Get the name of the display at the index `display_name`.",2,[[["self"],["i32"]],["result",["string","string"]]]],[11,"display_bounds","","",2,[[["self"],["i32"]],["result",["rect","string"]]]],[11,"num_display_modes","","",2,[[["self"],["i32"]],["result",["i32","string"]]]],[11,"display_mode","","",2,[[["self"],["i32"],["i32"]],["result",["displaymode","string"]]]],[11,"desktop_display_mode","","",2,[[["self"],["i32"]],["result",["displaymode","string"]]]],[11,"current_display_mode","","",2,[[["self"],["i32"]],["result",["displaymode","string"]]]],[11,"closest_display_mode","","",2,[[["self"],["i32"],["displaymode"]],["result",["displaymode","string"]]]],[11,"display_dpi","","Return a triplet `(ddpi, hdpi, vdpi)` containing the diagonal, horizontal and vertical dots/pixels-per-inch of a display",2,[[["self"],["i32"]],["result",["string"]]]],[11,"is_screen_saver_enabled","","",2,[[["self"]],["bool"]]],[11,"enable_screen_saver","","",2,[[["self"]]]],[11,"disable_screen_saver","","",2,[[["self"]]]],[11,"gl_load_library_default","","Loads the default OpenGL library.",2,[[["self"]],["result",["string"]]]],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent OpenGL library name (usually a file path).",2,[[["self"],["p"]],["result",["string"]]]],[11,"gl_unload_library","","Unloads the current OpenGL library.",2,[[["self"]]]],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",2,N],[11,"gl_extension_supported","","",2,[[["self"],["str"]],["bool"]]],[11,"gl_get_current_window_id","","",2,[[["self"]],["result",["u32","string"]]]],[11,"gl_release_current_context","","Releases the thread's current OpenGL context, i.e. sets the current OpenGL context to nothing.",2,[[["self"]],["result",["string"]]]],[11,"gl_set_swap_interval","","",2,[[["self"],["s"]],["bool"]]],[11,"gl_get_swap_interval","","",2,[[["self"]],["swapinterval"]]],[11,"new","sdl2::video","Initializes a new `WindowBuilder`.",57,[[["videosubsystem"],["str"],["u32"],["u32"]],["windowbuilder"]]],[11,"build","","Builds the window.",57,[[["self"]],["result",["window","windowbuilderror"]]]],[11,"window_flags","","Gets the underlying window flags.",57,[[["self"]],["u32"]]],[11,"set_window_flags","","Sets the underlying window flags. This will effectively undo any previous build operations, excluding window size and position.",57,[[["self"],["u32"]],["windowbuilder"]]],[11,"position","","Sets the window position.",57,[[["self"],["i32"],["i32"]],["windowbuilder"]]],[11,"position_centered","","Centers the window.",57,[[["self"]],["windowbuilder"]]],[11,"fullscreen","","Sets the window to fullscreen.",57,[[["self"]],["windowbuilder"]]],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop resolution.",57,[[["self"]],["windowbuilder"]]],[11,"opengl","","Sets the window to be usable with an OpenGL context",57,[[["self"]],["windowbuilder"]]],[11,"vulkan","","Sets the window to be usable with a Vulkan instance",57,[[["self"]],["windowbuilder"]]],[11,"hidden","","Hides the window.",57,[[["self"]],["windowbuilder"]]],[11,"borderless","","Removes the window decoration.",57,[[["self"]],["windowbuilder"]]],[11,"resizable","","Sets the window to be resizable.",57,[[["self"]],["windowbuilder"]]],[11,"minimized","","Minimizes the window.",57,[[["self"]],["windowbuilder"]]],[11,"maximized","","Maximizes the window.",57,[[["self"]],["windowbuilder"]]],[11,"input_grabbed","","Sets the window to have grabbed input focus.",57,[[["self"]],["windowbuilder"]]],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (>= SDL 2.0.1)",57,[[["self"]],["windowbuilder"]]],[11,"raw","","",58,N],[11,"from_ll","","",58,N],[11,"from_ref","","Create a new `Window` without taking ownership of the `WindowContext`",58,[[["rc",["windowcontext"]]],["window"]]],[11,"subsystem","","",58,[[["self"]],["videosubsystem"]]],[11,"into_canvas","","Initializes a new `CanvasBuilder`; a convenience method that calls `CanvasBuilder::new()`.",58,[[["self"]],["canvasbuilder"]]],[11,"context","","",58,[[["self"]],["rc",["windowcontext"]]]],[11,"id","","",58,[[["self"]],["u32"]]],[11,"gl_create_context","","",58,[[["self"]],["result",["glcontext","string"]]]],[11,"gl_set_context_to_current","","Set the window's OpenGL context to the current context on the thread.",58,[[["self"]],["result",["string"]]]],[11,"gl_make_current","","",58,[[["self"],["glcontext"]],["result",["string"]]]],[11,"gl_swap_window","","",58,[[["self"]]]],[11,"display_index","","",58,[[["self"]],["result",["i32","string"]]]],[11,"set_display_mode","","",58,[[["self"],["d"]],["result",["string"]]]],[11,"display_mode","","",58,[[["self"]],["result",["displaymode","string"]]]],[11,"window_pixel_format","","",58,[[["self"]],["pixelformatenum"]]],[11,"window_flags","","",58,[[["self"]],["u32"]]],[11,"set_title","","",58,[[["self"],["str"]],["result",["nulerror"]]]],[11,"title","","",58,[[["self"]],["str"]]],[11,"set_icon","","",58,[[["self"],["s"]]]],[11,"set_position","","",58,[[["self"],["windowpos"],["windowpos"]]]],[11,"position","","",58,N],[11,"set_size","","",58,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"size","","",58,N],[11,"drawable_size","","",58,N],[11,"set_minimum_size","","",58,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"minimum_size","","",58,N],[11,"set_maximum_size","","",58,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"maximum_size","","",58,N],[11,"set_bordered","","",58,[[["self"],["bool"]]]],[11,"show","","",58,[[["self"]]]],[11,"hide","","",58,[[["self"]]]],[11,"raise","","",58,[[["self"]]]],[11,"maximize","","",58,[[["self"]]]],[11,"minimize","","",58,[[["self"]]]],[11,"restore","","",58,[[["self"]]]],[11,"fullscreen_state","","",58,[[["self"]],["fullscreentype"]]],[11,"set_fullscreen","","",58,[[["self"],["fullscreentype"]],["result",["string"]]]],[11,"surface","","Returns a WindowSurfaceRef, which can be used like a regular Surface. This is an alternative way to the Renderer (Canvas) way to modify pixels directly in the Window.",58,[[["self"],["eventpump"]],["result",["windowsurfaceref","string"]]]],[11,"set_grab","","",58,[[["self"],["bool"]]]],[11,"grab","","",58,[[["self"]],["bool"]]],[11,"set_brightness","","",58,[[["self"],["f64"]],["result",["string"]]]],[11,"brightness","","",58,[[["self"]],["f64"]]],[11,"set_gamma_ramp","","",58,[[["self"],["r"],["g"],["b"]],["result",["string"]]]],[11,"gamma_ramp","","",58,[[["self"]],["result",["string"]]]],[0,"timer","sdl2","",N,N],[3,"Timer","sdl2::timer","",N,N],[6,"TimerCallback","","",N,N],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",59,[[["self"],["u32"],["timercallback"]],["timer"]]],[11,"ticks","","Gets the number of milliseconds elapsed since the timer subsystem was initialized.",59,[[["self"]],["u32"]]],[11,"delay","","Sleeps the current thread for the specified amount of milliseconds.",59,[[["self"],["u32"]]]],[11,"performance_counter","","",59,[[["self"]],["u64"]]],[11,"performance_frequency","","",59,[[["self"]],["u64"]]],[11,"into_inner","sdl2::timer","Returns the closure as a trait-object and cancels the timer by consuming it...",60,[[["self"]],["timercallback"]]],[0,"render","sdl2","2D accelerated rendering",N,N],[3,"SdlError","sdl2::render","Contains the description of an error returned by SDL",N,N],[3,"RendererInfo","","A structure that contains information on the capabilities of a render driver or the current render context.",N,N],[12,"name","","",61,N],[12,"flags","","",61,N],[12,"texture_formats","","",61,N],[12,"max_texture_width","","",61,N],[12,"max_texture_height","","",61,N],[3,"RendererContext","","Manages what keeps a `SDL_Renderer` alive",N,N],[3,"Canvas","","Manages and owns a target (`Surface` or `Window`) and allows drawing in it.",N,N],[3,"TextureCreator","","Creates Textures that cannot outlive the creator",N,N],[3,"CanvasBuilder","","The type that allows you to build Window-based renderers.",N,N],[3,"TextureQuery","","",N,N],[12,"format","","",62,N],[12,"access","","",62,N],[12,"width","","",62,N],[12,"height","","",62,N],[3,"Texture","","A texture for a rendering context.",N,N],[3,"DriverIterator","","",N,N],[4,"TargetRenderError","","Possible errors returned by targeting a `Canvas` to render to a `Texture`",N,N],[13,"SdlError","","",63,N],[13,"NotSupported","","",63,N],[4,"TextureAccess","","",N,N],[13,"Static","","",64,N],[13,"Streaming","","",64,N],[13,"Target","","",64,N],[4,"BlendMode","","",N,N],[13,"None","","",65,N],[13,"Blend","","",65,N],[13,"Add","","",65,N],[13,"Mod","","",65,N],[13,"Invalid","","",65,N],[4,"TextureValueError","","",N,N],[13,"WidthOverflows","","",66,N],[13,"HeightOverflows","","",66,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",66,N],[13,"SdlError","","",66,N],[4,"UpdateTextureError","","",N,N],[13,"PitchOverflows","","",67,N],[13,"PitchMustBeMultipleOfTwoForFormat","","",67,N],[13,"XMustBeMultipleOfTwoForFormat","","",67,N],[13,"YMustBeMultipleOfTwoForFormat","","",67,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",67,N],[13,"HeightMustBeMultipleOfTwoForFormat","","",67,N],[13,"SdlError","","",67,N],[4,"UpdateTextureYUVError","","",N,N],[13,"PitchOverflows","","",68,N],[12,"plane","sdl2::render::UpdateTextureYUVError","",68,N],[12,"value","","",68,N],[13,"InvalidPlaneLength","sdl2::render","",68,N],[12,"plane","sdl2::render::UpdateTextureYUVError","",68,N],[12,"length","","",68,N],[12,"pitch","","",68,N],[12,"height","","",68,N],[13,"XMustBeMultipleOfTwoForFormat","sdl2::render","",68,N],[13,"YMustBeMultipleOfTwoForFormat","","",68,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",68,N],[13,"HeightMustBeMultipleOfTwoForFormat","","",68,N],[13,"RectNotInsideTexture","","",68,N],[13,"SdlError","","",68,N],[5,"drivers","","Gets an iterator of all render drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[6,"SurfaceCanvas","","Alias for a `Canvas` that was created out of a `Surface`",N,N],[6,"WindowCanvas","","",N,N],[8,"RenderTarget","","Represents structs which can be the target of a `SDL_Renderer` (or Canvas).",N,N],[16,"Context","","",69,N],[11,"from_ll","","",61,[[["sdl_rendererinfo"]],["rendererinfo"]]],[11,"info","","Gets information about the rendering context.",70,[[["self"]],["rendererinfo"]]],[11,"raw","","Gets the raw pointer to the SDL_Renderer",70,N],[11,"from_ll","","",70,N],[11,"from_surface","","Creates a 2D software rendering context for a surface.",71,[[["surface"]],["result",["string"]]]],[11,"surface","","Gets a reference to the associated surface of the Canvas",71,[[["self"]],["surfaceref"]]],[11,"surface_mut","","Gets a mutable reference to the associated surface of the Canvas",71,[[["self"]],["surfaceref"]]],[11,"into_surface","","Gets the associated surface of the Canvas and destroys the Canvas",71,[[["self"]],["surface"]]],[11,"texture_creator","","Returns a `TextureCreator` that can create Textures to be drawn on this `Canvas`",71,[[["self"]],["texturecreator",["surfacecontext"]]]],[11,"window","","Gets a reference to the associated window of the Canvas",71,[[["self"]],["window"]]],[11,"window_mut","","Gets a mutable reference to the associated window of the Canvas",71,[[["self"]],["window"]]],[11,"into_window","","Gets the associated window of the Canvas and destroys the Canvas",71,[[["self"]],["window"]]],[11,"default_pixel_format","","",71,[[["self"]],["pixelformatenum"]]],[11,"texture_creator","","Returns a `TextureCreator` that can create Textures to be drawn on this `Canvas`",71,[[["self"]],["texturecreator",["windowcontext"]]]],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",71,[[["self"]],["bool"]]],[11,"with_texture_canvas","","Temporarily sets the target of `Canvas` to a `Texture`. This effectively allows rendering to a `Texture` in any way you want: you can make a `Texture` a combination of other `Texture`s, be a complex geometry form with the `gfx` module, ... You can draw pixel by pixel in it if you want, so you can do basically anything with that `Texture`.",71,[[["self"],["texture"],["f"]],["result",["targetrendererror"]]]],[11,"with_multiple_texture_canvas","","Same as `with_texture_canvas`, but allows to change multiple `Texture`s at once with the least amount of overhead. It means that between every iteration the Target is not reset to the source, and that the fact that the Canvas supports render target isn't checked every iteration either; the check is actually only done once, at the beginning, avoiding useless checks.",71,[[["self"],["i"],["f"]],["result",["targetrendererror"]]]],[11,"new","","Initializes a new `CanvasBuilder`.",72,[[["window"]],["canvasbuilder"]]],[11,"build","","Builds the renderer.",72,[[["self"]],["result",["windowcanvas","integerorsdlerror"]]]],[11,"index","","Sets the index of the rendering driver to initialize. If you desire the first rendering driver to support the flags provided, or if you're translating code from C which passes -1 for the index, do not invoke the `index` method.",72,[[["self"],["u32"]],["canvasbuilder"]]],[11,"software","","Set the renderer to a software fallback. This flag is accumulative, and may be specified with other flags.",72,[[["self"]],["canvasbuilder"]]],[11,"accelerated","","Set the renderer to use hardware acceleration. This flag is accumulative, and may be specified with other flags.",72,[[["self"]],["canvasbuilder"]]],[11,"present_vsync","","Synchronize renderer `present` method calls with the refresh rate. This flag is accumulative, and may be specified with other flags.",72,[[["self"]],["canvasbuilder"]]],[11,"target_texture","","Set the renderer to support rendering to a texture. This flag is accumulative, and may be specified with other flags.",72,[[["self"]],["canvasbuilder"]]],[11,"raw","","",73,N],[11,"default_pixel_format","","",73,[[["self"]],["pixelformatenum"]]],[11,"create_texture","","Creates a texture for a rendering context.",73,[[["self"],["f"],["textureaccess"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, width, height)`",73,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, width, height)`",73,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, width, height)`",73,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_from_surface","","Creates a texture from an existing surface.",73,[[["self"],["s"]],["result",["texture","texturevalueerror"]]]],[11,"raw_create_texture","","Create a texture from its raw `SDL_Texture`.",73,N],[11,"raw","","",71,N],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",71,[[["self"],["color"]]]],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",71,[[["self"]],["color"]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",71,[[["self"],["blendmode"]]]],[11,"blend_mode","","Gets the blend mode used for drawing operations.",71,[[["self"]],["blendmode"]]],[11,"clear","","Clears the current rendering target with the drawing color.",71,[[["self"]]]],[11,"present","","Updates the screen with any rendering performed since the previous call.",71,[[["self"]]]],[11,"output_size","","Gets the output size of a rendering context.",71,[[["self"]],["result",["string"]]]],[11,"set_logical_size","","Sets a device independent resolution for rendering.",71,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"logical_size","","Gets device independent resolution for rendering.",71,N],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",71,[[["self"],["r"]]]],[11,"viewport","","Gets the drawing area for the current target.",71,[[["self"]],["rect"]]],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",71,[[["self"],["r"]]]],[11,"clip_rect","","Gets the clip rectangle for the current target.",71,[[["self"]],["option",["rect"]]]],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",71,[[["self"],["f32"],["f32"]],["result",["string"]]]],[11,"scale","","Gets the drawing scale for the current target.",71,N],[11,"draw_point","","Draws a point on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["p"]],["result",["string"]]]],[11,"draw_points","","Draws multiple points on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["p"]],["result",["string"]]]],[11,"draw_line","","Draws a line on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["p1"],["p2"]],["result",["string"]]]],[11,"draw_lines","","Draws a series of connected lines on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["p"]],["result",["string"]]]],[11,"draw_rect","","Draws a rectangle on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["rect"]],["result",["string"]]]],[11,"draw_rects","","Draws some number of rectangles on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,N],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing color. Passing None will fill the entire rendering target. Errors if drawing fails for any reason (e.g. driver failure)",71,[[["self"],["r"]],["result",["string"]]]],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with the drawing color. Errors if drawing fails for any reason (e.g. driver failure)",71,N],[11,"copy","","Copies a portion of the texture to the current rendering target.",71,[[["self"],["texture"],["r1"],["r2"]],["result",["string"]]]],[11,"copy_ex","","Copies a portion of the texture to the current rendering target, optionally rotating it by angle around the given center and also flipping it top-bottom and/or left-right.",71,[[["self"],["texture"],["r1"],["r2"],["f64"],["p"],["bool"],["bool"]],["result",["string"]]]],[11,"read_pixels","","Reads pixels from the current rendering target. # Remarks WARNING: This is a very slow operation, and should not be used frequently.",71,[[["self"],["r"],["pixelformatenum"]],["result",["vec","string"]]]],[11,"query","","Queries the attributes of the texture.",74,[[["self"]],["texturequery"]]],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",74,[[["self"],["u8"],["u8"],["u8"]]]],[11,"color_mod","","Gets the additional color value multiplied into render copy operations.",74,N],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",74,[[["self"],["u8"]]]],[11,"alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",74,[[["self"]],["u8"]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",74,[[["self"],["blendmode"]]]],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",74,[[["self"]],["blendmode"]]],[11,"update","","Updates the given texture rectangle with new pixel data.",74,N],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture with new pixel data.",74,N],[11,"with_lock","","Locks the texture for write-only pixel access. The texture must have been created with streaming access.",74,[[["self"],["r2"],["f"]],["result",["string"]]]],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current context for use with when rendering OpenGL primitives directly.",74,N],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",74,[[["self"]]]],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",74,[[["self"],["f"]],["r"]]],[11,"raw","","",74,N],[0,"rwops","sdl2","",N,N],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream I/O.",N,N],[11,"raw","","",75,N],[11,"from_ll","","",75,N],[11,"from_file","","Creates an SDL file stream.",75,[[["p"],["str"]],["result",["rwops","string"]]]],[11,"from_bytes","","Prepares a read-only memory buffer for use with `RWops`.",75,N],[11,"from_read","","Reads a `Read` object into a buffer and then passes it to `RWops.from_bytes`.",75,[[["t"],["vec"]],["result",["rwops","string"]]]],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with `RWops`.",75,N],[11,"len","","Gets the stream's total size in bytes.",75,[[["self"]],["option",["usize"]]]],[11,"is_empty","","",75,[[["self"]],["bool"]]],[0,"log","sdl2","",N,N],[4,"Category","sdl2::log","",N,N],[13,"Application","","",76,N],[13,"Error","","",76,N],[13,"Assert","","",76,N],[13,"System","","",76,N],[13,"Audio","","",76,N],[13,"Video","","",76,N],[13,"Render","","",76,N],[13,"Input","","",76,N],[13,"Test","","",76,N],[13,"Custom","","",76,N],[13,"Unknown","","",76,N],[4,"Priority","","",N,N],[13,"Verbose","","",77,N],[13,"Debug","","",77,N],[13,"Info","","",77,N],[13,"Warn","","",77,N],[13,"Error","","",77,N],[13,"Critical","","",77,N],[5,"set_output_function","","",N,N],[5,"log","","Standard log function which takes as priority INFO and as category APPLICATION",N,[[["str"]]]],[11,"audio","sdl2","Initializes the audio subsystem.",26,[[["self"]],["result",["audiosubsystem","string"]]]],[11,"event","","Initializes the event subsystem.",26,[[["self"]],["result",["eventsubsystem","string"]]]],[11,"joystick","","Initializes the joystick subsystem.",26,[[["self"]],["result",["joysticksubsystem","string"]]]],[11,"haptic","","Initializes the haptic subsystem.",26,[[["self"]],["result",["hapticsubsystem","string"]]]],[11,"game_controller","","Initializes the game controller subsystem.",26,[[["self"]],["result",["gamecontrollersubsystem","string"]]]],[11,"timer","","Initializes the timer subsystem.",26,[[["self"]],["result",["timersubsystem","string"]]]],[11,"video","","Initializes the video subsystem.",26,[[["self"]],["result",["videosubsystem","string"]]]],[11,"event_pump","","Obtains the SDL event pump.",26,[[["self"]],["result",["eventpump","string"]]]],[11,"sdl","","Obtain an SDL context.",78,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",18,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",20,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",11,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",2,[[["self"]],["sdl"]]],[11,"clone","","",59,[[["self"]],["timersubsystem"]]],[11,"sdl","","Obtain an SDL context.",59,[[["self"]],["sdl"]]],[11,"clone","","",7,[[["self"]],["eventsubsystem"]]],[11,"sdl","","Obtain an SDL context.",7,[[["self"]],["sdl"]]],[0,"audio","","Audio Functions",N,N],[3,"DriverIterator","sdl2::audio","",N,N],[3,"AudioSpecWAV","","",N,N],[12,"freq","","",79,N],[12,"format","","",79,N],[12,"channels","","",79,N],[3,"AudioSpecDesired","","",N,N],[12,"freq","","DSP frequency (samples per second). Set to None for the device's fallback frequency.",80,N],[12,"channels","","Number of separate audio channels. Set to None for the device's fallback number of channels.",80,N],[12,"samples","","Audio buffer size in samples (power of 2). Set to None for the device's fallback sample size.",80,N],[3,"AudioSpec","","",N,N],[12,"freq","","",81,N],[12,"format","","",81,N],[12,"channels","","",81,N],[12,"silence","","",81,N],[12,"samples","","",81,N],[12,"size","","",81,N],[3,"AudioQueue","","Wraps `SDL_AudioDeviceID` and owns the callback data used by the audio device.",N,N],[3,"AudioDevice","","Wraps `SDL_AudioDeviceID` and owns the callback data used by the audio device.",N,N],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`.",N,N],[3,"AudioCVT","","",N,N],[4,"AudioFormat","","",N,N],[13,"U8","","Unsigned 8-bit samples",82,N],[13,"S8","","Signed 8-bit samples",82,N],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",82,N],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",82,N],[13,"S16LSB","","Signed 16-bit samples, little-endian",82,N],[13,"S16MSB","","Signed 16-bit samples, big-endian",82,N],[13,"S32LSB","","Signed 32-bit samples, little-endian",82,N],[13,"S32MSB","","Signed 32-bit samples, big-endian",82,N],[13,"F32LSB","","32-bit floating point samples, little-endian",82,N],[13,"F32MSB","","32-bit floating point samples, big-endian",82,N],[4,"AudioStatus","","",N,N],[13,"Stopped","","",83,N],[13,"Playing","","",83,N],[13,"Paused","","",83,N],[5,"drivers","","Gets an iterator of all audio drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[8,"AudioCallback","","",N,N],[16,"Channel","","",84,N],[10,"callback","","",84,N],[8,"AudioFormatNum","","A phantom type for retreiving the `SDL_AudioFormat` of a given generic type. All format types are returned as native-endian.",N,N],[10,"audio_format","","",85,[[],["audioformat"]]],[10,"zero","","",85,[[],["self"]]],[11,"open_playback","sdl2","Opens a new audio device given the desired parameters and callback.",78,[[["self"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired parameters and callback). Supported since SDL 2.0.5",78,[[["self"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_queue","","Opens a new audio device which uses queueing rather than older callback method.",78,[[["self"],["d"],["audiospecdesired"]],["result",["audioqueue","string"]]]],[11,"current_audio_driver","","",78,[[["self"]],["str"]]],[11,"num_audio_playback_devices","","",78,[[["self"]],["option",["u32"]]]],[11,"audio_playback_device_name","","",78,[[["self"],["u32"]],["result",["string","string"]]]],[11,"u16_sys","sdl2::audio","Unsigned 16-bit samples, native endian",82,[[],["audioformat"]]],[11,"s16_sys","","Signed 16-bit samples, native endian",82,[[],["audioformat"]]],[11,"s32_sys","","Signed 32-bit samples, native endian",82,[[],["audioformat"]]],[11,"f32_sys","","32-bit floating point samples, native endian",82,[[],["audioformat"]]],[11,"load_wav","","Loads a WAVE from the file path.",79,[[["p"]],["result",["audiospecwav","string"]]]],[11,"load_wav_rw","","Loads a WAVE from the data source.",79,[[["rwops"]],["result",["audiospecwav","string"]]]],[11,"buffer","","",79,N],[11,"open_queue","","Opens a new audio device given the desired parameters and callback.",86,[[["audiosubsystem"],["d"],["audiospecdesired"]],["result",["audioqueue","string"]]]],[11,"subsystem","","",86,[[["self"]],["audiosubsystem"]]],[11,"spec","","",86,[[["self"]],["audiospec"]]],[11,"status","","",86,[[["self"]],["audiostatus"]]],[11,"pause","","Pauses playback of the audio device.",86,[[["self"]]]],[11,"resume","","Starts playback of the audio device.",86,[[["self"]]]],[11,"queue","","Adds data to the audio queue.",86,N],[11,"size","","",86,[[["self"]],["u32"]]],[11,"clear","","Clears all data from the current audio queue.",86,[[["self"]]]],[11,"open_playback","","Opens a new audio device for playback (given the desired parameters and callback).",87,[[["audiosubsystem"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired parameters and callback). Supported since SDL 2.0.5",87,[[["audiosubsystem"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"subsystem","","",87,[[["self"]],["audiosubsystem"]]],[11,"spec","","",87,[[["self"]],["audiospec"]]],[11,"status","","",87,[[["self"]],["audiostatus"]]],[11,"pause","","Pauses playback of the audio device.",87,[[["self"]]]],[11,"resume","","Starts playback of the audio device.",87,[[["self"]]]],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",87,[[["self"]],["audiodevicelockguard"]]],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",87,[[["self"]],["cb"]]],[11,"new","","",88,[[["audioformat"],["u8"],["i32"],["audioformat"],["u8"],["i32"]],["result",["audiocvt","string"]]]],[11,"convert","","Convert audio data to a desired audio format.",88,[[["self"],["vec",["u8"]]],["vec",["u8"]]]],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes into `convert()` is unchanged from the result.",88,[[["self"]],["bool"]]],[11,"capacity","","Gets the buffer capacity that can contain both the original and converted data.",88,[[["self"],["usize"]],["usize"]]],[0,"version","sdl2","Querying SDL Version",N,N],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use.",N,N],[12,"major","","major version",89,N],[12,"minor","","minor version",89,N],[12,"patch","","update version (patchlevel)",89,N],[5,"version","","Get the version of SDL that is linked against your program.",N,[[],["version"]]],[5,"revision","","Get the code revision of SDL that is linked against your program.",N,[[],["string"]]],[5,"revision_number","","Get the revision number of SDL that is linked against your program.",N,[[],["i32"]]],[11,"from_ll","","Convert a raw *SDL_version to Version.",89,[[["sdl_version"]],["version"]]],[0,"messagebox","sdl2","",N,N],[3,"MessageBoxFlag","sdl2::messagebox","",N,N],[3,"MessageBoxButtonFlag","","",N,N],[3,"MessageBoxColorScheme","","",N,N],[12,"background","","",90,N],[12,"text","","",90,N],[12,"button_border","","",90,N],[12,"button_background","","",90,N],[12,"button_selected","","",90,N],[3,"ButtonData","","`button_id` is the integer that will be returned by `show_message_box`. It is not sed by SDL2, and should only be used to know which button has been triggered",N,N],[12,"flags","","",91,N],[12,"button_id","","",91,N],[12,"text","","",91,N],[4,"ClickedButton","","",N,N],[13,"CloseButton","","",92,N],[13,"CustomButton","","",92,N],[4,"ShowMessageError","","",N,N],[13,"InvalidTitle","","",93,N],[13,"InvalidMessage","","",93,N],[13,"InvalidButton","","Second argument of the tuple (i32) corresponds to the first button_id having an error",93,N],[13,"SdlError","","",93,N],[5,"show_simple_message_box","","Show a simple message box, meant to be informative only.",N,[[["messageboxflag"],["str"],["str"],["w"]],["result",["showmessageerror"]]]],[5,"show_message_box","","Show a customizable message box.",N,N],[17,"MESSAGEBOX_ERROR","","",N,N],[17,"MESSAGEBOX_WARNING","","",N,N],[17,"MESSAGEBOX_INFORMATION","","",N,N],[17,"MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",N,N],[17,"MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",N,N],[17,"MESSAGEBOX_BUTTON_NOTHING","","",N,N],[11,"empty","","Returns an empty set of flags.",94,[[],["messageboxflag"]]],[11,"all","","Returns the set containing all flags.",94,[[],["messageboxflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",94,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",94,[[["u32"]],["option",["messageboxflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",94,[[["u32"]],["messageboxflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",94,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",94,[[["self"],["messageboxflag"]]]],[11,"remove","","Removes the specified flags in-place.",94,[[["self"],["messageboxflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",94,[[["self"],["messageboxflag"]]]],[11,"empty","","Returns an empty set of flags.",95,[[],["messageboxbuttonflag"]]],[11,"all","","Returns the set containing all flags.",95,[[],["messageboxbuttonflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",95,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",95,[[["u32"]],["option",["messageboxbuttonflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",95,[[["u32"]],["messageboxbuttonflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",95,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"remove","","Removes the specified flags in-place.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",95,[[["self"],["messageboxbuttonflag"]]]],[0,"hint","sdl2","",N,N],[4,"Hint","sdl2::hint","",N,N],[13,"Default","","",96,N],[13,"Normal","","",96,N],[13,"Override","","",96,N],[5,"set_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[["bool"]],["bool"]]],[5,"set_video_minimize_on_focus_lost_with_priority","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[["bool"],["hint"]],["bool"]]],[5,"get_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[],["bool"]]],[5,"set","","",N,[[["str"],["str"]],["bool"]]],[5,"get","","",N,[[["str"]],["option",["string"]]]],[5,"set_with_priority","","",N,[[["str"],["str"],["hint"]],["bool"]]],[11,"from","sdl2","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","sdl2::clipboard","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","sdl2::event","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"into_iter","","",97,[[["self"]],["i"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"into_iter","","",98,[[["self"]],["i"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"into_iter","","",99,[[["self"]],["i"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","sdl2::filesystem","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","sdl2::joystick","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","sdl2::controller","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","sdl2::haptic","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","sdl2::keyboard","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"into_iter","","",100,[[["self"]],["i"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"into_iter","","",101,[[["self"]],["i"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","sdl2::mouse","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"into_iter","","",102,[[["self"]],["i"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"into_iter","","",103,[[["self"]],["i"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","sdl2::rect","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","sdl2::surface","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","sdl2::pixels","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","sdl2::video","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"into_iter","","",105,[[["self"]],["i"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","sdl2::video::gl_attr","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","sdl2::timer","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","sdl2::render","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_string","","",106,[[["self"]],["string"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"into_iter","","",107,[[["self"]],["i"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","sdl2::rwops","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","sdl2::log","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","sdl2::audio","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"into_iter","","",108,[[["self"]],["i"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","sdl2::version","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","sdl2::messagebox","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","sdl2::hint","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"clone","sdl2::event","",4,[[["self"]],["eventtype"]]],[11,"clone","","",5,[[["self"]],["windowevent"]]],[11,"clone","","",6,[[["self"]],["event"]]],[11,"clone","sdl2::joystick","",13,[[["self"]],["guid"]]],[11,"clone","","",10,[[["self"]],["hatstate"]]],[11,"clone","sdl2::controller","",15,[[["self"]],["axis"]]],[11,"clone","","",16,[[["self"]],["button"]]],[11,"clone","","",17,[[["self"]],["mappingstatus"]]],[11,"clone","sdl2::keyboard","",22,[[["self"]],["keycode"]]],[11,"clone","","",23,[[["self"]],["scancode"]]],[11,"clone","","",24,[[["self"]],["mod"]]],[11,"clone","sdl2::mouse","",32,[[["self"]],["relativemousestate"]]],[11,"clone","","",29,[[["self"]],["systemcursor"]]],[11,"clone","","",30,[[["self"]],["mousewheeldirection"]]],[11,"clone","","",31,[[["self"]],["mousebutton"]]],[11,"clone","","",34,[[["self"]],["mousestate"]]],[11,"clone","sdl2::rect","",36,[[["self"]],["rect"]]],[11,"clone","","",37,[[["self"]],["point"]]],[11,"clone","sdl2::pixels","",40,[[["self"]],["color"]]],[11,"clone","","",42,[[["self"]],["pixelformatenum"]]],[11,"clone","sdl2::video","",46,[[["self"]],["glprofile"]]],[11,"clone","","",45,[[["self"]],["displaymode"]]],[11,"clone","","",47,[[["self"]],["fullscreentype"]]],[11,"clone","","",48,[[["self"]],["windowpos"]]],[11,"clone","","",49,[[["self"]],["swapinterval"]]],[11,"clone","","",105,[[["self"]],["driveriterator"]]],[11,"clone","sdl2::render","",64,[[["self"]],["textureaccess"]]],[11,"clone","","",61,[[["self"]],["rendererinfo"]]],[11,"clone","","",65,[[["self"]],["blendmode"]]],[11,"clone","","",62,[[["self"]],["texturequery"]]],[11,"clone","","",107,[[["self"]],["driveriterator"]]],[11,"clone","sdl2::log","",76,[[["self"]],["category"]]],[11,"clone","","",77,[[["self"]],["priority"]]],[11,"clone","sdl2","",0,[[["self"]],["error"]]],[11,"clone","","",26,[[["self"]],["sdl"]]],[11,"clone","","",78,[[["self"]],["audiosubsystem"]]],[11,"clone","","",18,[[["self"]],["gamecontrollersubsystem"]]],[11,"clone","","",20,[[["self"]],["hapticsubsystem"]]],[11,"clone","","",11,[[["self"]],["joysticksubsystem"]]],[11,"clone","","",2,[[["self"]],["videosubsystem"]]],[11,"clone","sdl2::audio","",82,[[["self"]],["audioformat"]]],[11,"clone","","",83,[[["self"]],["audiostatus"]]],[11,"clone","","",108,[[["self"]],["driveriterator"]]],[11,"clone","","",80,[[["self"]],["audiospecdesired"]]],[11,"clone","","",81,[[["self"]],["audiospec"]]],[11,"clone","","",88,[[["self"]],["audiocvt"]]],[11,"clone","sdl2::version","",89,[[["self"]],["version"]]],[11,"clone","sdl2::messagebox","",94,[[["self"]],["messageboxflag"]]],[11,"clone","","",95,[[["self"]],["messageboxbuttonflag"]]],[11,"extend","sdl2::keyboard","",24,[[["self"],["t"]]]],[11,"extend","sdl2::messagebox","",94,[[["self"],["t"]]]],[11,"extend","","",95,[[["self"],["t"]]]],[11,"from","sdl2::rect","",36,[[["sdl_rect"]],["rect"]]],[11,"from","","",36,N],[11,"from","","",37,[[["sdl_point"]],["point"]]],[11,"from","","",37,N],[11,"from","sdl2::pixels","",40,[[["sdl_color"]],["color"]]],[11,"from","","",42,[[["pixelformat"]],["pixelformatenum"]]],[11,"from","sdl2::video","",49,[[["i32"]],["self"]]],[11,"from","","",58,[[["windowcontext"]],["window"]]],[11,"from","sdl2::render","",72,[[["window"]],["canvasbuilder"]]],[11,"from","sdl2::messagebox","",90,[[["sdl_messageboxcolorscheme"]],["messageboxcolorscheme"]]],[11,"drop","sdl2::joystick","",12,[[["self"]]]],[11,"drop","sdl2::controller","",19,[[["self"]]]],[11,"drop","sdl2::haptic","",21,[[["self"]]]],[11,"drop","sdl2::mouse","",33,[[["self"]]]],[11,"drop","sdl2::surface","",104,[[["self"]]]],[11,"drop","sdl2::pixels","",43,[[["self"]]]],[11,"drop","sdl2::video","",55,[[["self"]]]],[11,"drop","","",56,[[["self"]]]],[11,"drop","sdl2::timer","",60,[[["self"]]]],[11,"drop","sdl2::render","",70,[[["self"]]]],[11,"drop","","",74,[[["self"]]]],[11,"drop","sdl2::rwops","",75,[[["self"]]]],[11,"drop","sdl2","",8,[[["self"]]]],[11,"drop","sdl2::audio","",79,[[["self"]]]],[11,"drop","","",109,[[["self"]]]],[11,"into","sdl2::rect","",36,[[["self"]],["sdl_rect"]]],[11,"into","","",36,N],[11,"into","","",37,[[["self"]],["sdl_point"]]],[11,"into","","",37,N],[11,"into","sdl2::pixels","",40,[[["self"]],["sdl_color"]]],[11,"into","","",42,[[["self"]],["uint32_t"]]],[11,"into","sdl2::messagebox","",90,[[["self"]],["sdl_messageboxcolorscheme"]]],[11,"next","sdl2::event","",97,[[["self"]],["option",["event"]]]],[11,"next","","",98,[[["self"]],["option",["event"]]]],[11,"next","","",99,[[["self"]],["option",["event"]]]],[11,"next","sdl2::keyboard","",100,[[["self"]],["option"]]],[11,"next","","",101,[[["self"]],["option",["scancode"]]]],[11,"next","sdl2::mouse","",102,[[["self"]],["option"]]],[11,"next","","",103,[[["self"]],["option",["mousebutton"]]]],[11,"next","sdl2::video","",105,[[["self"]],["option",["str"]]]],[11,"size_hint","","",105,N],[11,"next","sdl2::render","",107,[[["self"]],["option",["rendererinfo"]]]],[11,"size_hint","","",107,N],[11,"next","sdl2::audio","",108,[[["self"]],["option",["str"]]]],[11,"size_hint","","",108,N],[11,"as_ref","sdl2::rect","",36,[[["self"]],["sdl_rect"]]],[11,"as_ref","","",37,[[["self"]],["sdl_point"]]],[11,"as_ref","sdl2::surface","",39,[[["self"]],["surfaceref"]]],[11,"as_ref","","",38,[[["self"]],["surfaceref"]]],[11,"partial_cmp","sdl2::keyboard","",24,[[["self"],["mod"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["mod"]],["bool"]]],[11,"le","","",24,[[["self"],["mod"]],["bool"]]],[11,"gt","","",24,[[["self"],["mod"]],["bool"]]],[11,"ge","","",24,[[["self"],["mod"]],["bool"]]],[11,"partial_cmp","sdl2::messagebox","",94,[[["self"],["messageboxflag"]],["option",["ordering"]]]],[11,"lt","","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"le","","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"gt","","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"ge","","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"partial_cmp","","",95,[[["self"],["messageboxbuttonflag"]],["option",["ordering"]]]],[11,"lt","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"le","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"gt","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"ge","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"as_mut","sdl2::rect","",36,[[["self"]],["sdl_rect"]]],[11,"as_mut","","",37,[[["self"]],["sdl_point"]]],[11,"as_mut","sdl2::surface","",38,[[["self"]],["surfaceref"]]],[11,"eq","sdl2::event","",4,[[["self"],["eventtype"]],["bool"]]],[11,"eq","","",5,[[["self"],["windowevent"]],["bool"]]],[11,"ne","","",5,[[["self"],["windowevent"]],["bool"]]],[11,"eq","","",6,[[["self"],["event"]],["bool"]]],[11,"ne","","",6,[[["self"],["event"]],["bool"]]],[11,"eq","sdl2::joystick","",13,[[["self"],["guid"]],["bool"]]],[11,"eq","","",10,[[["self"],["hatstate"]],["bool"]]],[11,"eq","sdl2::controller","",15,[[["self"],["axis"]],["bool"]]],[11,"eq","","",16,[[["self"],["button"]],["bool"]]],[11,"eq","","",17,[[["self"],["mappingstatus"]],["bool"]]],[11,"eq","sdl2::keyboard","",22,[[["self"],["keycode"]],["bool"]]],[11,"eq","","",23,[[["self"],["scancode"]],["bool"]]],[11,"eq","","",24,[[["self"],["mod"]],["bool"]]],[11,"ne","","",24,[[["self"],["mod"]],["bool"]]],[11,"eq","sdl2::mouse","",32,[[["self"],["relativemousestate"]],["bool"]]],[11,"ne","","",32,[[["self"],["relativemousestate"]],["bool"]]],[11,"eq","","",29,[[["self"],["systemcursor"]],["bool"]]],[11,"eq","","",30,[[["self"],["mousewheeldirection"]],["bool"]]],[11,"ne","","",30,[[["self"],["mousewheeldirection"]],["bool"]]],[11,"eq","","",31,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","","",34,[[["self"],["mousestate"]],["bool"]]],[11,"ne","","",34,[[["self"],["mousestate"]],["bool"]]],[11,"eq","sdl2::rect","",36,[[["self"],["rect"]],["bool"]]],[11,"eq","","",37,[[["self"],["point"]],["bool"]]],[11,"eq","sdl2::pixels","",40,[[["self"],["color"]],["bool"]]],[11,"ne","","",40,[[["self"],["color"]],["bool"]]],[11,"eq","","",42,[[["self"],["pixelformatenum"]],["bool"]]],[11,"eq","sdl2::video","",46,[[["self"],["glprofile"]],["bool"]]],[11,"ne","","",46,[[["self"],["glprofile"]],["bool"]]],[11,"eq","","",45,[[["self"],["displaymode"]],["bool"]]],[11,"ne","","",45,[[["self"],["displaymode"]],["bool"]]],[11,"eq","","",47,[[["self"],["fullscreentype"]],["bool"]]],[11,"eq","","",48,[[["self"],["windowpos"]],["bool"]]],[11,"ne","","",48,[[["self"],["windowpos"]],["bool"]]],[11,"eq","","",49,[[["self"],["swapinterval"]],["bool"]]],[11,"eq","sdl2::render","",64,[[["self"],["textureaccess"]],["bool"]]],[11,"eq","","",61,[[["self"],["rendererinfo"]],["bool"]]],[11,"ne","","",61,[[["self"],["rendererinfo"]],["bool"]]],[11,"eq","","",65,[[["self"],["blendmode"]],["bool"]]],[11,"eq","","",62,[[["self"],["texturequery"]],["bool"]]],[11,"ne","","",62,[[["self"],["texturequery"]],["bool"]]],[11,"eq","sdl2::log","",76,[[["self"],["category"]],["bool"]]],[11,"eq","","",77,[[["self"],["priority"]],["bool"]]],[11,"eq","sdl2","",0,[[["self"],["error"]],["bool"]]],[11,"eq","sdl2::audio","",82,[[["self"],["audioformat"]],["bool"]]],[11,"eq","","",83,[[["self"],["audiostatus"]],["bool"]]],[11,"eq","","",81,[[["self"],["audiospec"]],["bool"]]],[11,"ne","","",81,[[["self"],["audiospec"]],["bool"]]],[11,"eq","sdl2::version","",89,[[["self"],["version"]],["bool"]]],[11,"ne","","",89,[[["self"],["version"]],["bool"]]],[11,"eq","sdl2::messagebox","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"ne","","",94,[[["self"],["messageboxflag"]],["bool"]]],[11,"eq","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"ne","","",95,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"cmp","sdl2::keyboard","",24,[[["self"],["mod"]],["ordering"]]],[11,"cmp","sdl2::messagebox","",94,[[["self"],["messageboxflag"]],["ordering"]]],[11,"cmp","","",95,[[["self"],["messageboxbuttonflag"]],["ordering"]]],[11,"hash","sdl2::event","",4,N],[11,"hash","","",5,N],[11,"hash","sdl2::joystick","",10,N],[11,"hash","sdl2::controller","",15,N],[11,"hash","","",16,N],[11,"hash","","",17,N],[11,"hash","sdl2::keyboard","",22,N],[11,"hash","","",23,N],[11,"hash","","",24,N],[11,"hash","sdl2::mouse","",32,N],[11,"hash","","",29,N],[11,"hash","","",30,N],[11,"hash","","",31,N],[11,"hash","","",34,N],[11,"hash","sdl2::pixels","",40,N],[11,"hash","","",42,N],[11,"hash","sdl2::video","",46,N],[11,"hash","","",45,N],[11,"hash","","",47,N],[11,"hash","","",48,N],[11,"hash","","",49,N],[11,"hash","sdl2::render","",64,N],[11,"hash","","",61,N],[11,"hash","","",65,N],[11,"hash","","",62,N],[11,"hash","sdl2::log","",76,N],[11,"hash","","",77,N],[11,"hash","sdl2","",0,N],[11,"hash","sdl2::audio","",82,N],[11,"hash","","",83,N],[11,"hash","","",81,N],[11,"hash","sdl2::version","",89,N],[11,"hash","sdl2::messagebox","",94,N],[11,"hash","","",95,N],[11,"fmt","sdl2::filesystem","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::joystick","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::controller","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::video","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::render","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::version","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::event","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::filesystem","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::joystick","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::controller","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mouse","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::rect","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::pixels","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::video","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::render","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::log","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::audio","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::version","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",1,[[["self"],["formatter"]],["result"]]],[11,"add","sdl2::rect","",37,[[["self"],["point"]],["point"]]],[11,"sub","sdl2::keyboard","Returns the set difference of the two sets of flags.",24,[[["self"],["mod"]],["mod"]]],[11,"sub","sdl2::rect","",37,[[["self"],["point"]],["point"]]],[11,"sub","sdl2::messagebox","Returns the set difference of the two sets of flags.",94,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",95,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"mul","sdl2::rect","",37,[[["self"],["i32"]],["point"]]],[11,"div","","",37,[[["self"],["i32"]],["point"]]],[11,"neg","","",37,[[["self"]],["point"]]],[11,"sub_assign","sdl2::keyboard","Disables all flags enabled in the set.",24,[[["self"],["mod"]]]],[11,"sub_assign","sdl2::messagebox","Disables all flags enabled in the set.",94,[[["self"],["messageboxflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"not","sdl2::keyboard","Returns the complement of this set of flags.",24,[[["self"]],["mod"]]],[11,"not","sdl2::messagebox","Returns the complement of this set of flags.",94,[[["self"]],["messageboxflag"]]],[11,"not","","Returns the complement of this set of flags.",95,[[["self"]],["messageboxbuttonflag"]]],[11,"bitand","sdl2::keyboard","Returns the intersection between the two sets of flags.",24,[[["self"],["mod"]],["mod"]]],[11,"bitand","sdl2::rect","",36,[[["self"],["rect"]],["option",["rect"]]]],[11,"bitand","sdl2::messagebox","Returns the intersection between the two sets of flags.",94,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",95,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitor","sdl2::keyboard","Returns the union of the two sets of flags.",24,[[["self"],["mod"]],["mod"]]],[11,"bitor","sdl2::rect","",36,[[["self"],["rect"]],["rect"]]],[11,"bitor","sdl2::messagebox","Returns the union of the two sets of flags.",94,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",95,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitxor","sdl2::keyboard","Returns the left flags, but with all the right flags toggled.",24,[[["self"],["mod"]],["mod"]]],[11,"bitxor","sdl2::messagebox","Returns the left flags, but with all the right flags toggled.",94,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitand_assign","sdl2::keyboard","Disables all flags disabled in the set.",24,[[["self"],["mod"]]]],[11,"bitand_assign","sdl2::messagebox","Disables all flags disabled in the set.",94,[[["self"],["messageboxflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"bitor_assign","sdl2::keyboard","Adds the set of flags.",24,[[["self"],["mod"]]]],[11,"bitor_assign","sdl2::messagebox","Adds the set of flags.",94,[[["self"],["messageboxflag"]]]],[11,"bitor_assign","","Adds the set of flags.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"bitxor_assign","sdl2::keyboard","Toggles the set of flags.",24,[[["self"],["mod"]]]],[11,"bitxor_assign","sdl2::messagebox","Toggles the set of flags.",94,[[["self"],["messageboxflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",95,[[["self"],["messageboxbuttonflag"]]]],[11,"deref","sdl2::rect","Example",36,[[["self"]],["sdl_rect"]]],[11,"deref","","Example",37,[[["self"]],["sdl_point"]]],[11,"deref","sdl2::surface","",38,[[["self"]],["surfaceref"]]],[11,"deref","sdl2::video","",54,[[["self"]],["surfaceref"]]],[11,"deref","sdl2::render","",71,[[["self"]],["renderercontext"]]],[11,"deref","sdl2::audio","",109,[[["self"]],["cb"]]],[11,"deref_mut","sdl2::rect","Example",36,[[["self"]],["sdl_rect"]]],[11,"deref_mut","","Example",37,[[["self"]],["sdl_point"]]],[11,"deref_mut","sdl2::surface","",38,[[["self"]],["surfaceref"]]],[11,"deref_mut","sdl2::video","",54,[[["self"]],["surfaceref"]]],[11,"deref_mut","sdl2::audio","",109,[[["self"]],["cb"]]],[11,"from_iter","sdl2::keyboard","",24,[[["t"]],["mod"]]],[11,"from_iter","sdl2::messagebox","",94,[[["t"]],["messageboxflag"]]],[11,"from_iter","","",95,[[["t"]],["messageboxbuttonflag"]]],[11,"seek","sdl2::rwops","",75,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"write","","",75,N],[11,"flush","","",75,[[["self"]],["result"]]],[11,"read","","",75,N],[11,"description","sdl2::filesystem","",9,[[["self"]],["str"]]],[11,"description","sdl2::controller","",14,[[["self"]],["str"]]],[11,"description","sdl2::video","",50,[[["self"]],["str"]]],[11,"description","sdl2::render","",106,[[["self"]],["str"]]],[11,"description","","",63,[[["self"]],["str"]]],[11,"description","","",66,[[["self"]],["str"]]],[11,"description","","",67,[[["self"]],["str"]]],[11,"description","","",68,[[["self"]],["str"]]],[11,"description","sdl2","",0,[[["self"]],["str"]]],[11,"description","sdl2::messagebox","",93,[[["self"]],["str"]]],[11,"description","sdl2","",1,[[["self"]],["str"]]],[11,"from_i64","sdl2::event","",4,[[["i64"]],["option",["eventtype"]]]],[11,"from_u64","","",4,[[["u64"]],["option",["eventtype"]]]],[11,"from_i64","sdl2::pixels","",42,[[["i64"]],["option",["pixelformatenum"]]]],[11,"from_u64","","",42,[[["u64"]],["option",["pixelformatenum"]]]],[11,"from_i64","sdl2::render","",64,[[["i64"]],["option",["textureaccess"]]]],[11,"from_u64","","",64,[[["u64"]],["option",["textureaccess"]]]],[11,"from_i64","","",65,[[["i64"]],["option",["blendmode"]]]],[11,"from_u64","","",65,[[["u64"]],["option",["blendmode"]]]],[11,"from_i64","sdl2::audio","",83,[[["i64"]],["option",["audiostatus"]]]],[11,"from_u64","","",83,[[["u64"]],["option",["audiostatus"]]]],[11,"rand","sdl2::pixels","",40,[[["r"]],["color"]]]],"paths":[[4,"Error"],[4,"IntegerOrSdlError"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEvent"],[4,"Event"],[3,"EventSubsystem"],[3,"EventPump"],[4,"PrefPathError"],[4,"HatState"],[3,"JoystickSubsystem"],[3,"Joystick"],[3,"Guid"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameControllerSubsystem"],[3,"GameController"],[3,"HapticSubsystem"],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"Sdl"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"RelativeMouseState"],[3,"Cursor"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"Color"],[3,"PixelMasks"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[4,"SwapInterval"],[4,"WindowBuildError"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"WindowSurfaceRef"],[3,"GLContext"],[3,"WindowContext"],[3,"WindowBuilder"],[3,"Window"],[3,"TimerSubsystem"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"TargetRenderError"],[4,"TextureAccess"],[4,"BlendMode"],[4,"TextureValueError"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[8,"RenderTarget"],[3,"RendererContext"],[3,"Canvas"],[3,"CanvasBuilder"],[3,"TextureCreator"],[3,"Texture"],[3,"RWops"],[4,"Category"],[4,"Priority"],[3,"AudioSubsystem"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioFormat"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"AudioQueue"],[3,"AudioDevice"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[4,"ShowMessageError"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[4,"Hint"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"SurfaceContext"],[3,"DriverIterator"],[3,"SdlError"],[3,"DriverIterator"],[3,"DriverIterator"],[3,"AudioDeviceLockGuard"]]};
searchIndex["sdl2_sys"]={"doc":"","items":[[3,"__fsid_t","sdl2_sys","",N,N],[12,"__val","","",0,N],[3,"_SDL_iconv_t","","",N,N],[3,"SDL_AssertData","","",N,N],[12,"always_ignore","","",1,N],[12,"trigger_count","","",1,N],[12,"condition","","",1,N],[12,"filename","","",1,N],[12,"linenum","","",1,N],[12,"function","","",1,N],[12,"next","","",1,N],[3,"SDL_atomic_t","","\\brief A type representing an atomic integer value.  It is a struct so people don't accidentally use numeric operations on it.",N,N],[12,"value","","",2,N],[3,"SDL_mutex","","",N,N],[3,"SDL_semaphore","","",N,N],[3,"SDL_cond","","",N,N],[3,"SDL_Thread","","",N,N],[3,"SDL_RWops","","This is the read/write operation structure -- very basic.",N,N],[12,"size","","Return the size of the file in this rwops, or -1 if unknown",3,N],[12,"seek","","Seek to \\c offset relative to \\c whence, one of stdio's whence values: RW_SEEK_SET, RW_SEEK_CUR, RW_SEEK_END",3,N],[12,"read","","Read up to \\c maxnum objects each of size \\c size from the data stream to the area pointed at by \\c ptr.",3,N],[12,"write","","Write exactly \\c num objects each of size \\c size from the area pointed at by \\c ptr to data stream.",3,N],[12,"close","","Close and free an allocated SDL_RWops structure.",3,N],[12,"type_","","",3,N],[12,"hidden","","",3,N],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"base","","",4,N],[12,"here","","",4,N],[12,"stop","","",4,N],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2","","",N,N],[12,"data1","","",5,N],[12,"data2","","",5,N],[3,"SDL_AudioSpec","","The calculated values in this structure are calculated by SDL_OpenAudio().",N,N],[12,"freq","","< DSP frequency -- samples per second",6,N],[12,"format","","< Audio data format",6,N],[12,"channels","","< Number of channels: 1 mono, 2 stereo",6,N],[12,"silence","","< Audio buffer silence value (calculated)",6,N],[12,"samples","","< Audio buffer size in sample FRAMES (total samples divided by channel count)",6,N],[12,"padding","","< Necessary for some compile environments",6,N],[12,"size","","< Audio buffer size in bytes (calculated)",6,N],[12,"callback","","< Callback that feeds the audio device (NULL to use SDL_QueueAudio()).",6,N],[12,"userdata","","< Userdata passed to callback (ignored for NULL callbacks).",6,N],[3,"SDL_AudioCVT","","",N,N],[12,"needed","","< Set to 1 if conversion possible",7,N],[12,"src_format","","< Source audio format",7,N],[12,"dst_format","","< Target audio format",7,N],[12,"rate_incr","","< Rate conversion increment",7,N],[12,"buf","","< Buffer to hold entire audio data",7,N],[12,"len","","< Length of original audio buffer",7,N],[12,"len_cvt","","< Length of converted audio buffer",7,N],[12,"len_mult","","< buffer must be len*len_mult big",7,N],[12,"len_ratio","","< Given len, final size is len*len_ratio",7,N],[12,"filters","","< NULL-terminated list of filter functions",7,N],[12,"filter_index","","< Current audio conversion function",7,N],[3,"div_t","","",N,N],[12,"quot","","",8,N],[12,"rem","","",8,N],[3,"ldiv_t","","",N,N],[12,"quot","","",9,N],[12,"rem","","",9,N],[3,"lldiv_t","","",N,N],[12,"quot","","",10,N],[12,"rem","","",10,N],[3,"__sigset_t","","",N,N],[12,"__val","","",11,N],[3,"timeval","","",N,N],[12,"tv_sec","","",12,N],[12,"tv_usec","","",12,N],[3,"timespec","","",N,N],[12,"tv_sec","","",13,N],[12,"tv_nsec","","",13,N],[3,"fd_set","","",N,N],[12,"__fds_bits","","",14,N],[3,"__pthread_rwlock_arch_t","","",N,N],[12,"__readers","","",15,N],[12,"__writers","","",15,N],[12,"__wrphase_futex","","",15,N],[12,"__writers_futex","","",15,N],[12,"__pad3","","",15,N],[12,"__pad4","","",15,N],[12,"__cur_writer","","",15,N],[12,"__shared","","",15,N],[12,"__rwelision","","",15,N],[12,"__pad1","","",15,N],[12,"__pad2","","",15,N],[12,"__flags","","",15,N],[3,"__pthread_internal_list","","",N,N],[12,"__prev","","",16,N],[12,"__next","","",16,N],[3,"__pthread_mutex_s","","",N,N],[12,"__lock","","",17,N],[12,"__count","","",17,N],[12,"__owner","","",17,N],[12,"__nusers","","",17,N],[12,"__kind","","",17,N],[12,"__spins","","",17,N],[12,"__elision","","",17,N],[12,"__list","","",17,N],[3,"__pthread_cond_s","","",N,N],[12,"__bindgen_anon_1","","",18,N],[12,"__bindgen_anon_2","","",18,N],[12,"__g_refs","","",18,N],[12,"__g_size","","",18,N],[12,"__g1_orig_size","","",18,N],[12,"__wrefs","","",18,N],[12,"__g_signals","","",18,N],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"__low","","",19,N],[12,"__high","","",19,N],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","","",N,N],[12,"__low","","",20,N],[12,"__high","","",20,N],[3,"random_data","","",N,N],[12,"fptr","","",21,N],[12,"rptr","","",21,N],[12,"state","","",21,N],[12,"rand_type","","",21,N],[12,"rand_deg","","",21,N],[12,"rand_sep","","",21,N],[12,"end_ptr","","",21,N],[3,"drand48_data","","",N,N],[12,"__x","","",22,N],[12,"__old_x","","",22,N],[12,"__c","","",22,N],[12,"__init","","",22,N],[12,"__a","","",22,N],[3,"SDL_Color","","",N,N],[12,"r","","",23,N],[12,"g","","",23,N],[12,"b","","",23,N],[12,"a","","",23,N],[3,"SDL_Palette","","",N,N],[12,"ncolors","","",24,N],[12,"colors","","",24,N],[12,"version","","",24,N],[12,"refcount","","",24,N],[3,"SDL_PixelFormat","","\\note Everything in the pixel format structure is read-only.",N,N],[12,"format","","",25,N],[12,"palette","","",25,N],[12,"BitsPerPixel","","",25,N],[12,"BytesPerPixel","","",25,N],[12,"padding","","",25,N],[12,"Rmask","","",25,N],[12,"Gmask","","",25,N],[12,"Bmask","","",25,N],[12,"Amask","","",25,N],[12,"Rloss","","",25,N],[12,"Gloss","","",25,N],[12,"Bloss","","",25,N],[12,"Aloss","","",25,N],[12,"Rshift","","",25,N],[12,"Gshift","","",25,N],[12,"Bshift","","",25,N],[12,"Ashift","","",25,N],[12,"refcount","","",25,N],[12,"next","","",25,N],[3,"SDL_Point","","\\brief  The structure that defines a point",N,N],[12,"x","","",26,N],[12,"y","","",26,N],[3,"SDL_Rect","","\\brief A rectangle, with the origin at the upper left.",N,N],[12,"x","","",27,N],[12,"y","","",27,N],[12,"w","","",27,N],[12,"h","","",27,N],[3,"SDL_Surface","","\\brief A collection of pixels used in software blitting.",N,N],[12,"flags","","< Read-only",28,N],[12,"format","","< Read-only",28,N],[12,"w","","< Read-only",28,N],[12,"h","","< Read-only",28,N],[12,"pitch","","< Read-only",28,N],[12,"pixels","","< Read-write",28,N],[12,"userdata","","< Read-write",28,N],[12,"locked","","< Read-only",28,N],[12,"lock_data","","< Read-only",28,N],[12,"clip_rect","","< Read-only",28,N],[12,"map","","< Private",28,N],[12,"refcount","","< Read-mostly",28,N],[3,"SDL_DisplayMode","","\\brief  The structure that defines a display mode",N,N],[12,"format","","< pixel format",29,N],[12,"w","","< width, in screen coordinates",29,N],[12,"h","","< height, in screen coordinates",29,N],[12,"refresh_rate","","< refresh rate (or zero for unspecified)",29,N],[12,"driverdata","","< driver-specific data, initialize to 0",29,N],[3,"SDL_Window","","",N,N],[3,"SDL_Keysym","","\\brief The SDL keysym structure, used in key events.",N,N],[12,"scancode","","< SDL physical key code - see ::SDL_Scancode for details",30,N],[12,"sym","","< SDL virtual key code - see ::SDL_Keycode for details",30,N],[12,"mod_","","< current key modifiers",30,N],[12,"unused","","",30,N],[3,"SDL_Cursor","","",N,N],[3,"_SDL_Joystick","","",N,N],[3,"SDL_JoystickGUID","","",N,N],[12,"data","","",31,N],[3,"_SDL_GameController","","",N,N],[3,"SDL_GameControllerButtonBind","","Get the SDL joystick layer binding for this controller button/axis mapping",N,N],[12,"bindType","","",32,N],[12,"value","","",32,N],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"hat","","",33,N],[12,"hat_mask","","",33,N],[3,"SDL_Finger","","",N,N],[12,"id","","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[12,"pressure","","",34,N],[3,"SDL_CommonEvent","","\\brief Fields shared by every event",N,N],[12,"type_","","",35,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",35,N],[3,"SDL_WindowEvent","","\\brief Window state change event data (event.window.*)",N,N],[12,"type_","","< ::SDL_WINDOWEVENT",36,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",36,N],[12,"windowID","","< The associated window",36,N],[12,"event","","< ::SDL_WindowEventID",36,N],[12,"padding1","","",36,N],[12,"padding2","","",36,N],[12,"padding3","","",36,N],[12,"data1","","< event dependent data",36,N],[12,"data2","","< event dependent data",36,N],[3,"SDL_KeyboardEvent","","\\brief Keyboard button event structure (event.key.*)",N,N],[12,"type_","","< ::SDL_KEYDOWN or ::SDL_KEYUP",37,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",37,N],[12,"windowID","","< The window with keyboard focus, if any",37,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",37,N],[12,"repeat","","< Non-zero if this is a key repeat",37,N],[12,"padding2","","",37,N],[12,"padding3","","",37,N],[12,"keysym","","< The key that was pressed or released",37,N],[3,"SDL_TextEditingEvent","","\\brief Keyboard text editing event structure (event.edit.*)",N,N],[12,"type_","","< ::SDL_TEXTEDITING",38,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",38,N],[12,"windowID","","< The window with keyboard focus, if any",38,N],[12,"text","","< The editing text",38,N],[12,"start","","< The start cursor of selected editing text",38,N],[12,"length","","< The length of selected editing text",38,N],[3,"SDL_TextInputEvent","","\\brief Keyboard text input event structure (event.text.*)",N,N],[12,"type_","","< ::SDL_TEXTINPUT",39,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",39,N],[12,"windowID","","< The window with keyboard focus, if any",39,N],[12,"text","","< The input text",39,N],[3,"SDL_MouseMotionEvent","","\\brief Mouse motion event structure (event.motion.*)",N,N],[12,"type_","","< ::SDL_MOUSEMOTION",40,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",40,N],[12,"windowID","","< The window with mouse focus, if any",40,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",40,N],[12,"state","","< The current button state",40,N],[12,"x","","< X coordinate, relative to window",40,N],[12,"y","","< Y coordinate, relative to window",40,N],[12,"xrel","","< The relative motion in the X direction",40,N],[12,"yrel","","< The relative motion in the Y direction",40,N],[3,"SDL_MouseButtonEvent","","\\brief Mouse button event structure (event.button.*)",N,N],[12,"type_","","< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP",41,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",41,N],[12,"windowID","","< The window with mouse focus, if any",41,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",41,N],[12,"button","","< The mouse button index",41,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",41,N],[12,"clicks","","< 1 for single-click, 2 for double-click, etc.",41,N],[12,"padding1","","",41,N],[12,"x","","< X coordinate, relative to window",41,N],[12,"y","","< Y coordinate, relative to window",41,N],[3,"SDL_MouseWheelEvent","","\\brief Mouse wheel event structure (event.wheel.*)",N,N],[12,"type_","","< ::SDL_MOUSEWHEEL",42,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",42,N],[12,"windowID","","< The window with mouse focus, if any",42,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",42,N],[12,"x","","< The amount scrolled horizontally, positive to the right and negative to the left",42,N],[12,"y","","< The amount scrolled vertically, positive away from the user and negative toward the user",42,N],[12,"direction","","< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the values in X and Y will be opposite. Multiply by -1 to change them back",42,N],[3,"SDL_JoyAxisEvent","","\\brief Joystick axis motion event structure (event.jaxis.*)",N,N],[12,"type_","","< ::SDL_JOYAXISMOTION",43,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",43,N],[12,"which","","< The joystick instance id",43,N],[12,"axis","","< The joystick axis index",43,N],[12,"padding1","","",43,N],[12,"padding2","","",43,N],[12,"padding3","","",43,N],[12,"value","","< The axis value (range: -32768 to 32767)",43,N],[12,"padding4","","",43,N],[3,"SDL_JoyBallEvent","","\\brief Joystick trackball motion event structure (event.jball.*)",N,N],[12,"type_","","< ::SDL_JOYBALLMOTION",44,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",44,N],[12,"which","","< The joystick instance id",44,N],[12,"ball","","< The joystick trackball index",44,N],[12,"padding1","","",44,N],[12,"padding2","","",44,N],[12,"padding3","","",44,N],[12,"xrel","","< The relative motion in the X direction",44,N],[12,"yrel","","< The relative motion in the Y direction",44,N],[3,"SDL_JoyHatEvent","","\\brief Joystick hat position change event structure (event.jhat.*)",N,N],[12,"type_","","< ::SDL_JOYHATMOTION",45,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",45,N],[12,"which","","< The joystick instance id",45,N],[12,"hat","","< The joystick hat index",45,N],[12,"value","","< The hat position value. \\sa ::SDL_HAT_LEFTUP ::SDL_HAT_UP ::SDL_HAT_RIGHTUP \\sa ::SDL_HAT_LEFT ::SDL_HAT_CENTERED ::SDL_HAT_RIGHT \\sa ::SDL_HAT_LEFTDOWN ::SDL_HAT_DOWN ::SDL_HAT_RIGHTDOWN",45,N],[12,"padding1","","",45,N],[12,"padding2","","",45,N],[3,"SDL_JoyButtonEvent","","\\brief Joystick button event structure (event.jbutton.*)",N,N],[12,"type_","","< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP",46,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",46,N],[12,"which","","< The joystick instance id",46,N],[12,"button","","< The joystick button index",46,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",46,N],[12,"padding1","","",46,N],[12,"padding2","","",46,N],[3,"SDL_JoyDeviceEvent","","\\brief Joystick device event structure (event.jdevice.*)",N,N],[12,"type_","","< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED",47,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",47,N],[12,"which","","< The joystick device index for the ADDED event, instance id for the REMOVED event",47,N],[3,"SDL_ControllerAxisEvent","","\\brief Game controller axis motion event structure (event.caxis.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERAXISMOTION",48,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",48,N],[12,"which","","< The joystick instance id",48,N],[12,"axis","","< The controller axis (SDL_GameControllerAxis)",48,N],[12,"padding1","","",48,N],[12,"padding2","","",48,N],[12,"padding3","","",48,N],[12,"value","","< The axis value (range: -32768 to 32767)",48,N],[12,"padding4","","",48,N],[3,"SDL_ControllerButtonEvent","","\\brief Game controller button event structure (event.cbutton.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP",49,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",49,N],[12,"which","","< The joystick instance id",49,N],[12,"button","","< The controller button (SDL_GameControllerButton)",49,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",49,N],[12,"padding1","","",49,N],[12,"padding2","","",49,N],[3,"SDL_ControllerDeviceEvent","","\\brief Controller device event structure (event.cdevice.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::SDL_CONTROLLERDEVICEREMAPPED",50,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",50,N],[12,"which","","< The joystick device index for the ADDED event, instance id for the REMOVED or REMAPPED event",50,N],[3,"SDL_AudioDeviceEvent","","\\brief Audio device event structure (event.adevice.*)",N,N],[12,"type_","","< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED",51,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",51,N],[12,"which","","< The audio device index for the ADDED event (valid until next SDL_GetNumAudioDevices() call), SDL_AudioDeviceID for the REMOVED event",51,N],[12,"iscapture","","< zero if an output device, non-zero if a capture device.",51,N],[12,"padding1","","",51,N],[12,"padding2","","",51,N],[12,"padding3","","",51,N],[3,"SDL_TouchFingerEvent","","\\brief Touch finger event structure (event.tfinger.*)",N,N],[12,"type_","","< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP",52,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",52,N],[12,"touchId","","< The touch device id",52,N],[12,"fingerId","","",52,N],[12,"x","","< Normalized in the range 0...1",52,N],[12,"y","","< Normalized in the range 0...1",52,N],[12,"dx","","< Normalized in the range -1...1",52,N],[12,"dy","","< Normalized in the range -1...1",52,N],[12,"pressure","","< Normalized in the range 0...1",52,N],[3,"SDL_MultiGestureEvent","","\\brief Multiple Finger Gesture Event (event.mgesture.*)",N,N],[12,"type_","","< ::SDL_MULTIGESTURE",53,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",53,N],[12,"touchId","","< The touch device id",53,N],[12,"dTheta","","",53,N],[12,"dDist","","",53,N],[12,"x","","",53,N],[12,"y","","",53,N],[12,"numFingers","","",53,N],[12,"padding","","",53,N],[3,"SDL_DollarGestureEvent","","\\brief Dollar Gesture Event (event.dgesture.*)",N,N],[12,"type_","","< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD",54,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",54,N],[12,"touchId","","< The touch device id",54,N],[12,"gestureId","","",54,N],[12,"numFingers","","",54,N],[12,"error","","",54,N],[12,"x","","< Normalized center of gesture",54,N],[12,"y","","< Normalized center of gesture",54,N],[3,"SDL_DropEvent","","\\brief An event used to request a file open by the system (event.drop.*) This event is enabled by default, you can disable it with SDL_EventState(). \\note If this event is enabled, you must free the filename in the event.",N,N],[12,"type_","","< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPCOMPLETE",55,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",55,N],[12,"file","","< The file name, which should be freed with SDL_free(), is NULL on begin/complete",55,N],[12,"windowID","","< The window that was dropped on, if any",55,N],[3,"SDL_QuitEvent","","\\brief The \"quit requested\" event",N,N],[12,"type_","","< ::SDL_QUIT",56,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",56,N],[3,"SDL_OSEvent","","\\brief OS Specific event",N,N],[12,"type_","","< ::SDL_QUIT",57,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",57,N],[3,"SDL_UserEvent","","\\brief A user-defined event type (event.user.*)",N,N],[12,"type_","","< ::SDL_USEREVENT through ::SDL_LASTEVENT-1",58,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",58,N],[12,"windowID","","< The associated window if any",58,N],[12,"code","","< User defined event code",58,N],[12,"data1","","< User defined data pointer",58,N],[12,"data2","","< User defined data pointer",58,N],[3,"SDL_SysWMmsg","","",N,N],[3,"SDL_SysWMEvent","","\\brief A video driver dependent system event (event.syswm.*) This event is disabled by default, you can enable it with SDL_EventState()",N,N],[12,"type_","","< ::SDL_SYSWMEVENT",59,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",59,N],[12,"msg","","< driver dependent data, defined in SDL_syswm.h",59,N],[3,"_SDL_Haptic","","",N,N],[3,"SDL_HapticDirection","","\\brief Structure that represents a haptic direction.",N,N],[12,"type_","","< The type of encoding.",60,N],[12,"dir","","< The encoded direction.",60,N],[3,"SDL_HapticConstant","","\\brief A structure containing a template for a Constant effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_CONSTANT",61,N],[12,"direction","","< Direction of the effect.",61,N],[12,"length","","< Duration of the effect.",61,N],[12,"delay","","< Delay before starting the effect.",61,N],[12,"button","","< Button that triggers the effect.",61,N],[12,"interval","","< How soon it can be triggered again after button.",61,N],[12,"level","","< Strength of the constant effect.",61,N],[12,"attack_length","","< Duration of the attack.",61,N],[12,"attack_level","","< Level at the start of the attack.",61,N],[12,"fade_length","","< Duration of the fade.",61,N],[12,"fade_level","","< Level at the end of the fade.",61,N],[3,"SDL_HapticPeriodic","","\\brief A structure containing a template for a Periodic effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, ::SDL_HAPTIC_TRIANGLE, ::SDL_HAPTIC_SAWTOOTHUP or ::SDL_HAPTIC_SAWTOOTHDOWN",62,N],[12,"direction","","< Direction of the effect.",62,N],[12,"length","","< Duration of the effect.",62,N],[12,"delay","","< Delay before starting the effect.",62,N],[12,"button","","< Button that triggers the effect.",62,N],[12,"interval","","< How soon it can be triggered again after button.",62,N],[12,"period","","< Period of the wave.",62,N],[12,"magnitude","","< Peak value; if negative, equivalent to 180 degrees extra phase shift.",62,N],[12,"offset","","< Mean value of the wave.",62,N],[12,"phase","","< Positive phase shift given by hundredth of a degree.",62,N],[12,"attack_length","","< Duration of the attack.",62,N],[12,"attack_level","","< Level at the start of the attack.",62,N],[12,"fade_length","","< Duration of the fade.",62,N],[12,"fade_level","","< Level at the end of the fade.",62,N],[3,"SDL_HapticCondition","","\\brief A structure containing a template for a Condition effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, ::SDL_HAPTIC_INERTIA or ::SDL_HAPTIC_FRICTION",63,N],[12,"direction","","< Direction of the effect - Not used ATM.",63,N],[12,"length","","< Duration of the effect.",63,N],[12,"delay","","< Delay before starting the effect.",63,N],[12,"button","","< Button that triggers the effect.",63,N],[12,"interval","","< How soon it can be triggered again after button.",63,N],[12,"right_sat","","< Level when joystick is to the positive side; max 0xFFFF.",63,N],[12,"left_sat","","< Level when joystick is to the negative side; max 0xFFFF.",63,N],[12,"right_coeff","","< How fast to increase the force towards the positive side.",63,N],[12,"left_coeff","","< How fast to increase the force towards the negative side.",63,N],[12,"deadband","","< Size of the dead zone; max 0xFFFF: whole axis-range when 0-centered.",63,N],[12,"center","","< Position of the dead zone.",63,N],[3,"SDL_HapticRamp","","\\brief A structure containing a template for a Ramp effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_RAMP",64,N],[12,"direction","","< Direction of the effect.",64,N],[12,"length","","< Duration of the effect.",64,N],[12,"delay","","< Delay before starting the effect.",64,N],[12,"button","","< Button that triggers the effect.",64,N],[12,"interval","","< How soon it can be triggered again after button.",64,N],[12,"start","","< Beginning strength level.",64,N],[12,"end","","< Ending strength level.",64,N],[12,"attack_length","","< Duration of the attack.",64,N],[12,"attack_level","","< Level at the start of the attack.",64,N],[12,"fade_length","","< Duration of the fade.",64,N],[12,"fade_level","","< Level at the end of the fade.",64,N],[3,"SDL_HapticLeftRight","","\\brief A structure containing a template for a Left/Right effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_LEFTRIGHT",65,N],[12,"length","","< Duration of the effect.",65,N],[12,"large_magnitude","","< Control of the large controller motor.",65,N],[12,"small_magnitude","","< Control of the small controller motor.",65,N],[3,"SDL_HapticCustom","","\\brief A structure containing a template for the ::SDL_HAPTIC_CUSTOM effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_CUSTOM",66,N],[12,"direction","","< Direction of the effect.",66,N],[12,"length","","< Duration of the effect.",66,N],[12,"delay","","< Delay before starting the effect.",66,N],[12,"button","","< Button that triggers the effect.",66,N],[12,"interval","","< How soon it can be triggered again after button.",66,N],[12,"channels","","< Axes to use, minimum of one.",66,N],[12,"period","","< Sample periods.",66,N],[12,"samples","","< Amount of samples.",66,N],[12,"data","","< Should contain channels*samples items.",66,N],[12,"attack_length","","< Duration of the attack.",66,N],[12,"attack_level","","< Level at the start of the attack.",66,N],[12,"fade_length","","< Duration of the fade.",66,N],[12,"fade_level","","< Level at the end of the fade.",66,N],[3,"SDL_MessageBoxButtonData","","\\brief Individual button data.",N,N],[12,"flags","","< ::SDL_MessageBoxButtonFlags",67,N],[12,"buttonid","","< User defined button id (value returned via SDL_ShowMessageBox)",67,N],[12,"text","","< The UTF-8 button text",67,N],[3,"SDL_MessageBoxColor","","\\brief RGB value used in a message box color scheme",N,N],[12,"r","","",68,N],[12,"g","","",68,N],[12,"b","","",68,N],[3,"SDL_MessageBoxColorScheme","","\\brief A set of colors to use for message box dialogs",N,N],[12,"colors","","",69,N],[3,"SDL_MessageBoxData","","\\brief MessageBox structure containing title, text, window, etc.",N,N],[12,"flags","","< ::SDL_MessageBoxFlags",70,N],[12,"window","","< Parent window, can be NULL",70,N],[12,"title","","< UTF-8 title",70,N],[12,"message","","< UTF-8 message text",70,N],[12,"numbuttons","","",70,N],[12,"buttons","","",70,N],[12,"colorScheme","","< ::SDL_MessageBoxColorScheme, can be NULL to use system settings",70,N],[3,"SDL_RendererInfo","","\\brief Information on the capabilities of a render driver or context.",N,N],[12,"name","","< The name of the renderer",71,N],[12,"flags","","< Supported ::SDL_RendererFlags",71,N],[12,"num_texture_formats","","< The number of available texture formats",71,N],[12,"texture_formats","","< The available texture formats",71,N],[12,"max_texture_width","","< The maximum texture width",71,N],[12,"max_texture_height","","< The maximum texture height",71,N],[3,"SDL_Renderer","","",N,N],[3,"SDL_Texture","","",N,N],[3,"SDL_WindowShapeMode","","\\brief A struct that tags the SDL_WindowShapeParams union with an enum describing the type of its contents.",N,N],[12,"mode","","\\brief The mode of these window-shape parameters.",72,N],[12,"parameters","","\\brief Window-shape parameters.",72,N],[3,"SDL_version","","\\brief Information the version of SDL in use.",N,N],[12,"major","","< major version",73,N],[12,"minor","","< minor version",73,N],[12,"patch","","< update version",73,N],[3,"__va_list_tag","","",N,N],[12,"gp_offset","","",74,N],[12,"fp_offset","","",74,N],[12,"overflow_arg_area","","",74,N],[12,"reg_save_area","","",74,N],[3,"SDL_BlitMap","","< Private",N,N],[12,"_address","","",75,N],[19,"SDL_RWops__bindgen_ty_1","","",N,N],[12,"mem","","",76,N],[12,"unknown","","",76,N],[19,"__pthread_cond_s__bindgen_ty_1","","",N,N],[12,"__wseq","","",77,N],[12,"__wseq32","","",77,N],[19,"__pthread_cond_s__bindgen_ty_2","","",N,N],[12,"__g1_start","","",78,N],[12,"__g1_start32","","",78,N],[19,"pthread_mutexattr_t","","",N,N],[12,"__size","","",79,N],[12,"__align","","",79,N],[19,"pthread_condattr_t","","",N,N],[12,"__size","","",80,N],[12,"__align","","",80,N],[19,"pthread_attr_t","","",N,N],[12,"__size","","",81,N],[12,"__align","","",81,N],[19,"pthread_mutex_t","","",N,N],[12,"__data","","",82,N],[12,"__size","","",82,N],[12,"__align","","",82,N],[19,"pthread_cond_t","","",N,N],[12,"__data","","",83,N],[12,"__size","","",83,N],[12,"__align","","",83,N],[19,"pthread_rwlock_t","","",N,N],[12,"__data","","",84,N],[12,"__size","","",84,N],[12,"__align","","",84,N],[19,"pthread_rwlockattr_t","","",N,N],[12,"__size","","",85,N],[12,"__align","","",85,N],[19,"pthread_barrier_t","","",N,N],[12,"__size","","",86,N],[12,"__align","","",86,N],[19,"pthread_barrierattr_t","","",N,N],[12,"__size","","",87,N],[12,"__align","","",87,N],[19,"SDL_GameControllerButtonBind__bindgen_ty_1","","",N,N],[12,"button","","",88,N],[12,"axis","","",88,N],[12,"hat","","",88,N],[19,"SDL_Event","","\\brief General event structure",N,N],[12,"type_","","< Event type, shared with all events",89,N],[12,"common","","< Common event data",89,N],[12,"window","","< Window event data",89,N],[12,"key","","< Keyboard event data",89,N],[12,"edit","","< Text editing event data",89,N],[12,"text","","< Text input event data",89,N],[12,"motion","","< Mouse motion event data",89,N],[12,"button","","< Mouse button event data",89,N],[12,"wheel","","< Mouse wheel event data",89,N],[12,"jaxis","","< Joystick axis event data",89,N],[12,"jball","","< Joystick ball event data",89,N],[12,"jhat","","< Joystick hat event data",89,N],[12,"jbutton","","< Joystick button event data",89,N],[12,"jdevice","","< Joystick device change event data",89,N],[12,"caxis","","< Game Controller axis event data",89,N],[12,"cbutton","","< Game Controller button event data",89,N],[12,"cdevice","","< Game Controller device event data",89,N],[12,"adevice","","< Audio device event data",89,N],[12,"quit","","< Quit request event data",89,N],[12,"user","","< Custom event data",89,N],[12,"syswm","","< System dependent window event data",89,N],[12,"tfinger","","< Touch finger event data",89,N],[12,"mgesture","","< Gesture event data",89,N],[12,"dgesture","","< Gesture event data",89,N],[12,"drop","","< Drag and drop event data",89,N],[12,"padding","","",89,N],[19,"SDL_HapticEffect","","\\brief The generic template for any haptic effect.",N,N],[12,"type_","","< Effect type.",90,N],[12,"constant","","< Constant effect.",90,N],[12,"periodic","","< Periodic effect.",90,N],[12,"condition","","< Condition effect.",90,N],[12,"ramp","","< Ramp effect.",90,N],[12,"leftright","","< Left/Right effect.",90,N],[12,"custom","","< Custom effect.",90,N],[19,"SDL_WindowShapeParams","","\\brief A union containing parameters for shaped windows.",N,N],[12,"binarizationCutoff","","\\brief A cutoff alpha value for binarization of the window shape's alpha channel.",91,N],[12,"colorKey","","",91,N],[4,"SDL_bool","","",N,N],[13,"SDL_FALSE","","",92,N],[13,"SDL_TRUE","","",92,N],[4,"SDL_DUMMY_ENUM","","",N,N],[13,"DUMMY_ENUM_VALUE","","",93,N],[4,"SDL_AssertState","","",N,N],[13,"SDL_ASSERTION_RETRY","","",94,N],[13,"SDL_ASSERTION_BREAK","","",94,N],[13,"SDL_ASSERTION_ABORT","","",94,N],[13,"SDL_ASSERTION_IGNORE","","",94,N],[13,"SDL_ASSERTION_ALWAYS_IGNORE","","",94,N],[4,"SDL_errorcode","","",N,N],[13,"SDL_ENOMEM","","",95,N],[13,"SDL_EFREAD","","",95,N],[13,"SDL_EFWRITE","","",95,N],[13,"SDL_EFSEEK","","",95,N],[13,"SDL_UNSUPPORTED","","",95,N],[13,"SDL_LASTERROR","","",95,N],[4,"SDL_ThreadPriority","","The SDL thread priority.",N,N],[13,"SDL_THREAD_PRIORITY_LOW","","",96,N],[13,"SDL_THREAD_PRIORITY_NORMAL","","",96,N],[13,"SDL_THREAD_PRIORITY_HIGH","","",96,N],[4,"SDL_AudioStatus","","",N,N],[13,"SDL_AUDIO_STOPPED","","",97,N],[13,"SDL_AUDIO_PLAYING","","",97,N],[13,"SDL_AUDIO_PAUSED","","",97,N],[4,"_bindgen_ty_1","","Pixel type.",N,N],[13,"SDL_PIXELTYPE_UNKNOWN","","",98,N],[13,"SDL_PIXELTYPE_INDEX1","","",98,N],[13,"SDL_PIXELTYPE_INDEX4","","",98,N],[13,"SDL_PIXELTYPE_INDEX8","","",98,N],[13,"SDL_PIXELTYPE_PACKED8","","",98,N],[13,"SDL_PIXELTYPE_PACKED16","","",98,N],[13,"SDL_PIXELTYPE_PACKED32","","",98,N],[13,"SDL_PIXELTYPE_ARRAYU8","","",98,N],[13,"SDL_PIXELTYPE_ARRAYU16","","",98,N],[13,"SDL_PIXELTYPE_ARRAYU32","","",98,N],[13,"SDL_PIXELTYPE_ARRAYF16","","",98,N],[13,"SDL_PIXELTYPE_ARRAYF32","","",98,N],[4,"_bindgen_ty_2","","Bitmap pixel order, high bit -> low bit.",N,N],[13,"SDL_BITMAPORDER_NONE","","",99,N],[13,"SDL_BITMAPORDER_4321","","",99,N],[13,"SDL_BITMAPORDER_1234","","",99,N],[4,"_bindgen_ty_3","","Packed component order, high bit -> low bit.",N,N],[13,"SDL_PACKEDORDER_NONE","","",100,N],[13,"SDL_PACKEDORDER_XRGB","","",100,N],[13,"SDL_PACKEDORDER_RGBX","","",100,N],[13,"SDL_PACKEDORDER_ARGB","","",100,N],[13,"SDL_PACKEDORDER_RGBA","","",100,N],[13,"SDL_PACKEDORDER_XBGR","","",100,N],[13,"SDL_PACKEDORDER_BGRX","","",100,N],[13,"SDL_PACKEDORDER_ABGR","","",100,N],[13,"SDL_PACKEDORDER_BGRA","","",100,N],[4,"_bindgen_ty_4","","Array component order, low byte -> high byte.",N,N],[13,"SDL_ARRAYORDER_NONE","","",101,N],[13,"SDL_ARRAYORDER_RGB","","",101,N],[13,"SDL_ARRAYORDER_RGBA","","",101,N],[13,"SDL_ARRAYORDER_ARGB","","",101,N],[13,"SDL_ARRAYORDER_BGR","","",101,N],[13,"SDL_ARRAYORDER_BGRA","","",101,N],[13,"SDL_ARRAYORDER_ABGR","","",101,N],[4,"_bindgen_ty_5","","Packed component layout.",N,N],[13,"SDL_PACKEDLAYOUT_NONE","","",102,N],[13,"SDL_PACKEDLAYOUT_332","","",102,N],[13,"SDL_PACKEDLAYOUT_4444","","",102,N],[13,"SDL_PACKEDLAYOUT_1555","","",102,N],[13,"SDL_PACKEDLAYOUT_5551","","",102,N],[13,"SDL_PACKEDLAYOUT_565","","",102,N],[13,"SDL_PACKEDLAYOUT_8888","","",102,N],[13,"SDL_PACKEDLAYOUT_2101010","","",102,N],[13,"SDL_PACKEDLAYOUT_1010102","","",102,N],[4,"_bindgen_ty_6","","",N,N],[13,"SDL_PIXELFORMAT_UNKNOWN","","",103,N],[13,"SDL_PIXELFORMAT_INDEX1LSB","","",103,N],[13,"SDL_PIXELFORMAT_INDEX1MSB","","",103,N],[13,"SDL_PIXELFORMAT_INDEX4LSB","","",103,N],[13,"SDL_PIXELFORMAT_INDEX4MSB","","",103,N],[13,"SDL_PIXELFORMAT_INDEX8","","",103,N],[13,"SDL_PIXELFORMAT_RGB332","","",103,N],[13,"SDL_PIXELFORMAT_RGB444","","",103,N],[13,"SDL_PIXELFORMAT_RGB555","","",103,N],[13,"SDL_PIXELFORMAT_BGR555","","",103,N],[13,"SDL_PIXELFORMAT_ARGB4444","","",103,N],[13,"SDL_PIXELFORMAT_RGBA4444","","",103,N],[13,"SDL_PIXELFORMAT_ABGR4444","","",103,N],[13,"SDL_PIXELFORMAT_BGRA4444","","",103,N],[13,"SDL_PIXELFORMAT_ARGB1555","","",103,N],[13,"SDL_PIXELFORMAT_RGBA5551","","",103,N],[13,"SDL_PIXELFORMAT_ABGR1555","","",103,N],[13,"SDL_PIXELFORMAT_BGRA5551","","",103,N],[13,"SDL_PIXELFORMAT_RGB565","","",103,N],[13,"SDL_PIXELFORMAT_BGR565","","",103,N],[13,"SDL_PIXELFORMAT_RGB24","","",103,N],[13,"SDL_PIXELFORMAT_BGR24","","",103,N],[13,"SDL_PIXELFORMAT_RGB888","","",103,N],[13,"SDL_PIXELFORMAT_RGBX8888","","",103,N],[13,"SDL_PIXELFORMAT_BGR888","","",103,N],[13,"SDL_PIXELFORMAT_BGRX8888","","",103,N],[13,"SDL_PIXELFORMAT_ARGB8888","","",103,N],[13,"SDL_PIXELFORMAT_RGBA8888","","",103,N],[13,"SDL_PIXELFORMAT_ABGR8888","","",103,N],[13,"SDL_PIXELFORMAT_BGRA8888","","",103,N],[13,"SDL_PIXELFORMAT_ARGB2101010","","",103,N],[13,"SDL_PIXELFORMAT_YV12","","",103,N],[13,"SDL_PIXELFORMAT_IYUV","","",103,N],[13,"SDL_PIXELFORMAT_YUY2","","",103,N],[13,"SDL_PIXELFORMAT_UYVY","","",103,N],[13,"SDL_PIXELFORMAT_YVYU","","",103,N],[13,"SDL_PIXELFORMAT_NV12","","",103,N],[13,"SDL_PIXELFORMAT_NV21","","",103,N],[4,"SDL_BlendMode","","\\brief The blend mode used in SDL_RenderCopy() and drawing operations.",N,N],[13,"SDL_BLENDMODE_NONE","","",104,N],[13,"SDL_BLENDMODE_BLEND","","",104,N],[13,"SDL_BLENDMODE_ADD","","",104,N],[13,"SDL_BLENDMODE_MOD","","",104,N],[13,"SDL_BLENDMODE_INVALID","","",104,N],[4,"SDL_BlendOperation","","\\brief The blend operation used when combining source and destination pixel components",N,N],[13,"SDL_BLENDOPERATION_ADD","","",105,N],[13,"SDL_BLENDOPERATION_SUBTRACT","","",105,N],[13,"SDL_BLENDOPERATION_REV_SUBTRACT","","",105,N],[13,"SDL_BLENDOPERATION_MINIMUM","","",105,N],[13,"SDL_BLENDOPERATION_MAXIMUM","","",105,N],[4,"SDL_BlendFactor","","\\brief The normalized factor used to multiply pixel components",N,N],[13,"SDL_BLENDFACTOR_ZERO","","",106,N],[13,"SDL_BLENDFACTOR_ONE","","",106,N],[13,"SDL_BLENDFACTOR_SRC_COLOR","","",106,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR","","",106,N],[13,"SDL_BLENDFACTOR_SRC_ALPHA","","",106,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA","","",106,N],[13,"SDL_BLENDFACTOR_DST_COLOR","","",106,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR","","",106,N],[13,"SDL_BLENDFACTOR_DST_ALPHA","","",106,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA","","",106,N],[4,"SDL_WindowFlags","","\\brief The flags on a window",N,N],[13,"SDL_WINDOW_FULLSCREEN","","",107,N],[13,"SDL_WINDOW_OPENGL","","",107,N],[13,"SDL_WINDOW_SHOWN","","",107,N],[13,"SDL_WINDOW_HIDDEN","","",107,N],[13,"SDL_WINDOW_BORDERLESS","","",107,N],[13,"SDL_WINDOW_RESIZABLE","","",107,N],[13,"SDL_WINDOW_MINIMIZED","","",107,N],[13,"SDL_WINDOW_MAXIMIZED","","",107,N],[13,"SDL_WINDOW_INPUT_GRABBED","","",107,N],[13,"SDL_WINDOW_INPUT_FOCUS","","",107,N],[13,"SDL_WINDOW_MOUSE_FOCUS","","",107,N],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",107,N],[13,"SDL_WINDOW_FOREIGN","","",107,N],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",107,N],[13,"SDL_WINDOW_MOUSE_CAPTURE","","",107,N],[13,"SDL_WINDOW_ALWAYS_ON_TOP","","",107,N],[13,"SDL_WINDOW_SKIP_TASKBAR","","",107,N],[13,"SDL_WINDOW_UTILITY","","",107,N],[13,"SDL_WINDOW_TOOLTIP","","",107,N],[13,"SDL_WINDOW_POPUP_MENU","","",107,N],[13,"SDL_WINDOW_VULKAN","","",107,N],[4,"SDL_WindowEventID","","\\brief Event subtype for window events",N,N],[13,"SDL_WINDOWEVENT_NONE","","",108,N],[13,"SDL_WINDOWEVENT_SHOWN","","",108,N],[13,"SDL_WINDOWEVENT_HIDDEN","","",108,N],[13,"SDL_WINDOWEVENT_EXPOSED","","",108,N],[13,"SDL_WINDOWEVENT_MOVED","","",108,N],[13,"SDL_WINDOWEVENT_RESIZED","","",108,N],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",108,N],[13,"SDL_WINDOWEVENT_MINIMIZED","","",108,N],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",108,N],[13,"SDL_WINDOWEVENT_RESTORED","","",108,N],[13,"SDL_WINDOWEVENT_ENTER","","",108,N],[13,"SDL_WINDOWEVENT_LEAVE","","",108,N],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",108,N],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",108,N],[13,"SDL_WINDOWEVENT_CLOSE","","",108,N],[13,"SDL_WINDOWEVENT_TAKE_FOCUS","","",108,N],[13,"SDL_WINDOWEVENT_HIT_TEST","","",108,N],[4,"SDL_GLattr","","\\brief OpenGL configuration attributes",N,N],[13,"SDL_GL_RED_SIZE","","",109,N],[13,"SDL_GL_GREEN_SIZE","","",109,N],[13,"SDL_GL_BLUE_SIZE","","",109,N],[13,"SDL_GL_ALPHA_SIZE","","",109,N],[13,"SDL_GL_BUFFER_SIZE","","",109,N],[13,"SDL_GL_DOUBLEBUFFER","","",109,N],[13,"SDL_GL_DEPTH_SIZE","","",109,N],[13,"SDL_GL_STENCIL_SIZE","","",109,N],[13,"SDL_GL_ACCUM_RED_SIZE","","",109,N],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",109,N],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",109,N],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",109,N],[13,"SDL_GL_STEREO","","",109,N],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",109,N],[13,"SDL_GL_MULTISAMPLESAMPLES","","",109,N],[13,"SDL_GL_ACCELERATED_VISUAL","","",109,N],[13,"SDL_GL_RETAINED_BACKING","","",109,N],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",109,N],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",109,N],[13,"SDL_GL_CONTEXT_EGL","","",109,N],[13,"SDL_GL_CONTEXT_FLAGS","","",109,N],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",109,N],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",109,N],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",109,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR","","",109,N],[13,"SDL_GL_CONTEXT_RESET_NOTIFICATION","","",109,N],[13,"SDL_GL_CONTEXT_NO_ERROR","","",109,N],[4,"SDL_GLprofile","","",N,N],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",110,N],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",110,N],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",110,N],[4,"SDL_GLcontextFlag","","",N,N],[13,"SDL_GL_CONTEXT_DEBUG_FLAG","","",111,N],[13,"SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG","","",111,N],[13,"SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG","","",111,N],[13,"SDL_GL_CONTEXT_RESET_ISOLATION_FLAG","","",111,N],[4,"SDL_GLcontextReleaseFlag","","",N,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE","","",112,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",112,N],[4,"SDL_GLContextResetNotification","","",N,N],[13,"SDL_GL_CONTEXT_RESET_NO_NOTIFICATION","","",113,N],[13,"SDL_GL_CONTEXT_RESET_LOSE_CONTEXT","","",113,N],[4,"SDL_HitTestResult","","\\brief Possible return values from the SDL_HitTest callback.",N,N],[13,"SDL_HITTEST_NORMAL","","",114,N],[13,"SDL_HITTEST_DRAGGABLE","","",114,N],[13,"SDL_HITTEST_RESIZE_TOPLEFT","","",114,N],[13,"SDL_HITTEST_RESIZE_TOP","","",114,N],[13,"SDL_HITTEST_RESIZE_TOPRIGHT","","",114,N],[13,"SDL_HITTEST_RESIZE_RIGHT","","",114,N],[13,"SDL_HITTEST_RESIZE_BOTTOMRIGHT","","",114,N],[13,"SDL_HITTEST_RESIZE_BOTTOM","","",114,N],[13,"SDL_HITTEST_RESIZE_BOTTOMLEFT","","",114,N],[13,"SDL_HITTEST_RESIZE_LEFT","","",114,N],[4,"SDL_Scancode","","\\brief The SDL keyboard scancode representation.",N,N],[13,"SDL_SCANCODE_UNKNOWN","","",115,N],[13,"SDL_SCANCODE_A","","",115,N],[13,"SDL_SCANCODE_B","","",115,N],[13,"SDL_SCANCODE_C","","",115,N],[13,"SDL_SCANCODE_D","","",115,N],[13,"SDL_SCANCODE_E","","",115,N],[13,"SDL_SCANCODE_F","","",115,N],[13,"SDL_SCANCODE_G","","",115,N],[13,"SDL_SCANCODE_H","","",115,N],[13,"SDL_SCANCODE_I","","",115,N],[13,"SDL_SCANCODE_J","","",115,N],[13,"SDL_SCANCODE_K","","",115,N],[13,"SDL_SCANCODE_L","","",115,N],[13,"SDL_SCANCODE_M","","",115,N],[13,"SDL_SCANCODE_N","","",115,N],[13,"SDL_SCANCODE_O","","",115,N],[13,"SDL_SCANCODE_P","","",115,N],[13,"SDL_SCANCODE_Q","","",115,N],[13,"SDL_SCANCODE_R","","",115,N],[13,"SDL_SCANCODE_S","","",115,N],[13,"SDL_SCANCODE_T","","",115,N],[13,"SDL_SCANCODE_U","","",115,N],[13,"SDL_SCANCODE_V","","",115,N],[13,"SDL_SCANCODE_W","","",115,N],[13,"SDL_SCANCODE_X","","",115,N],[13,"SDL_SCANCODE_Y","","",115,N],[13,"SDL_SCANCODE_Z","","",115,N],[13,"SDL_SCANCODE_1","","",115,N],[13,"SDL_SCANCODE_2","","",115,N],[13,"SDL_SCANCODE_3","","",115,N],[13,"SDL_SCANCODE_4","","",115,N],[13,"SDL_SCANCODE_5","","",115,N],[13,"SDL_SCANCODE_6","","",115,N],[13,"SDL_SCANCODE_7","","",115,N],[13,"SDL_SCANCODE_8","","",115,N],[13,"SDL_SCANCODE_9","","",115,N],[13,"SDL_SCANCODE_0","","",115,N],[13,"SDL_SCANCODE_RETURN","","",115,N],[13,"SDL_SCANCODE_ESCAPE","","",115,N],[13,"SDL_SCANCODE_BACKSPACE","","",115,N],[13,"SDL_SCANCODE_TAB","","",115,N],[13,"SDL_SCANCODE_SPACE","","",115,N],[13,"SDL_SCANCODE_MINUS","","",115,N],[13,"SDL_SCANCODE_EQUALS","","",115,N],[13,"SDL_SCANCODE_LEFTBRACKET","","",115,N],[13,"SDL_SCANCODE_RIGHTBRACKET","","",115,N],[13,"SDL_SCANCODE_BACKSLASH","","",115,N],[13,"SDL_SCANCODE_NONUSHASH","","",115,N],[13,"SDL_SCANCODE_SEMICOLON","","",115,N],[13,"SDL_SCANCODE_APOSTROPHE","","",115,N],[13,"SDL_SCANCODE_GRAVE","","",115,N],[13,"SDL_SCANCODE_COMMA","","",115,N],[13,"SDL_SCANCODE_PERIOD","","",115,N],[13,"SDL_SCANCODE_SLASH","","",115,N],[13,"SDL_SCANCODE_CAPSLOCK","","",115,N],[13,"SDL_SCANCODE_F1","","",115,N],[13,"SDL_SCANCODE_F2","","",115,N],[13,"SDL_SCANCODE_F3","","",115,N],[13,"SDL_SCANCODE_F4","","",115,N],[13,"SDL_SCANCODE_F5","","",115,N],[13,"SDL_SCANCODE_F6","","",115,N],[13,"SDL_SCANCODE_F7","","",115,N],[13,"SDL_SCANCODE_F8","","",115,N],[13,"SDL_SCANCODE_F9","","",115,N],[13,"SDL_SCANCODE_F10","","",115,N],[13,"SDL_SCANCODE_F11","","",115,N],[13,"SDL_SCANCODE_F12","","",115,N],[13,"SDL_SCANCODE_PRINTSCREEN","","",115,N],[13,"SDL_SCANCODE_SCROLLLOCK","","",115,N],[13,"SDL_SCANCODE_PAUSE","","",115,N],[13,"SDL_SCANCODE_INSERT","","",115,N],[13,"SDL_SCANCODE_HOME","","",115,N],[13,"SDL_SCANCODE_PAGEUP","","",115,N],[13,"SDL_SCANCODE_DELETE","","",115,N],[13,"SDL_SCANCODE_END","","",115,N],[13,"SDL_SCANCODE_PAGEDOWN","","",115,N],[13,"SDL_SCANCODE_RIGHT","","",115,N],[13,"SDL_SCANCODE_LEFT","","",115,N],[13,"SDL_SCANCODE_DOWN","","",115,N],[13,"SDL_SCANCODE_UP","","",115,N],[13,"SDL_SCANCODE_NUMLOCKCLEAR","","",115,N],[13,"SDL_SCANCODE_KP_DIVIDE","","",115,N],[13,"SDL_SCANCODE_KP_MULTIPLY","","",115,N],[13,"SDL_SCANCODE_KP_MINUS","","",115,N],[13,"SDL_SCANCODE_KP_PLUS","","",115,N],[13,"SDL_SCANCODE_KP_ENTER","","",115,N],[13,"SDL_SCANCODE_KP_1","","",115,N],[13,"SDL_SCANCODE_KP_2","","",115,N],[13,"SDL_SCANCODE_KP_3","","",115,N],[13,"SDL_SCANCODE_KP_4","","",115,N],[13,"SDL_SCANCODE_KP_5","","",115,N],[13,"SDL_SCANCODE_KP_6","","",115,N],[13,"SDL_SCANCODE_KP_7","","",115,N],[13,"SDL_SCANCODE_KP_8","","",115,N],[13,"SDL_SCANCODE_KP_9","","",115,N],[13,"SDL_SCANCODE_KP_0","","",115,N],[13,"SDL_SCANCODE_KP_PERIOD","","",115,N],[13,"SDL_SCANCODE_NONUSBACKSLASH","","",115,N],[13,"SDL_SCANCODE_APPLICATION","","",115,N],[13,"SDL_SCANCODE_POWER","","",115,N],[13,"SDL_SCANCODE_KP_EQUALS","","",115,N],[13,"SDL_SCANCODE_F13","","",115,N],[13,"SDL_SCANCODE_F14","","",115,N],[13,"SDL_SCANCODE_F15","","",115,N],[13,"SDL_SCANCODE_F16","","",115,N],[13,"SDL_SCANCODE_F17","","",115,N],[13,"SDL_SCANCODE_F18","","",115,N],[13,"SDL_SCANCODE_F19","","",115,N],[13,"SDL_SCANCODE_F20","","",115,N],[13,"SDL_SCANCODE_F21","","",115,N],[13,"SDL_SCANCODE_F22","","",115,N],[13,"SDL_SCANCODE_F23","","",115,N],[13,"SDL_SCANCODE_F24","","",115,N],[13,"SDL_SCANCODE_EXECUTE","","",115,N],[13,"SDL_SCANCODE_HELP","","",115,N],[13,"SDL_SCANCODE_MENU","","",115,N],[13,"SDL_SCANCODE_SELECT","","",115,N],[13,"SDL_SCANCODE_STOP","","",115,N],[13,"SDL_SCANCODE_AGAIN","","",115,N],[13,"SDL_SCANCODE_UNDO","","",115,N],[13,"SDL_SCANCODE_CUT","","",115,N],[13,"SDL_SCANCODE_COPY","","",115,N],[13,"SDL_SCANCODE_PASTE","","",115,N],[13,"SDL_SCANCODE_FIND","","",115,N],[13,"SDL_SCANCODE_MUTE","","",115,N],[13,"SDL_SCANCODE_VOLUMEUP","","",115,N],[13,"SDL_SCANCODE_VOLUMEDOWN","","",115,N],[13,"SDL_SCANCODE_KP_COMMA","","",115,N],[13,"SDL_SCANCODE_KP_EQUALSAS400","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL1","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL2","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL3","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL4","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL5","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL6","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL7","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL8","","",115,N],[13,"SDL_SCANCODE_INTERNATIONAL9","","",115,N],[13,"SDL_SCANCODE_LANG1","","",115,N],[13,"SDL_SCANCODE_LANG2","","",115,N],[13,"SDL_SCANCODE_LANG3","","",115,N],[13,"SDL_SCANCODE_LANG4","","",115,N],[13,"SDL_SCANCODE_LANG5","","",115,N],[13,"SDL_SCANCODE_LANG6","","",115,N],[13,"SDL_SCANCODE_LANG7","","",115,N],[13,"SDL_SCANCODE_LANG8","","",115,N],[13,"SDL_SCANCODE_LANG9","","",115,N],[13,"SDL_SCANCODE_ALTERASE","","",115,N],[13,"SDL_SCANCODE_SYSREQ","","",115,N],[13,"SDL_SCANCODE_CANCEL","","",115,N],[13,"SDL_SCANCODE_CLEAR","","",115,N],[13,"SDL_SCANCODE_PRIOR","","",115,N],[13,"SDL_SCANCODE_RETURN2","","",115,N],[13,"SDL_SCANCODE_SEPARATOR","","",115,N],[13,"SDL_SCANCODE_OUT","","",115,N],[13,"SDL_SCANCODE_OPER","","",115,N],[13,"SDL_SCANCODE_CLEARAGAIN","","",115,N],[13,"SDL_SCANCODE_CRSEL","","",115,N],[13,"SDL_SCANCODE_EXSEL","","",115,N],[13,"SDL_SCANCODE_KP_00","","",115,N],[13,"SDL_SCANCODE_KP_000","","",115,N],[13,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",115,N],[13,"SDL_SCANCODE_DECIMALSEPARATOR","","",115,N],[13,"SDL_SCANCODE_CURRENCYUNIT","","",115,N],[13,"SDL_SCANCODE_CURRENCYSUBUNIT","","",115,N],[13,"SDL_SCANCODE_KP_LEFTPAREN","","",115,N],[13,"SDL_SCANCODE_KP_RIGHTPAREN","","",115,N],[13,"SDL_SCANCODE_KP_LEFTBRACE","","",115,N],[13,"SDL_SCANCODE_KP_RIGHTBRACE","","",115,N],[13,"SDL_SCANCODE_KP_TAB","","",115,N],[13,"SDL_SCANCODE_KP_BACKSPACE","","",115,N],[13,"SDL_SCANCODE_KP_A","","",115,N],[13,"SDL_SCANCODE_KP_B","","",115,N],[13,"SDL_SCANCODE_KP_C","","",115,N],[13,"SDL_SCANCODE_KP_D","","",115,N],[13,"SDL_SCANCODE_KP_E","","",115,N],[13,"SDL_SCANCODE_KP_F","","",115,N],[13,"SDL_SCANCODE_KP_XOR","","",115,N],[13,"SDL_SCANCODE_KP_POWER","","",115,N],[13,"SDL_SCANCODE_KP_PERCENT","","",115,N],[13,"SDL_SCANCODE_KP_LESS","","",115,N],[13,"SDL_SCANCODE_KP_GREATER","","",115,N],[13,"SDL_SCANCODE_KP_AMPERSAND","","",115,N],[13,"SDL_SCANCODE_KP_DBLAMPERSAND","","",115,N],[13,"SDL_SCANCODE_KP_VERTICALBAR","","",115,N],[13,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",115,N],[13,"SDL_SCANCODE_KP_COLON","","",115,N],[13,"SDL_SCANCODE_KP_HASH","","",115,N],[13,"SDL_SCANCODE_KP_SPACE","","",115,N],[13,"SDL_SCANCODE_KP_AT","","",115,N],[13,"SDL_SCANCODE_KP_EXCLAM","","",115,N],[13,"SDL_SCANCODE_KP_MEMSTORE","","",115,N],[13,"SDL_SCANCODE_KP_MEMRECALL","","",115,N],[13,"SDL_SCANCODE_KP_MEMCLEAR","","",115,N],[13,"SDL_SCANCODE_KP_MEMADD","","",115,N],[13,"SDL_SCANCODE_KP_MEMSUBTRACT","","",115,N],[13,"SDL_SCANCODE_KP_MEMMULTIPLY","","",115,N],[13,"SDL_SCANCODE_KP_MEMDIVIDE","","",115,N],[13,"SDL_SCANCODE_KP_PLUSMINUS","","",115,N],[13,"SDL_SCANCODE_KP_CLEAR","","",115,N],[13,"SDL_SCANCODE_KP_CLEARENTRY","","",115,N],[13,"SDL_SCANCODE_KP_BINARY","","",115,N],[13,"SDL_SCANCODE_KP_OCTAL","","",115,N],[13,"SDL_SCANCODE_KP_DECIMAL","","",115,N],[13,"SDL_SCANCODE_KP_HEXADECIMAL","","",115,N],[13,"SDL_SCANCODE_LCTRL","","",115,N],[13,"SDL_SCANCODE_LSHIFT","","",115,N],[13,"SDL_SCANCODE_LALT","","",115,N],[13,"SDL_SCANCODE_LGUI","","",115,N],[13,"SDL_SCANCODE_RCTRL","","",115,N],[13,"SDL_SCANCODE_RSHIFT","","",115,N],[13,"SDL_SCANCODE_RALT","","",115,N],[13,"SDL_SCANCODE_RGUI","","",115,N],[13,"SDL_SCANCODE_MODE","","",115,N],[13,"SDL_SCANCODE_AUDIONEXT","","",115,N],[13,"SDL_SCANCODE_AUDIOPREV","","",115,N],[13,"SDL_SCANCODE_AUDIOSTOP","","",115,N],[13,"SDL_SCANCODE_AUDIOPLAY","","",115,N],[13,"SDL_SCANCODE_AUDIOMUTE","","",115,N],[13,"SDL_SCANCODE_MEDIASELECT","","",115,N],[13,"SDL_SCANCODE_WWW","","",115,N],[13,"SDL_SCANCODE_MAIL","","",115,N],[13,"SDL_SCANCODE_CALCULATOR","","",115,N],[13,"SDL_SCANCODE_COMPUTER","","",115,N],[13,"SDL_SCANCODE_AC_SEARCH","","",115,N],[13,"SDL_SCANCODE_AC_HOME","","",115,N],[13,"SDL_SCANCODE_AC_BACK","","",115,N],[13,"SDL_SCANCODE_AC_FORWARD","","",115,N],[13,"SDL_SCANCODE_AC_STOP","","",115,N],[13,"SDL_SCANCODE_AC_REFRESH","","",115,N],[13,"SDL_SCANCODE_AC_BOOKMARKS","","",115,N],[13,"SDL_SCANCODE_BRIGHTNESSDOWN","","",115,N],[13,"SDL_SCANCODE_BRIGHTNESSUP","","",115,N],[13,"SDL_SCANCODE_DISPLAYSWITCH","","",115,N],[13,"SDL_SCANCODE_KBDILLUMTOGGLE","","",115,N],[13,"SDL_SCANCODE_KBDILLUMDOWN","","",115,N],[13,"SDL_SCANCODE_KBDILLUMUP","","",115,N],[13,"SDL_SCANCODE_EJECT","","",115,N],[13,"SDL_SCANCODE_SLEEP","","",115,N],[13,"SDL_SCANCODE_APP1","","",115,N],[13,"SDL_SCANCODE_APP2","","",115,N],[13,"SDL_SCANCODE_AUDIOREWIND","","",115,N],[13,"SDL_SCANCODE_AUDIOFASTFORWARD","","",115,N],[13,"SDL_NUM_SCANCODES","","",115,N],[4,"_bindgen_ty_7","","",N,N],[13,"SDLK_UNKNOWN","","",116,N],[13,"SDLK_RETURN","","",116,N],[13,"SDLK_ESCAPE","","",116,N],[13,"SDLK_BACKSPACE","","",116,N],[13,"SDLK_TAB","","",116,N],[13,"SDLK_SPACE","","",116,N],[13,"SDLK_EXCLAIM","","",116,N],[13,"SDLK_QUOTEDBL","","",116,N],[13,"SDLK_HASH","","",116,N],[13,"SDLK_PERCENT","","",116,N],[13,"SDLK_DOLLAR","","",116,N],[13,"SDLK_AMPERSAND","","",116,N],[13,"SDLK_QUOTE","","",116,N],[13,"SDLK_LEFTPAREN","","",116,N],[13,"SDLK_RIGHTPAREN","","",116,N],[13,"SDLK_ASTERISK","","",116,N],[13,"SDLK_PLUS","","",116,N],[13,"SDLK_COMMA","","",116,N],[13,"SDLK_MINUS","","",116,N],[13,"SDLK_PERIOD","","",116,N],[13,"SDLK_SLASH","","",116,N],[13,"SDLK_0","","",116,N],[13,"SDLK_1","","",116,N],[13,"SDLK_2","","",116,N],[13,"SDLK_3","","",116,N],[13,"SDLK_4","","",116,N],[13,"SDLK_5","","",116,N],[13,"SDLK_6","","",116,N],[13,"SDLK_7","","",116,N],[13,"SDLK_8","","",116,N],[13,"SDLK_9","","",116,N],[13,"SDLK_COLON","","",116,N],[13,"SDLK_SEMICOLON","","",116,N],[13,"SDLK_LESS","","",116,N],[13,"SDLK_EQUALS","","",116,N],[13,"SDLK_GREATER","","",116,N],[13,"SDLK_QUESTION","","",116,N],[13,"SDLK_AT","","",116,N],[13,"SDLK_LEFTBRACKET","","",116,N],[13,"SDLK_BACKSLASH","","",116,N],[13,"SDLK_RIGHTBRACKET","","",116,N],[13,"SDLK_CARET","","",116,N],[13,"SDLK_UNDERSCORE","","",116,N],[13,"SDLK_BACKQUOTE","","",116,N],[13,"SDLK_a","","",116,N],[13,"SDLK_b","","",116,N],[13,"SDLK_c","","",116,N],[13,"SDLK_d","","",116,N],[13,"SDLK_e","","",116,N],[13,"SDLK_f","","",116,N],[13,"SDLK_g","","",116,N],[13,"SDLK_h","","",116,N],[13,"SDLK_i","","",116,N],[13,"SDLK_j","","",116,N],[13,"SDLK_k","","",116,N],[13,"SDLK_l","","",116,N],[13,"SDLK_m","","",116,N],[13,"SDLK_n","","",116,N],[13,"SDLK_o","","",116,N],[13,"SDLK_p","","",116,N],[13,"SDLK_q","","",116,N],[13,"SDLK_r","","",116,N],[13,"SDLK_s","","",116,N],[13,"SDLK_t","","",116,N],[13,"SDLK_u","","",116,N],[13,"SDLK_v","","",116,N],[13,"SDLK_w","","",116,N],[13,"SDLK_x","","",116,N],[13,"SDLK_y","","",116,N],[13,"SDLK_z","","",116,N],[13,"SDLK_CAPSLOCK","","",116,N],[13,"SDLK_F1","","",116,N],[13,"SDLK_F2","","",116,N],[13,"SDLK_F3","","",116,N],[13,"SDLK_F4","","",116,N],[13,"SDLK_F5","","",116,N],[13,"SDLK_F6","","",116,N],[13,"SDLK_F7","","",116,N],[13,"SDLK_F8","","",116,N],[13,"SDLK_F9","","",116,N],[13,"SDLK_F10","","",116,N],[13,"SDLK_F11","","",116,N],[13,"SDLK_F12","","",116,N],[13,"SDLK_PRINTSCREEN","","",116,N],[13,"SDLK_SCROLLLOCK","","",116,N],[13,"SDLK_PAUSE","","",116,N],[13,"SDLK_INSERT","","",116,N],[13,"SDLK_HOME","","",116,N],[13,"SDLK_PAGEUP","","",116,N],[13,"SDLK_DELETE","","",116,N],[13,"SDLK_END","","",116,N],[13,"SDLK_PAGEDOWN","","",116,N],[13,"SDLK_RIGHT","","",116,N],[13,"SDLK_LEFT","","",116,N],[13,"SDLK_DOWN","","",116,N],[13,"SDLK_UP","","",116,N],[13,"SDLK_NUMLOCKCLEAR","","",116,N],[13,"SDLK_KP_DIVIDE","","",116,N],[13,"SDLK_KP_MULTIPLY","","",116,N],[13,"SDLK_KP_MINUS","","",116,N],[13,"SDLK_KP_PLUS","","",116,N],[13,"SDLK_KP_ENTER","","",116,N],[13,"SDLK_KP_1","","",116,N],[13,"SDLK_KP_2","","",116,N],[13,"SDLK_KP_3","","",116,N],[13,"SDLK_KP_4","","",116,N],[13,"SDLK_KP_5","","",116,N],[13,"SDLK_KP_6","","",116,N],[13,"SDLK_KP_7","","",116,N],[13,"SDLK_KP_8","","",116,N],[13,"SDLK_KP_9","","",116,N],[13,"SDLK_KP_0","","",116,N],[13,"SDLK_KP_PERIOD","","",116,N],[13,"SDLK_APPLICATION","","",116,N],[13,"SDLK_POWER","","",116,N],[13,"SDLK_KP_EQUALS","","",116,N],[13,"SDLK_F13","","",116,N],[13,"SDLK_F14","","",116,N],[13,"SDLK_F15","","",116,N],[13,"SDLK_F16","","",116,N],[13,"SDLK_F17","","",116,N],[13,"SDLK_F18","","",116,N],[13,"SDLK_F19","","",116,N],[13,"SDLK_F20","","",116,N],[13,"SDLK_F21","","",116,N],[13,"SDLK_F22","","",116,N],[13,"SDLK_F23","","",116,N],[13,"SDLK_F24","","",116,N],[13,"SDLK_EXECUTE","","",116,N],[13,"SDLK_HELP","","",116,N],[13,"SDLK_MENU","","",116,N],[13,"SDLK_SELECT","","",116,N],[13,"SDLK_STOP","","",116,N],[13,"SDLK_AGAIN","","",116,N],[13,"SDLK_UNDO","","",116,N],[13,"SDLK_CUT","","",116,N],[13,"SDLK_COPY","","",116,N],[13,"SDLK_PASTE","","",116,N],[13,"SDLK_FIND","","",116,N],[13,"SDLK_MUTE","","",116,N],[13,"SDLK_VOLUMEUP","","",116,N],[13,"SDLK_VOLUMEDOWN","","",116,N],[13,"SDLK_KP_COMMA","","",116,N],[13,"SDLK_KP_EQUALSAS400","","",116,N],[13,"SDLK_ALTERASE","","",116,N],[13,"SDLK_SYSREQ","","",116,N],[13,"SDLK_CANCEL","","",116,N],[13,"SDLK_CLEAR","","",116,N],[13,"SDLK_PRIOR","","",116,N],[13,"SDLK_RETURN2","","",116,N],[13,"SDLK_SEPARATOR","","",116,N],[13,"SDLK_OUT","","",116,N],[13,"SDLK_OPER","","",116,N],[13,"SDLK_CLEARAGAIN","","",116,N],[13,"SDLK_CRSEL","","",116,N],[13,"SDLK_EXSEL","","",116,N],[13,"SDLK_KP_00","","",116,N],[13,"SDLK_KP_000","","",116,N],[13,"SDLK_THOUSANDSSEPARATOR","","",116,N],[13,"SDLK_DECIMALSEPARATOR","","",116,N],[13,"SDLK_CURRENCYUNIT","","",116,N],[13,"SDLK_CURRENCYSUBUNIT","","",116,N],[13,"SDLK_KP_LEFTPAREN","","",116,N],[13,"SDLK_KP_RIGHTPAREN","","",116,N],[13,"SDLK_KP_LEFTBRACE","","",116,N],[13,"SDLK_KP_RIGHTBRACE","","",116,N],[13,"SDLK_KP_TAB","","",116,N],[13,"SDLK_KP_BACKSPACE","","",116,N],[13,"SDLK_KP_A","","",116,N],[13,"SDLK_KP_B","","",116,N],[13,"SDLK_KP_C","","",116,N],[13,"SDLK_KP_D","","",116,N],[13,"SDLK_KP_E","","",116,N],[13,"SDLK_KP_F","","",116,N],[13,"SDLK_KP_XOR","","",116,N],[13,"SDLK_KP_POWER","","",116,N],[13,"SDLK_KP_PERCENT","","",116,N],[13,"SDLK_KP_LESS","","",116,N],[13,"SDLK_KP_GREATER","","",116,N],[13,"SDLK_KP_AMPERSAND","","",116,N],[13,"SDLK_KP_DBLAMPERSAND","","",116,N],[13,"SDLK_KP_VERTICALBAR","","",116,N],[13,"SDLK_KP_DBLVERTICALBAR","","",116,N],[13,"SDLK_KP_COLON","","",116,N],[13,"SDLK_KP_HASH","","",116,N],[13,"SDLK_KP_SPACE","","",116,N],[13,"SDLK_KP_AT","","",116,N],[13,"SDLK_KP_EXCLAM","","",116,N],[13,"SDLK_KP_MEMSTORE","","",116,N],[13,"SDLK_KP_MEMRECALL","","",116,N],[13,"SDLK_KP_MEMCLEAR","","",116,N],[13,"SDLK_KP_MEMADD","","",116,N],[13,"SDLK_KP_MEMSUBTRACT","","",116,N],[13,"SDLK_KP_MEMMULTIPLY","","",116,N],[13,"SDLK_KP_MEMDIVIDE","","",116,N],[13,"SDLK_KP_PLUSMINUS","","",116,N],[13,"SDLK_KP_CLEAR","","",116,N],[13,"SDLK_KP_CLEARENTRY","","",116,N],[13,"SDLK_KP_BINARY","","",116,N],[13,"SDLK_KP_OCTAL","","",116,N],[13,"SDLK_KP_DECIMAL","","",116,N],[13,"SDLK_KP_HEXADECIMAL","","",116,N],[13,"SDLK_LCTRL","","",116,N],[13,"SDLK_LSHIFT","","",116,N],[13,"SDLK_LALT","","",116,N],[13,"SDLK_LGUI","","",116,N],[13,"SDLK_RCTRL","","",116,N],[13,"SDLK_RSHIFT","","",116,N],[13,"SDLK_RALT","","",116,N],[13,"SDLK_RGUI","","",116,N],[13,"SDLK_MODE","","",116,N],[13,"SDLK_AUDIONEXT","","",116,N],[13,"SDLK_AUDIOPREV","","",116,N],[13,"SDLK_AUDIOSTOP","","",116,N],[13,"SDLK_AUDIOPLAY","","",116,N],[13,"SDLK_AUDIOMUTE","","",116,N],[13,"SDLK_MEDIASELECT","","",116,N],[13,"SDLK_WWW","","",116,N],[13,"SDLK_MAIL","","",116,N],[13,"SDLK_CALCULATOR","","",116,N],[13,"SDLK_COMPUTER","","",116,N],[13,"SDLK_AC_SEARCH","","",116,N],[13,"SDLK_AC_HOME","","",116,N],[13,"SDLK_AC_BACK","","",116,N],[13,"SDLK_AC_FORWARD","","",116,N],[13,"SDLK_AC_STOP","","",116,N],[13,"SDLK_AC_REFRESH","","",116,N],[13,"SDLK_AC_BOOKMARKS","","",116,N],[13,"SDLK_BRIGHTNESSDOWN","","",116,N],[13,"SDLK_BRIGHTNESSUP","","",116,N],[13,"SDLK_DISPLAYSWITCH","","",116,N],[13,"SDLK_KBDILLUMTOGGLE","","",116,N],[13,"SDLK_KBDILLUMDOWN","","",116,N],[13,"SDLK_KBDILLUMUP","","",116,N],[13,"SDLK_EJECT","","",116,N],[13,"SDLK_SLEEP","","",116,N],[13,"SDLK_APP1","","",116,N],[13,"SDLK_APP2","","",116,N],[13,"SDLK_AUDIOREWIND","","",116,N],[13,"SDLK_AUDIOFASTFORWARD","","",116,N],[4,"SDL_Keymod","","\\brief Enumeration of valid key mods (possibly OR'd together).",N,N],[13,"KMOD_NONE","","",117,N],[13,"KMOD_LSHIFT","","",117,N],[13,"KMOD_RSHIFT","","",117,N],[13,"KMOD_LCTRL","","",117,N],[13,"KMOD_RCTRL","","",117,N],[13,"KMOD_LALT","","",117,N],[13,"KMOD_RALT","","",117,N],[13,"KMOD_LGUI","","",117,N],[13,"KMOD_RGUI","","",117,N],[13,"KMOD_NUM","","",117,N],[13,"KMOD_CAPS","","",117,N],[13,"KMOD_MODE","","",117,N],[13,"KMOD_RESERVED","","",117,N],[4,"SDL_SystemCursor","","\\brief Cursor types for SDL_CreateSystemCursor().",N,N],[13,"SDL_SYSTEM_CURSOR_ARROW","","",118,N],[13,"SDL_SYSTEM_CURSOR_IBEAM","","",118,N],[13,"SDL_SYSTEM_CURSOR_WAIT","","",118,N],[13,"SDL_SYSTEM_CURSOR_CROSSHAIR","","",118,N],[13,"SDL_SYSTEM_CURSOR_WAITARROW","","",118,N],[13,"SDL_SYSTEM_CURSOR_SIZENWSE","","",118,N],[13,"SDL_SYSTEM_CURSOR_SIZENESW","","",118,N],[13,"SDL_SYSTEM_CURSOR_SIZEWE","","",118,N],[13,"SDL_SYSTEM_CURSOR_SIZENS","","",118,N],[13,"SDL_SYSTEM_CURSOR_SIZEALL","","",118,N],[13,"SDL_SYSTEM_CURSOR_NO","","",118,N],[13,"SDL_SYSTEM_CURSOR_HAND","","",118,N],[13,"SDL_NUM_SYSTEM_CURSORS","","",118,N],[4,"SDL_MouseWheelDirection","","\\brief Scroll direction types for the Scroll event",N,N],[13,"SDL_MOUSEWHEEL_NORMAL","","",119,N],[13,"SDL_MOUSEWHEEL_FLIPPED","","",119,N],[4,"SDL_JoystickType","","",N,N],[13,"SDL_JOYSTICK_TYPE_UNKNOWN","","",120,N],[13,"SDL_JOYSTICK_TYPE_GAMECONTROLLER","","",120,N],[13,"SDL_JOYSTICK_TYPE_WHEEL","","",120,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_STICK","","",120,N],[13,"SDL_JOYSTICK_TYPE_FLIGHT_STICK","","",120,N],[13,"SDL_JOYSTICK_TYPE_DANCE_PAD","","",120,N],[13,"SDL_JOYSTICK_TYPE_GUITAR","","",120,N],[13,"SDL_JOYSTICK_TYPE_DRUM_KIT","","",120,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_PAD","","",120,N],[13,"SDL_JOYSTICK_TYPE_THROTTLE","","",120,N],[4,"SDL_JoystickPowerLevel","","",N,N],[13,"SDL_JOYSTICK_POWER_UNKNOWN","","",121,N],[13,"SDL_JOYSTICK_POWER_EMPTY","","",121,N],[13,"SDL_JOYSTICK_POWER_LOW","","",121,N],[13,"SDL_JOYSTICK_POWER_MEDIUM","","",121,N],[13,"SDL_JOYSTICK_POWER_FULL","","",121,N],[13,"SDL_JOYSTICK_POWER_WIRED","","",121,N],[13,"SDL_JOYSTICK_POWER_MAX","","",121,N],[4,"SDL_GameControllerBindType","","",N,N],[13,"SDL_CONTROLLER_BINDTYPE_NONE","","",122,N],[13,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",122,N],[13,"SDL_CONTROLLER_BINDTYPE_AXIS","","",122,N],[13,"SDL_CONTROLLER_BINDTYPE_HAT","","",122,N],[4,"SDL_GameControllerAxis","","The list of axes available from a controller",N,N],[13,"SDL_CONTROLLER_AXIS_INVALID","","",123,N],[13,"SDL_CONTROLLER_AXIS_LEFTX","","",123,N],[13,"SDL_CONTROLLER_AXIS_LEFTY","","",123,N],[13,"SDL_CONTROLLER_AXIS_RIGHTX","","",123,N],[13,"SDL_CONTROLLER_AXIS_RIGHTY","","",123,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",123,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",123,N],[13,"SDL_CONTROLLER_AXIS_MAX","","",123,N],[4,"SDL_GameControllerButton","","The list of buttons available from a controller",N,N],[13,"SDL_CONTROLLER_BUTTON_INVALID","","",124,N],[13,"SDL_CONTROLLER_BUTTON_A","","",124,N],[13,"SDL_CONTROLLER_BUTTON_B","","",124,N],[13,"SDL_CONTROLLER_BUTTON_X","","",124,N],[13,"SDL_CONTROLLER_BUTTON_Y","","",124,N],[13,"SDL_CONTROLLER_BUTTON_BACK","","",124,N],[13,"SDL_CONTROLLER_BUTTON_GUIDE","","",124,N],[13,"SDL_CONTROLLER_BUTTON_START","","",124,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",124,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",124,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",124,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",124,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",124,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",124,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",124,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",124,N],[13,"SDL_CONTROLLER_BUTTON_MAX","","",124,N],[4,"SDL_EventType","","\\brief The types of events that can be delivered.",N,N],[13,"SDL_FIRSTEVENT","","",125,N],[13,"SDL_QUIT","","",125,N],[13,"SDL_APP_TERMINATING","","",125,N],[13,"SDL_APP_LOWMEMORY","","",125,N],[13,"SDL_APP_WILLENTERBACKGROUND","","",125,N],[13,"SDL_APP_DIDENTERBACKGROUND","","",125,N],[13,"SDL_APP_WILLENTERFOREGROUND","","",125,N],[13,"SDL_APP_DIDENTERFOREGROUND","","",125,N],[13,"SDL_WINDOWEVENT","","",125,N],[13,"SDL_SYSWMEVENT","","",125,N],[13,"SDL_KEYDOWN","","",125,N],[13,"SDL_KEYUP","","",125,N],[13,"SDL_TEXTEDITING","","",125,N],[13,"SDL_TEXTINPUT","","",125,N],[13,"SDL_KEYMAPCHANGED","","",125,N],[13,"SDL_MOUSEMOTION","","",125,N],[13,"SDL_MOUSEBUTTONDOWN","","",125,N],[13,"SDL_MOUSEBUTTONUP","","",125,N],[13,"SDL_MOUSEWHEEL","","",125,N],[13,"SDL_JOYAXISMOTION","","",125,N],[13,"SDL_JOYBALLMOTION","","",125,N],[13,"SDL_JOYHATMOTION","","",125,N],[13,"SDL_JOYBUTTONDOWN","","",125,N],[13,"SDL_JOYBUTTONUP","","",125,N],[13,"SDL_JOYDEVICEADDED","","",125,N],[13,"SDL_JOYDEVICEREMOVED","","",125,N],[13,"SDL_CONTROLLERAXISMOTION","","",125,N],[13,"SDL_CONTROLLERBUTTONDOWN","","",125,N],[13,"SDL_CONTROLLERBUTTONUP","","",125,N],[13,"SDL_CONTROLLERDEVICEADDED","","",125,N],[13,"SDL_CONTROLLERDEVICEREMOVED","","",125,N],[13,"SDL_CONTROLLERDEVICEREMAPPED","","",125,N],[13,"SDL_FINGERDOWN","","",125,N],[13,"SDL_FINGERUP","","",125,N],[13,"SDL_FINGERMOTION","","",125,N],[13,"SDL_DOLLARGESTURE","","",125,N],[13,"SDL_DOLLARRECORD","","",125,N],[13,"SDL_MULTIGESTURE","","",125,N],[13,"SDL_CLIPBOARDUPDATE","","",125,N],[13,"SDL_DROPFILE","","",125,N],[13,"SDL_DROPTEXT","","",125,N],[13,"SDL_DROPBEGIN","","",125,N],[13,"SDL_DROPCOMPLETE","","",125,N],[13,"SDL_AUDIODEVICEADDED","","",125,N],[13,"SDL_AUDIODEVICEREMOVED","","",125,N],[13,"SDL_RENDER_TARGETS_RESET","","",125,N],[13,"SDL_RENDER_DEVICE_RESET","","",125,N],[13,"SDL_USEREVENT","","",125,N],[13,"SDL_LASTEVENT","","",125,N],[4,"SDL_eventaction","","",N,N],[13,"SDL_ADDEVENT","","",126,N],[13,"SDL_PEEKEVENT","","",126,N],[13,"SDL_GETEVENT","","",126,N],[4,"SDL_HintPriority","","\\brief  An enumeration of hint priorities",N,N],[13,"SDL_HINT_DEFAULT","","",127,N],[13,"SDL_HINT_NORMAL","","",127,N],[13,"SDL_HINT_OVERRIDE","","",127,N],[4,"_bindgen_ty_8","","\\brief The predefined log categories",N,N],[13,"SDL_LOG_CATEGORY_APPLICATION","","",128,N],[13,"SDL_LOG_CATEGORY_ERROR","","",128,N],[13,"SDL_LOG_CATEGORY_ASSERT","","",128,N],[13,"SDL_LOG_CATEGORY_SYSTEM","","",128,N],[13,"SDL_LOG_CATEGORY_AUDIO","","",128,N],[13,"SDL_LOG_CATEGORY_VIDEO","","",128,N],[13,"SDL_LOG_CATEGORY_RENDER","","",128,N],[13,"SDL_LOG_CATEGORY_INPUT","","",128,N],[13,"SDL_LOG_CATEGORY_TEST","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED1","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED2","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED3","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED4","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED5","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED6","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED7","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED8","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED9","","",128,N],[13,"SDL_LOG_CATEGORY_RESERVED10","","",128,N],[13,"SDL_LOG_CATEGORY_CUSTOM","","",128,N],[4,"SDL_LogPriority","","\\brief The predefined log priorities",N,N],[13,"SDL_LOG_PRIORITY_VERBOSE","","",129,N],[13,"SDL_LOG_PRIORITY_DEBUG","","",129,N],[13,"SDL_LOG_PRIORITY_INFO","","",129,N],[13,"SDL_LOG_PRIORITY_WARN","","",129,N],[13,"SDL_LOG_PRIORITY_ERROR","","",129,N],[13,"SDL_LOG_PRIORITY_CRITICAL","","",129,N],[13,"SDL_NUM_LOG_PRIORITIES","","",129,N],[4,"SDL_MessageBoxFlags","","\\brief SDL_MessageBox flags. If supported will display warning icon, etc.",N,N],[13,"SDL_MESSAGEBOX_ERROR","","",130,N],[13,"SDL_MESSAGEBOX_WARNING","","",130,N],[13,"SDL_MESSAGEBOX_INFORMATION","","",130,N],[4,"SDL_MessageBoxButtonFlags","","\\brief Flags for SDL_MessageBoxButtonData.",N,N],[13,"SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",131,N],[13,"SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",131,N],[4,"SDL_MessageBoxColorType","","",N,N],[13,"SDL_MESSAGEBOX_COLOR_BACKGROUND","","",132,N],[13,"SDL_MESSAGEBOX_COLOR_TEXT","","",132,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","","",132,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","","",132,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","","",132,N],[13,"SDL_MESSAGEBOX_COLOR_MAX","","",132,N],[4,"SDL_PowerState","","\\brief The basic state for the system's power supply.",N,N],[13,"SDL_POWERSTATE_UNKNOWN","","",133,N],[13,"SDL_POWERSTATE_ON_BATTERY","","",133,N],[13,"SDL_POWERSTATE_NO_BATTERY","","",133,N],[13,"SDL_POWERSTATE_CHARGING","","",133,N],[13,"SDL_POWERSTATE_CHARGED","","",133,N],[4,"SDL_RendererFlags","","\\brief Flags used when creating a rendering context",N,N],[13,"SDL_RENDERER_SOFTWARE","","",134,N],[13,"SDL_RENDERER_ACCELERATED","","",134,N],[13,"SDL_RENDERER_PRESENTVSYNC","","",134,N],[13,"SDL_RENDERER_TARGETTEXTURE","","",134,N],[4,"SDL_TextureAccess","","\\brief The access pattern allowed for a texture.",N,N],[13,"SDL_TEXTUREACCESS_STATIC","","",135,N],[13,"SDL_TEXTUREACCESS_STREAMING","","",135,N],[13,"SDL_TEXTUREACCESS_TARGET","","",135,N],[4,"SDL_TextureModulate","","\\brief The texture channel modulation used in SDL_RenderCopy().",N,N],[13,"SDL_TEXTUREMODULATE_NONE","","",136,N],[13,"SDL_TEXTUREMODULATE_COLOR","","",136,N],[13,"SDL_TEXTUREMODULATE_ALPHA","","",136,N],[4,"SDL_RendererFlip","","\\brief Flip constants for SDL_RenderCopyEx",N,N],[13,"SDL_FLIP_NONE","","",137,N],[13,"SDL_FLIP_HORIZONTAL","","",137,N],[13,"SDL_FLIP_VERTICAL","","",137,N],[4,"WindowShapeMode","","\\brief An enum denoting the specific type of contents present in an SDL_WindowShapeParams union.",N,N],[13,"ShapeModeDefault","","",138,N],[13,"ShapeModeBinarizeAlpha","","",138,N],[13,"ShapeModeReverseBinarizeAlpha","","",138,N],[13,"ShapeModeColorKey","","",138,N],[5,"SDL_GetPlatform","","\\brief Gets the name of the platform.",N,N],[5,"SDL_malloc","","",N,N],[5,"SDL_calloc","","",N,N],[5,"SDL_realloc","","",N,N],[5,"SDL_free","","",N,N],[5,"SDL_getenv","","",N,N],[5,"SDL_setenv","","",N,N],[5,"SDL_qsort","","",N,N],[5,"SDL_abs","","",N,N],[5,"SDL_isdigit","","",N,N],[5,"SDL_isspace","","",N,N],[5,"SDL_toupper","","",N,N],[5,"SDL_tolower","","",N,N],[5,"SDL_memset","","",N,N],[5,"SDL_memcpy","","",N,N],[5,"SDL_memmove","","",N,N],[5,"SDL_memcmp","","",N,N],[5,"SDL_wcslen","","",N,N],[5,"SDL_wcslcpy","","",N,N],[5,"SDL_wcslcat","","",N,N],[5,"SDL_wcscmp","","",N,N],[5,"SDL_strlen","","",N,N],[5,"SDL_strlcpy","","",N,N],[5,"SDL_utf8strlcpy","","",N,N],[5,"SDL_strlcat","","",N,N],[5,"SDL_strdup","","",N,N],[5,"SDL_strrev","","",N,N],[5,"SDL_strupr","","",N,N],[5,"SDL_strlwr","","",N,N],[5,"SDL_strchr","","",N,N],[5,"SDL_strrchr","","",N,N],[5,"SDL_strstr","","",N,N],[5,"SDL_utf8strlen","","",N,N],[5,"SDL_itoa","","",N,N],[5,"SDL_uitoa","","",N,N],[5,"SDL_ltoa","","",N,N],[5,"SDL_ultoa","","",N,N],[5,"SDL_lltoa","","",N,N],[5,"SDL_ulltoa","","",N,N],[5,"SDL_atoi","","",N,N],[5,"SDL_atof","","",N,N],[5,"SDL_strtol","","",N,N],[5,"SDL_strtoul","","",N,N],[5,"SDL_strtoll","","",N,N],[5,"SDL_strtoull","","",N,N],[5,"SDL_strtod","","",N,N],[5,"SDL_strcmp","","",N,N],[5,"SDL_strncmp","","",N,N],[5,"SDL_strcasecmp","","",N,N],[5,"SDL_strncasecmp","","",N,N],[5,"SDL_sscanf","","",N,N],[5,"SDL_vsscanf","","",N,N],[5,"SDL_snprintf","","",N,N],[5,"SDL_vsnprintf","","",N,N],[5,"SDL_acos","","",N,N],[5,"SDL_asin","","",N,N],[5,"SDL_atan","","",N,N],[5,"SDL_atan2","","",N,N],[5,"SDL_ceil","","",N,N],[5,"SDL_copysign","","",N,N],[5,"SDL_cos","","",N,N],[5,"SDL_cosf","","",N,N],[5,"SDL_fabs","","",N,N],[5,"SDL_floor","","",N,N],[5,"SDL_log","","",N,N],[5,"SDL_pow","","",N,N],[5,"SDL_scalbn","","",N,N],[5,"SDL_sin","","",N,N],[5,"SDL_sinf","","",N,N],[5,"SDL_sqrt","","",N,N],[5,"SDL_sqrtf","","",N,N],[5,"SDL_tan","","",N,N],[5,"SDL_tanf","","",N,N],[5,"SDL_iconv_open","","",N,N],[5,"SDL_iconv_close","","",N,N],[5,"SDL_iconv","","",N,N],[5,"SDL_iconv_string","","This function converts a string between encodings in one pass, returning a string that must be freed with SDL_free() or NULL on error.",N,N],[5,"SDL_main","","The prototype for the application's main() function",N,N],[5,"SDL_SetMainReady","","This is called by the real SDL main function to let the rest of the library know that initialization was done properly.",N,N],[5,"SDL_ReportAssertion","","",N,N],[5,"SDL_SetAssertionHandler","","\\brief Set an application-defined assertion handler.",N,N],[5,"SDL_GetDefaultAssertionHandler","","\\brief Get the default assertion handler.",N,N],[5,"SDL_GetAssertionHandler","","\\brief Get the current assertion handler.",N,N],[5,"SDL_GetAssertionReport","","\\brief Get a list of all assertion failures.",N,N],[5,"SDL_ResetAssertionReport","","\\brief Reset the list of all assertion failures.",N,N],[5,"SDL_AtomicTryLock","","\\brief Try to lock a spin lock by setting it to a non-zero value.",N,N],[5,"SDL_AtomicLock","","\\brief Lock a spin lock by setting it to a non-zero value.",N,N],[5,"SDL_AtomicUnlock","","\\brief Unlock a spin lock by setting it to 0. Always returns immediately",N,N],[5,"SDL_MemoryBarrierReleaseFunction","","Memory barriers are designed to prevent reads and writes from being reordered by the compiler and being seen out of order on multi-core CPUs.",N,N],[5,"SDL_MemoryBarrierAcquireFunction","","",N,N],[5,"SDL_AtomicCAS","","\\brief Set an atomic variable to a new value if it is currently an old value.",N,N],[5,"SDL_AtomicSet","","\\brief Set an atomic variable to a value.",N,N],[5,"SDL_AtomicGet","","\\brief Get the value of an atomic variable",N,N],[5,"SDL_AtomicAdd","","\\brief Add to an atomic variable.",N,N],[5,"SDL_AtomicCASPtr","","\\brief Set a pointer to a new value if it is currently an old value.",N,N],[5,"SDL_AtomicSetPtr","","\\brief Set a pointer to a value atomically.",N,N],[5,"SDL_AtomicGetPtr","","\\brief Get the value of a pointer atomically.",N,N],[5,"SDL_SetError","","",N,N],[5,"SDL_GetError","","",N,N],[5,"SDL_ClearError","","",N,N],[5,"SDL_Error","","",N,N],[5,"SDL_CreateMutex","","Create a mutex, initialized unlocked.",N,N],[5,"SDL_LockMutex","","",N,N],[5,"SDL_TryLockMutex","","Try to lock the mutex",N,N],[5,"SDL_UnlockMutex","","",N,N],[5,"SDL_DestroyMutex","","Destroy a mutex.",N,N],[5,"SDL_CreateSemaphore","","Create a semaphore, initialized with value, returns NULL on failure.",N,N],[5,"SDL_DestroySemaphore","","Destroy a semaphore.",N,N],[5,"SDL_SemWait","","This function suspends the calling thread until the semaphore pointed to by \\c sem has a positive count. It then atomically decreases the semaphore count.",N,N],[5,"SDL_SemTryWait","","Non-blocking variant of SDL_SemWait().",N,N],[5,"SDL_SemWaitTimeout","","Variant of SDL_SemWait() with a timeout in milliseconds.",N,N],[5,"SDL_SemPost","","Atomically increases the semaphore's count (not blocking).",N,N],[5,"SDL_SemValue","","Returns the current count of the semaphore.",N,N],[5,"SDL_CreateCond","","Create a condition variable.",N,N],[5,"SDL_DestroyCond","","Destroy a condition variable.",N,N],[5,"SDL_CondSignal","","Restart one of the threads that are waiting on the condition variable.",N,N],[5,"SDL_CondBroadcast","","Restart all threads that are waiting on the condition variable.",N,N],[5,"SDL_CondWait","","Wait on the condition variable, unlocking the provided mutex.",N,N],[5,"SDL_CondWaitTimeout","","Waits for at most \\c ms milliseconds, and returns 0 if the condition variable is signaled, ::SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error.",N,N],[5,"SDL_CreateThread","","Create a thread.",N,N],[5,"SDL_GetThreadName","","Get the thread name, as it was specified in SDL_CreateThread(). This function returns a pointer to a UTF-8 string that names the specified thread, or NULL if it doesn't have a name. This is internal memory, not to be free()'d by the caller, and remains valid until the specified thread is cleaned up by SDL_WaitThread().",N,N],[5,"SDL_ThreadID","","Get the thread identifier for the current thread.",N,N],[5,"SDL_GetThreadID","","Get the thread identifier for the specified thread.",N,N],[5,"SDL_SetThreadPriority","","Set the priority for the current thread",N,N],[5,"SDL_WaitThread","","Wait for a thread to finish. Threads that haven't been detached will remain (as a \"zombie\") until this function cleans them up. Not doing so is a resource leak.",N,N],[5,"SDL_DetachThread","","A thread may be \"detached\" to signify that it should not remain until another thread has called SDL_WaitThread() on it. Detaching a thread is useful for long-running threads that nothing needs to synchronize with or further manage. When a detached thread is done, it simply goes away.",N,N],[5,"SDL_TLSCreate","","\\brief Create an identifier that is globally visible to all threads but refers to data that is thread-specific.",N,N],[5,"SDL_TLSGet","","\\brief Get the value associated with a thread local storage ID for the current thread.",N,N],[5,"SDL_TLSSet","","\\brief Set the value associated with a thread local storage ID for the current thread.",N,N],[5,"SDL_RWFromFile","","",N,N],[5,"SDL_RWFromFP","","",N,N],[5,"SDL_RWFromMem","","",N,N],[5,"SDL_RWFromConstMem","","",N,N],[5,"SDL_AllocRW","","",N,N],[5,"SDL_FreeRW","","",N,N],[5,"SDL_LoadFile_RW","","Load all the data from an SDL data stream.",N,N],[5,"SDL_ReadU8","","",N,N],[5,"SDL_ReadLE16","","",N,N],[5,"SDL_ReadBE16","","",N,N],[5,"SDL_ReadLE32","","",N,N],[5,"SDL_ReadBE32","","",N,N],[5,"SDL_ReadLE64","","",N,N],[5,"SDL_ReadBE64","","",N,N],[5,"SDL_WriteU8","","",N,N],[5,"SDL_WriteLE16","","",N,N],[5,"SDL_WriteBE16","","",N,N],[5,"SDL_WriteLE32","","",N,N],[5,"SDL_WriteBE32","","",N,N],[5,"SDL_WriteLE64","","",N,N],[5,"SDL_WriteBE64","","",N,N],[5,"SDL_GetNumAudioDrivers","","",N,N],[5,"SDL_GetAudioDriver","","",N,N],[5,"SDL_AudioInit","","",N,N],[5,"SDL_AudioQuit","","",N,N],[5,"SDL_GetCurrentAudioDriver","","This function returns the name of the current audio driver, or NULL if no driver has been initialized.",N,N],[5,"SDL_OpenAudio","","This function opens the audio device with the desired parameters, and returns 0 if successful, placing the actual hardware parameters in the structure pointed to by \\c obtained.  If \\c obtained is NULL, the audio data passed to the callback function will be guaranteed to be in the requested format, and will be automatically converted to the hardware audio format if necessary.  This function returns -1 if it failed to open the audio device, or couldn't set up the audio thread.",N,N],[5,"SDL_GetNumAudioDevices","","Get the number of available devices exposed by the current driver. Only valid after a successfully initializing the audio subsystem. Returns -1 if an explicit list of devices can't be determined; this is not an error. For example, if SDL is set up to talk to a remote audio server, it can't list every one available on the Internet, but it will still allow a specific host to be specified to SDL_OpenAudioDevice().",N,N],[5,"SDL_GetAudioDeviceName","","Get the human-readable name of a specific audio device. Must be a value between 0 and (number of audio devices-1). Only valid after a successfully initializing the audio subsystem. The values returned by this function reflect the latest call to SDL_GetNumAudioDevices(); recall that function to redetect available hardware.",N,N],[5,"SDL_OpenAudioDevice","","Open a specific audio device. Passing in a device name of NULL requests the most reasonable default (and is equivalent to calling SDL_OpenAudio()).",N,N],[5,"SDL_GetAudioStatus","","",N,N],[5,"SDL_GetAudioDeviceStatus","","",N,N],[5,"SDL_PauseAudio","","",N,N],[5,"SDL_PauseAudioDevice","","",N,N],[5,"SDL_LoadWAV_RW","","This function loads a WAVE from the data source, automatically freeing that source if \\c freesrc is non-zero.  For example, to load a WAVE file, you could do: \\code SDL_LoadWAV_RW(SDL_RWFromFile(\"sample.wav\", \"rb\"), 1, ...); \\endcode",N,N],[5,"SDL_FreeWAV","","This function frees data previously allocated with SDL_LoadWAV_RW()",N,N],[5,"SDL_BuildAudioCVT","","This function takes a source format and rate and a destination format and rate, and initializes the \\c cvt structure with information needed by SDL_ConvertAudio() to convert a buffer of audio data from one format to the other. An unsupported format causes an error and -1 will be returned.",N,N],[5,"SDL_ConvertAudio","","Once you have initialized the \\c cvt structure using SDL_BuildAudioCVT(), created an audio buffer \\c cvt->buf, and filled it with \\c cvt->len bytes of audio data in the source format, this function will convert it in-place to the desired format.",N,N],[5,"SDL_MixAudio","","This takes two audio buffers of the playing audio format and mixes them, performing addition, volume adjustment, and overflow clipping. The volume ranges from 0 - 128, and should be set to ::SDL_MIX_MAXVOLUME for full audio volume.  Note this does not change hardware volume. This is provided for convenience -- you can mix your own audio data.",N,N],[5,"SDL_MixAudioFormat","","This works like SDL_MixAudio(), but you specify the audio format instead of using the format of audio device 1. Thus it can be used when no audio device is open at all.",N,N],[5,"SDL_QueueAudio","","Queue more audio on non-callback devices.",N,N],[5,"SDL_DequeueAudio","","Dequeue more audio on non-callback devices.",N,N],[5,"SDL_GetQueuedAudioSize","","Get the number of bytes of still-queued audio.",N,N],[5,"SDL_ClearQueuedAudio","","Drop any queued audio data. For playback devices, this is any queued data still waiting to be submitted to the hardware. For capture devices, this is any data that was queued by the device that hasn't yet been dequeued by the application.",N,N],[5,"SDL_LockAudio","","",N,N],[5,"SDL_LockAudioDevice","","",N,N],[5,"SDL_UnlockAudio","","",N,N],[5,"SDL_UnlockAudioDevice","","",N,N],[5,"SDL_CloseAudio","","This function shuts down audio processing and closes the audio device.",N,N],[5,"SDL_CloseAudioDevice","","",N,N],[5,"SDL_SetClipboardText","","\\brief Put UTF-8 text into the clipboard",N,N],[5,"SDL_GetClipboardText","","\\brief Get UTF-8 text from the clipboard, which must be freed with SDL_free()",N,N],[5,"SDL_HasClipboardText","","\\brief Returns a flag indicating whether the clipboard exists and contains a text string that is non-empty",N,N],[5,"__ctype_get_mb_cur_max","","",N,N],[5,"atof","","",N,N],[5,"atoi","","",N,N],[5,"atol","","",N,N],[5,"atoll","","",N,N],[5,"strtod","","",N,N],[5,"strtof","","",N,N],[5,"strtold","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"strtoq","","",N,N],[5,"strtouq","","",N,N],[5,"strtoll","","",N,N],[5,"strtoull","","",N,N],[5,"l64a","","",N,N],[5,"a64l","","",N,N],[5,"select","","",N,N],[5,"pselect","","",N,N],[5,"gnu_dev_major","","",N,N],[5,"gnu_dev_minor","","",N,N],[5,"gnu_dev_makedev","","",N,N],[5,"random","","",N,N],[5,"srandom","","",N,N],[5,"initstate","","",N,N],[5,"setstate","","",N,N],[5,"random_r","","",N,N],[5,"srandom_r","","",N,N],[5,"initstate_r","","",N,N],[5,"setstate_r","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"rand_r","","",N,N],[5,"drand48","","",N,N],[5,"erand48","","",N,N],[5,"lrand48","","",N,N],[5,"nrand48","","",N,N],[5,"mrand48","","",N,N],[5,"jrand48","","",N,N],[5,"srand48","","",N,N],[5,"seed48","","",N,N],[5,"lcong48","","",N,N],[5,"drand48_r","","",N,N],[5,"erand48_r","","",N,N],[5,"lrand48_r","","",N,N],[5,"nrand48_r","","",N,N],[5,"mrand48_r","","",N,N],[5,"jrand48_r","","",N,N],[5,"srand48_r","","",N,N],[5,"seed48_r","","",N,N],[5,"lcong48_r","","",N,N],[5,"malloc","","",N,N],[5,"calloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"alloca","","",N,N],[5,"valloc","","",N,N],[5,"posix_memalign","","",N,N],[5,"aligned_alloc","","",N,N],[5,"abort","","",N,N],[5,"atexit","","",N,N],[5,"at_quick_exit","","",N,N],[5,"on_exit","","",N,N],[5,"exit","","",N,N],[5,"quick_exit","","",N,N],[5,"_Exit","","",N,N],[5,"getenv","","",N,N],[5,"putenv","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"clearenv","","",N,N],[5,"mktemp","","",N,N],[5,"mkstemp","","",N,N],[5,"mkstemps","","",N,N],[5,"mkdtemp","","",N,N],[5,"system","","",N,N],[5,"realpath","","",N,N],[5,"bsearch","","",N,N],[5,"qsort","","",N,N],[5,"abs","","",N,N],[5,"labs","","",N,N],[5,"llabs","","",N,N],[5,"div","","",N,N],[5,"ldiv","","",N,N],[5,"lldiv","","",N,N],[5,"ecvt","","",N,N],[5,"fcvt","","",N,N],[5,"gcvt","","",N,N],[5,"qecvt","","",N,N],[5,"qfcvt","","",N,N],[5,"qgcvt","","",N,N],[5,"ecvt_r","","",N,N],[5,"fcvt_r","","",N,N],[5,"qecvt_r","","",N,N],[5,"qfcvt_r","","",N,N],[5,"mblen","","",N,N],[5,"mbtowc","","",N,N],[5,"wctomb","","",N,N],[5,"mbstowcs","","",N,N],[5,"wcstombs","","",N,N],[5,"rpmatch","","",N,N],[5,"getsubopt","","",N,N],[5,"getloadavg","","",N,N],[5,"_mm_sfence","","",N,N],[5,"_mm_getcsr","","",N,N],[5,"_mm_setcsr","","",N,N],[5,"_mm_clflush","","",N,N],[5,"_mm_lfence","","",N,N],[5,"_mm_mfence","","",N,N],[5,"_mm_pause","","",N,N],[5,"SDL_GetCPUCount","","This function returns the number of CPU cores available.",N,N],[5,"SDL_GetCPUCacheLineSize","","This function returns the L1 cache line size of the CPU",N,N],[5,"SDL_HasRDTSC","","This function returns true if the CPU has the RDTSC instruction.",N,N],[5,"SDL_HasAltiVec","","This function returns true if the CPU has AltiVec features.",N,N],[5,"SDL_HasMMX","","This function returns true if the CPU has MMX features.",N,N],[5,"SDL_Has3DNow","","This function returns true if the CPU has 3DNow! features.",N,N],[5,"SDL_HasSSE","","This function returns true if the CPU has SSE features.",N,N],[5,"SDL_HasSSE2","","This function returns true if the CPU has SSE2 features.",N,N],[5,"SDL_HasSSE3","","This function returns true if the CPU has SSE3 features.",N,N],[5,"SDL_HasSSE41","","This function returns true if the CPU has SSE4.1 features.",N,N],[5,"SDL_HasSSE42","","This function returns true if the CPU has SSE4.2 features.",N,N],[5,"SDL_HasAVX","","This function returns true if the CPU has AVX features.",N,N],[5,"SDL_HasAVX2","","This function returns true if the CPU has AVX2 features.",N,N],[5,"SDL_HasNEON","","This function returns true if the CPU has NEON (ARM SIMD) features.",N,N],[5,"SDL_GetSystemRAM","","This function returns the amount of RAM configured in the system, in MB.",N,N],[5,"SDL_GetPixelFormatName","","\\brief Get the human readable name of a pixel format",N,N],[5,"SDL_PixelFormatEnumToMasks","","\\brief Convert one of the enumerated pixel formats to a bpp and RGBA masks.",N,N],[5,"SDL_MasksToPixelFormatEnum","","\\brief Convert a bpp and RGBA masks to an enumerated pixel format.",N,N],[5,"SDL_AllocFormat","","\\brief Create an SDL_PixelFormat structure from a pixel format enum.",N,N],[5,"SDL_FreeFormat","","\\brief Free an SDL_PixelFormat structure.",N,N],[5,"SDL_AllocPalette","","\\brief Create a palette structure with the specified number of color entries.",N,N],[5,"SDL_SetPixelFormatPalette","","\\brief Set the palette for a pixel format structure.",N,N],[5,"SDL_SetPaletteColors","","\\brief Set a range of colors in a palette.",N,N],[5,"SDL_FreePalette","","\\brief Free a palette created with SDL_AllocPalette().",N,N],[5,"SDL_MapRGB","","\\brief Maps an RGB triple to an opaque pixel value for a given pixel format.",N,N],[5,"SDL_MapRGBA","","\\brief Maps an RGBA quadruple to a pixel value for a given pixel format.",N,N],[5,"SDL_GetRGB","","\\brief Get the RGB components from a pixel of the specified format.",N,N],[5,"SDL_GetRGBA","","\\brief Get the RGBA components from a pixel of the specified format.",N,N],[5,"SDL_CalculateGammaRamp","","\\brief Calculate a 256 entry gamma ramp for a gamma value.",N,N],[5,"SDL_HasIntersection","","\\brief Determine whether two rectangles intersect.",N,N],[5,"SDL_IntersectRect","","\\brief Calculate the intersection of two rectangles.",N,N],[5,"SDL_UnionRect","","\\brief Calculate the union of two rectangles.",N,N],[5,"SDL_EnclosePoints","","\\brief Calculate a minimal rectangle enclosing a set of points",N,N],[5,"SDL_IntersectRectAndLine","","\\brief Calculate the intersection of a rectangle and line segment.",N,N],[5,"SDL_ComposeCustomBlendMode","","\\brief Create a custom blend mode, which may or may not be supported by a given renderer",N,N],[5,"SDL_CreateRGBSurface","","Allocate and free an RGB surface.",N,N],[5,"SDL_CreateRGBSurfaceWithFormat","","",N,N],[5,"SDL_CreateRGBSurfaceFrom","","",N,N],[5,"SDL_CreateRGBSurfaceWithFormatFrom","","",N,N],[5,"SDL_FreeSurface","","",N,N],[5,"SDL_SetSurfacePalette","","\\brief Set the palette used by a surface.",N,N],[5,"SDL_LockSurface","","\\brief Sets up a surface for directly accessing the pixels.",N,N],[5,"SDL_UnlockSurface","","\\sa SDL_LockSurface()",N,N],[5,"SDL_LoadBMP_RW","","Load a surface from a seekable SDL data stream (memory or file).",N,N],[5,"SDL_SaveBMP_RW","","Save a surface to a seekable SDL data stream (memory or file).",N,N],[5,"SDL_SetSurfaceRLE","","\\brief Sets the RLE acceleration hint for a surface.",N,N],[5,"SDL_SetColorKey","","\\brief Sets the color key (transparent pixel) in a blittable surface.",N,N],[5,"SDL_GetColorKey","","\\brief Gets the color key (transparent pixel) in a blittable surface.",N,N],[5,"SDL_SetSurfaceColorMod","","\\brief Set an additional color value used in blit operations.",N,N],[5,"SDL_GetSurfaceColorMod","","\\brief Get the additional color value used in blit operations.",N,N],[5,"SDL_SetSurfaceAlphaMod","","\\brief Set an additional alpha value used in blit operations.",N,N],[5,"SDL_GetSurfaceAlphaMod","","\\brief Get the additional alpha value used in blit operations.",N,N],[5,"SDL_SetSurfaceBlendMode","","\\brief Set the blend mode used for blit operations.",N,N],[5,"SDL_GetSurfaceBlendMode","","\\brief Get the blend mode used for blit operations.",N,N],[5,"SDL_SetClipRect","","Sets the clipping rectangle for the destination surface in a blit.",N,N],[5,"SDL_GetClipRect","","Gets the clipping rectangle for the destination surface in a blit.",N,N],[5,"SDL_DuplicateSurface","","",N,N],[5,"SDL_ConvertSurface","","Creates a new surface of the specified format, and then copies and maps the given surface to it so the blit of the converted surface will be as fast as possible.  If this function fails, it returns NULL.",N,N],[5,"SDL_ConvertSurfaceFormat","","",N,N],[5,"SDL_ConvertPixels","","\\brief Copy a block of pixels of one format to another format",N,N],[5,"SDL_FillRect","","Performs a fast fill of the given rectangle with \\c color.",N,N],[5,"SDL_FillRects","","",N,N],[5,"SDL_UpperBlit","","This is the public blit function, SDL_BlitSurface(), and it performs rectangle validation and clipping before passing it to SDL_LowerBlit()",N,N],[5,"SDL_LowerBlit","","This is a semi-private blit function and it performs low-level surface blitting only.",N,N],[5,"SDL_SoftStretch","","\\brief Perform a fast, low quality, stretch blit between two surfaces of the same pixel format.",N,N],[5,"SDL_UpperBlitScaled","","This is the public scaled blit function, SDL_BlitScaled(), and it performs rectangle validation and clipping before passing it to SDL_LowerBlitScaled()",N,N],[5,"SDL_LowerBlitScaled","","This is a semi-private blit function and it performs low-level surface scaled blitting only.",N,N],[5,"SDL_GetNumVideoDrivers","","\\brief Get the number of video drivers compiled into SDL",N,N],[5,"SDL_GetVideoDriver","","\\brief Get the name of a built in video driver.",N,N],[5,"SDL_VideoInit","","\\brief Initialize the video subsystem, optionally specifying a video driver.",N,N],[5,"SDL_VideoQuit","","\\brief Shuts down the video subsystem.",N,N],[5,"SDL_GetCurrentVideoDriver","","\\brief Returns the name of the currently initialized video driver.",N,N],[5,"SDL_GetNumVideoDisplays","","\\brief Returns the number of available video displays.",N,N],[5,"SDL_GetDisplayName","","\\brief Get the name of a display in UTF-8 encoding",N,N],[5,"SDL_GetDisplayBounds","","\\brief Get the desktop area represented by a display, with the primary display located at 0,0",N,N],[5,"SDL_GetDisplayDPI","","\\brief Get the dots/pixels-per-inch for a display",N,N],[5,"SDL_GetDisplayUsableBounds","","\\brief Get the usable desktop area represented by a display, with the primary display located at 0,0",N,N],[5,"SDL_GetNumDisplayModes","","\\brief Returns the number of available display modes.",N,N],[5,"SDL_GetDisplayMode","","\\brief Fill in information about a specific display mode.",N,N],[5,"SDL_GetDesktopDisplayMode","","\\brief Fill in information about the desktop display mode.",N,N],[5,"SDL_GetCurrentDisplayMode","","\\brief Fill in information about the current display mode.",N,N],[5,"SDL_GetClosestDisplayMode","","\\brief Get the closest match to the requested display mode.",N,N],[5,"SDL_GetWindowDisplayIndex","","\\brief Get the display index associated with a window.",N,N],[5,"SDL_SetWindowDisplayMode","","\\brief Set the display mode used when a fullscreen window is visible.",N,N],[5,"SDL_GetWindowDisplayMode","","\\brief Fill in information about the display mode used when a fullscreen window is visible.",N,N],[5,"SDL_GetWindowPixelFormat","","\\brief Get the pixel format associated with the window.",N,N],[5,"SDL_CreateWindow","","\\brief Create a window with the specified position, dimensions, and flags.",N,N],[5,"SDL_CreateWindowFrom","","\\brief Create an SDL window from an existing native window.",N,N],[5,"SDL_GetWindowID","","\\brief Get the numeric ID of a window, for logging purposes.",N,N],[5,"SDL_GetWindowFromID","","\\brief Get a window from a stored ID, or NULL if it doesn't exist.",N,N],[5,"SDL_GetWindowFlags","","\\brief Get the window flags.",N,N],[5,"SDL_SetWindowTitle","","\\brief Set the title of a window, in UTF-8 format.",N,N],[5,"SDL_GetWindowTitle","","\\brief Get the title of a window, in UTF-8 format.",N,N],[5,"SDL_SetWindowIcon","","\\brief Set the icon for a window.",N,N],[5,"SDL_SetWindowData","","\\brief Associate an arbitrary named pointer with a window.",N,N],[5,"SDL_GetWindowData","","\\brief Retrieve the data pointer associated with a window.",N,N],[5,"SDL_SetWindowPosition","","\\brief Set the position of a window.",N,N],[5,"SDL_GetWindowPosition","","\\brief Get the position of a window.",N,N],[5,"SDL_SetWindowSize","","\\brief Set the size of a window's client area.",N,N],[5,"SDL_GetWindowSize","","\\brief Get the size of a window's client area.",N,N],[5,"SDL_GetWindowBordersSize","","\\brief Get the size of a window's borders (decorations) around the client area.",N,N],[5,"SDL_SetWindowMinimumSize","","\\brief Set the minimum size of a window's client area.",N,N],[5,"SDL_GetWindowMinimumSize","","\\brief Get the minimum size of a window's client area.",N,N],[5,"SDL_SetWindowMaximumSize","","\\brief Set the maximum size of a window's client area.",N,N],[5,"SDL_GetWindowMaximumSize","","\\brief Get the maximum size of a window's client area.",N,N],[5,"SDL_SetWindowBordered","","\\brief Set the border state of a window.",N,N],[5,"SDL_SetWindowResizable","","\\brief Set the user-resizable state of a window.",N,N],[5,"SDL_ShowWindow","","\\brief Show a window.",N,N],[5,"SDL_HideWindow","","\\brief Hide a window.",N,N],[5,"SDL_RaiseWindow","","\\brief Raise a window above other windows and set the input focus.",N,N],[5,"SDL_MaximizeWindow","","\\brief Make a window as large as possible.",N,N],[5,"SDL_MinimizeWindow","","\\brief Minimize a window to an iconic representation.",N,N],[5,"SDL_RestoreWindow","","\\brief Restore the size and position of a minimized or maximized window.",N,N],[5,"SDL_SetWindowFullscreen","","\\brief Set a window's fullscreen state.",N,N],[5,"SDL_GetWindowSurface","","\\brief Get the SDL surface associated with the window.",N,N],[5,"SDL_UpdateWindowSurface","","\\brief Copy the window surface to the screen.",N,N],[5,"SDL_UpdateWindowSurfaceRects","","\\brief Copy a number of rectangles on the window surface to the screen.",N,N],[5,"SDL_SetWindowGrab","","\\brief Set a window's input grab mode.",N,N],[5,"SDL_GetWindowGrab","","\\brief Get a window's input grab mode.",N,N],[5,"SDL_GetGrabbedWindow","","\\brief Get the window that currently has an input grab enabled.",N,N],[5,"SDL_SetWindowBrightness","","\\brief Set the brightness (gamma correction) for a window.",N,N],[5,"SDL_GetWindowBrightness","","\\brief Get the brightness (gamma correction) for a window.",N,N],[5,"SDL_SetWindowOpacity","","\\brief Set the opacity for a window",N,N],[5,"SDL_GetWindowOpacity","","\\brief Get the opacity of a window.",N,N],[5,"SDL_SetWindowModalFor","","\\brief Sets the window as a modal for another window (TODO: reconsider this function and/or its name)",N,N],[5,"SDL_SetWindowInputFocus","","\\brief Explicitly sets input focus to the window.",N,N],[5,"SDL_SetWindowGammaRamp","","\\brief Set the gamma ramp for a window.",N,N],[5,"SDL_GetWindowGammaRamp","","\\brief Get the gamma ramp for a window.",N,N],[5,"SDL_SetWindowHitTest","","\\brief Provide a callback that decides if a window region has special properties.",N,N],[5,"SDL_DestroyWindow","","\\brief Destroy a window.",N,N],[5,"SDL_IsScreenSaverEnabled","","\\brief Returns whether the screensaver is currently enabled (default off).",N,N],[5,"SDL_EnableScreenSaver","","\\brief Allow the screen to be blanked by a screensaver",N,N],[5,"SDL_DisableScreenSaver","","\\brief Prevent the screen from being blanked by a screensaver",N,N],[5,"SDL_GL_LoadLibrary","","\\brief Dynamically load an OpenGL library.",N,N],[5,"SDL_GL_GetProcAddress","","\\brief Get the address of an OpenGL function.",N,N],[5,"SDL_GL_UnloadLibrary","","\\brief Unload the OpenGL library previously loaded by SDL_GL_LoadLibrary().",N,N],[5,"SDL_GL_ExtensionSupported","","\\brief Return true if an OpenGL extension is supported for the current context.",N,N],[5,"SDL_GL_ResetAttributes","","\\brief Reset all previously set OpenGL context attributes to their default values",N,N],[5,"SDL_GL_SetAttribute","","\\brief Set an OpenGL window attribute before window creation.",N,N],[5,"SDL_GL_GetAttribute","","\\brief Get the actual value for an attribute from the current context.",N,N],[5,"SDL_GL_CreateContext","","\\brief Create an OpenGL context for use with an OpenGL window, and make it current.",N,N],[5,"SDL_GL_MakeCurrent","","\\brief Set up an OpenGL context for rendering into an OpenGL window.",N,N],[5,"SDL_GL_GetCurrentWindow","","\\brief Get the currently active OpenGL window.",N,N],[5,"SDL_GL_GetCurrentContext","","\\brief Get the currently active OpenGL context.",N,N],[5,"SDL_GL_GetDrawableSize","","\\brief Get the size of a window's underlying drawable in pixels (for use with glViewport).",N,N],[5,"SDL_GL_SetSwapInterval","","\\brief Set the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_GetSwapInterval","","\\brief Get the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_SwapWindow","","\\brief Swap the OpenGL buffers for a window, if double-buffering is supported.",N,N],[5,"SDL_GL_DeleteContext","","\\brief Delete an OpenGL context.",N,N],[5,"SDL_GetKeyboardFocus","","\\brief Get the window which currently has keyboard focus.",N,N],[5,"SDL_GetKeyboardState","","\\brief Get a snapshot of the current state of the keyboard.",N,N],[5,"SDL_GetModState","","\\brief Get the current key modifier state for the keyboard.",N,N],[5,"SDL_SetModState","","\\brief Set the current key modifier state for the keyboard.",N,N],[5,"SDL_GetKeyFromScancode","","\\brief Get the key code corresponding to the given scancode according to the current keyboard layout.",N,N],[5,"SDL_GetScancodeFromKey","","\\brief Get the scancode corresponding to the given key code according to the current keyboard layout.",N,N],[5,"SDL_GetScancodeName","","\\brief Get a human-readable name for a scancode.",N,N],[5,"SDL_GetScancodeFromName","","\\brief Get a scancode from a human-readable name",N,N],[5,"SDL_GetKeyName","","\\brief Get a human-readable name for a key.",N,N],[5,"SDL_GetKeyFromName","","\\brief Get a key code from a human-readable name",N,N],[5,"SDL_StartTextInput","","\\brief Start accepting Unicode text input events. This function will show the on-screen keyboard if supported.",N,N],[5,"SDL_IsTextInputActive","","\\brief Return whether or not Unicode text input events are enabled.",N,N],[5,"SDL_StopTextInput","","\\brief Stop receiving any text input events. This function will hide the on-screen keyboard if supported.",N,N],[5,"SDL_SetTextInputRect","","\\brief Set the rectangle used to type Unicode text inputs. This is used as a hint for IME and on-screen keyboard placement.",N,N],[5,"SDL_HasScreenKeyboardSupport","","\\brief Returns whether the platform has some screen keyboard support.",N,N],[5,"SDL_IsScreenKeyboardShown","","\\brief Returns whether the screen keyboard is shown for given window.",N,N],[5,"SDL_GetMouseFocus","","\\brief Get the window which currently has mouse focus.",N,N],[5,"SDL_GetMouseState","","\\brief Retrieve the current state of the mouse.",N,N],[5,"SDL_GetGlobalMouseState","","\\brief Get the current state of the mouse, in relation to the desktop",N,N],[5,"SDL_GetRelativeMouseState","","\\brief Retrieve the relative state of the mouse.",N,N],[5,"SDL_WarpMouseInWindow","","\\brief Moves the mouse to the given position within the window.",N,N],[5,"SDL_WarpMouseGlobal","","\\brief Moves the mouse to the given position in global screen space.",N,N],[5,"SDL_SetRelativeMouseMode","","\\brief Set relative mouse mode.",N,N],[5,"SDL_CaptureMouse","","\\brief Capture the mouse, to track input outside an SDL window.",N,N],[5,"SDL_GetRelativeMouseMode","","\\brief Query whether relative mouse mode is enabled.",N,N],[5,"SDL_CreateCursor","","\\brief Create a cursor, using the specified bitmap data and mask (in MSB format).",N,N],[5,"SDL_CreateColorCursor","","\\brief Create a color cursor.",N,N],[5,"SDL_CreateSystemCursor","","\\brief Create a system cursor.",N,N],[5,"SDL_SetCursor","","\\brief Set the active cursor.",N,N],[5,"SDL_GetCursor","","\\brief Return the active cursor.",N,N],[5,"SDL_GetDefaultCursor","","\\brief Return the default cursor.",N,N],[5,"SDL_FreeCursor","","\\brief Frees a cursor created with SDL_CreateCursor() or similar functions.",N,N],[5,"SDL_ShowCursor","","\\brief Toggle whether or not the cursor is shown.",N,N],[5,"SDL_NumJoysticks","","Count the number of joysticks attached to the system right now",N,N],[5,"SDL_JoystickNameForIndex","","Get the implementation dependent name of a joystick. This can be called before any joysticks are opened. If no name can be found, this function returns NULL.",N,N],[5,"SDL_JoystickGetDeviceGUID","","Return the GUID for the joystick at this index This can be called before any joysticks are opened.",N,N],[5,"SDL_JoystickGetDeviceVendor","","Get the USB vendor ID of a joystick, if available. This can be called before any joysticks are opened. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceProduct","","Get the USB product ID of a joystick, if available. This can be called before any joysticks are opened. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceProductVersion","","Get the product version of a joystick, if available. This can be called before any joysticks are opened. If the product version isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceType","","Get the type of a joystick, if available. This can be called before any joysticks are opened.",N,N],[5,"SDL_JoystickGetDeviceInstanceID","","Get the instance ID of a joystick. This can be called before any joysticks are opened. If the index is out of range, this function will return -1.",N,N],[5,"SDL_JoystickOpen","","Open a joystick for use. The index passed as an argument refers to the N'th joystick on the system. This index is not the value which will identify this joystick in future joystick events.  The joystick's instance id (::SDL_JoystickID) will be used there instead.",N,N],[5,"SDL_JoystickFromInstanceID","","Return the SDL_Joystick associated with an instance id.",N,N],[5,"SDL_JoystickName","","Return the name for this currently opened joystick. If no name can be found, this function returns NULL.",N,N],[5,"SDL_JoystickGetGUID","","Return the GUID for this opened joystick",N,N],[5,"SDL_JoystickGetVendor","","Get the USB vendor ID of an opened joystick, if available. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetProduct","","Get the USB product ID of an opened joystick, if available. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetProductVersion","","Get the product version of an opened joystick, if available. If the product version isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetType","","Get the type of an opened joystick.",N,N],[5,"SDL_JoystickGetGUIDString","","Return a string representation for this guid. pszGUID must point to at least 33 bytes (32 for the string plus a NULL terminator).",N,N],[5,"SDL_JoystickGetGUIDFromString","","Convert a string into a joystick guid",N,N],[5,"SDL_JoystickGetAttached","","Returns SDL_TRUE if the joystick has been opened and currently connected, or SDL_FALSE if it has not.",N,N],[5,"SDL_JoystickInstanceID","","Get the instance ID of an opened joystick or -1 if the joystick is invalid.",N,N],[5,"SDL_JoystickNumAxes","","Get the number of general axis controls on a joystick.",N,N],[5,"SDL_JoystickNumBalls","","Get the number of trackballs on a joystick.",N,N],[5,"SDL_JoystickNumHats","","Get the number of POV hats on a joystick.",N,N],[5,"SDL_JoystickNumButtons","","Get the number of buttons on a joystick.",N,N],[5,"SDL_JoystickUpdate","","Update the current state of the open joysticks.",N,N],[5,"SDL_JoystickEventState","","Enable/disable joystick event polling.",N,N],[5,"SDL_JoystickGetAxis","","Get the current state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetAxisInitialState","","Get the initial state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetHat","","Get the current state of a POV hat on a joystick.",N,N],[5,"SDL_JoystickGetBall","","Get the ball axis change since the last poll.",N,N],[5,"SDL_JoystickGetButton","","Get the current state of a button on a joystick.",N,N],[5,"SDL_JoystickClose","","Close a joystick previously opened with SDL_JoystickOpen().",N,N],[5,"SDL_JoystickCurrentPowerLevel","","Return the battery level of this joystick",N,N],[5,"SDL_GameControllerAddMappingsFromRW","","Load a set of mappings from a seekable SDL data stream (memory or file), filtered by the current SDL_GetPlatform() A community sourced database of controllers is available at https://raw.github.com/gabomdq/SDL_GameControllerDB/master/gamecontrollerdb.txt",N,N],[5,"SDL_GameControllerAddMapping","","Add or update an existing mapping configuration",N,N],[5,"SDL_GameControllerNumMappings","","Get the number of mappings installed",N,N],[5,"SDL_GameControllerMappingForIndex","","Get the mapping at a particular index.",N,N],[5,"SDL_GameControllerMappingForGUID","","Get a mapping string for a GUID",N,N],[5,"SDL_GameControllerMapping","","Get a mapping string for an open GameController",N,N],[5,"SDL_IsGameController","","Is the joystick on this index supported by the game controller interface?",N,N],[5,"SDL_GameControllerNameForIndex","","Get the implementation dependent name of a game controller. This can be called before any controllers are opened. If no name can be found, this function returns NULL.",N,N],[5,"SDL_GameControllerOpen","","Open a game controller for use. The index passed as an argument refers to the N'th game controller on the system. This index is not the value which will identify this controller in future controller events.  The joystick's instance id (::SDL_JoystickID) will be used there instead.",N,N],[5,"SDL_GameControllerFromInstanceID","","Return the SDL_GameController associated with an instance id.",N,N],[5,"SDL_GameControllerName","","Return the name for this currently opened controller",N,N],[5,"SDL_GameControllerGetVendor","","Get the USB vendor ID of an opened controller, if available. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetProduct","","Get the USB product ID of an opened controller, if available. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetProductVersion","","Get the product version of an opened controller, if available. If the product version isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetAttached","","Returns SDL_TRUE if the controller has been opened and currently connected, or SDL_FALSE if it has not.",N,N],[5,"SDL_GameControllerGetJoystick","","Get the underlying joystick object used by a controller",N,N],[5,"SDL_GameControllerEventState","","Enable/disable controller event polling.",N,N],[5,"SDL_GameControllerUpdate","","Update the current state of the open game controllers.",N,N],[5,"SDL_GameControllerGetAxisFromString","","turn this string into a axis mapping",N,N],[5,"SDL_GameControllerGetStringForAxis","","turn this axis enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForAxis","","Get the SDL joystick layer binding for this controller button mapping",N,N],[5,"SDL_GameControllerGetAxis","","Get the current state of an axis control on a game controller.",N,N],[5,"SDL_GameControllerGetButtonFromString","","turn this string into a button mapping",N,N],[5,"SDL_GameControllerGetStringForButton","","turn this button enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForButton","","Get the SDL joystick layer binding for this controller button mapping",N,N],[5,"SDL_GameControllerGetButton","","Get the current state of a button on a game controller.",N,N],[5,"SDL_GameControllerClose","","Close a controller previously opened with SDL_GameControllerOpen().",N,N],[5,"SDL_GetNumTouchDevices","","\\brief Get the number of registered touch devices.",N,N],[5,"SDL_GetTouchDevice","","\\brief Get the touch ID with the given index, or 0 if the index is invalid.",N,N],[5,"SDL_GetNumTouchFingers","","\\brief Get the number of active fingers for a given touch device.",N,N],[5,"SDL_GetTouchFinger","","\\brief Get the finger object of the given touch, with the given index.",N,N],[5,"SDL_RecordGesture","","\\brief Begin Recording a gesture on the specified touch, or all touches (-1)",N,N],[5,"SDL_SaveAllDollarTemplates","","\\brief Save all currently loaded Dollar Gesture templates",N,N],[5,"SDL_SaveDollarTemplate","","\\brief Save a currently loaded Dollar Gesture template",N,N],[5,"SDL_LoadDollarTemplates","","\\brief Load Dollar Gesture templates from a file",N,N],[5,"SDL_PumpEvents","","Pumps the event loop, gathering events from the input devices.",N,N],[5,"SDL_PeepEvents","","Checks the event queue for messages and optionally returns them.",N,N],[5,"SDL_HasEvent","","Checks to see if certain event types are in the event queue.",N,N],[5,"SDL_HasEvents","","",N,N],[5,"SDL_FlushEvent","","This function clears events from the event queue This function only affects currently queued events. If you want to make sure that all pending OS events are flushed, you can call SDL_PumpEvents() on the main thread immediately before the flush call.",N,N],[5,"SDL_FlushEvents","","",N,N],[5,"SDL_PollEvent","","\\brief Polls for currently pending events.",N,N],[5,"SDL_WaitEvent","","\\brief Waits indefinitely for the next available event.",N,N],[5,"SDL_WaitEventTimeout","","\\brief Waits until the specified timeout (in milliseconds) for the next available event.",N,N],[5,"SDL_PushEvent","","\\brief Add an event to the event queue.",N,N],[5,"SDL_SetEventFilter","","Sets up a filter to process all events before they change internal state and are posted to the internal event queue.",N,N],[5,"SDL_GetEventFilter","","Return the current event filter - can be used to \"chain\" filters. If there is no event filter set, this function returns SDL_FALSE.",N,N],[5,"SDL_AddEventWatch","","Add a function which is called when an event is added to the queue.",N,N],[5,"SDL_DelEventWatch","","Remove an event watch function added with SDL_AddEventWatch()",N,N],[5,"SDL_FilterEvents","","Run the filter function on the current event queue, removing any events for which the filter returns 0.",N,N],[5,"SDL_EventState","","This function allows you to set the state of processing certain events. - If \\c state is set to ::SDL_IGNORE, that event will be automatically dropped from the event queue and will not be filtered. - If \\c state is set to ::SDL_ENABLE, that event will be processed normally. - If \\c state is set to ::SDL_QUERY, SDL_EventState() will return the current processing state of the specified event.",N,N],[5,"SDL_RegisterEvents","","This function allocates a set of user-defined events, and returns the beginning event number for that set of events.",N,N],[5,"SDL_GetBasePath","","\\brief Get the path where the application resides.",N,N],[5,"SDL_GetPrefPath","","\\brief Get the user-and-app-specific path where files can be written.",N,N],[5,"SDL_NumHaptics","","\\brief Count the number of haptic devices attached to the system.",N,N],[5,"SDL_HapticName","","\\brief Get the implementation dependent name of a haptic device.",N,N],[5,"SDL_HapticOpen","","\\brief Opens a haptic device for use.",N,N],[5,"SDL_HapticOpened","","\\brief Checks if the haptic device at index has been opened.",N,N],[5,"SDL_HapticIndex","","\\brief Gets the index of a haptic device.",N,N],[5,"SDL_MouseIsHaptic","","\\brief Gets whether or not the current mouse has haptic capabilities.",N,N],[5,"SDL_HapticOpenFromMouse","","\\brief Tries to open a haptic device from the current mouse.",N,N],[5,"SDL_JoystickIsHaptic","","\\brief Checks to see if a joystick has haptic features.",N,N],[5,"SDL_HapticOpenFromJoystick","","\\brief Opens a haptic device for use from a joystick device.",N,N],[5,"SDL_HapticClose","","\\brief Closes a haptic device previously opened with SDL_HapticOpen().",N,N],[5,"SDL_HapticNumEffects","","\\brief Returns the number of effects a haptic device can store.",N,N],[5,"SDL_HapticNumEffectsPlaying","","\\brief Returns the number of effects a haptic device can play at the same time.",N,N],[5,"SDL_HapticQuery","","\\brief Gets the haptic device's supported features in bitwise manner.",N,N],[5,"SDL_HapticNumAxes","","\\brief Gets the number of haptic axes the device has.",N,N],[5,"SDL_HapticEffectSupported","","\\brief Checks to see if effect is supported by haptic.",N,N],[5,"SDL_HapticNewEffect","","\\brief Creates a new haptic effect on the device.",N,N],[5,"SDL_HapticUpdateEffect","","\\brief Updates the properties of an effect.",N,N],[5,"SDL_HapticRunEffect","","\\brief Runs the haptic effect on its associated haptic device.",N,N],[5,"SDL_HapticStopEffect","","\\brief Stops the haptic effect on its associated haptic device.",N,N],[5,"SDL_HapticDestroyEffect","","\\brief Destroys a haptic effect on the device.",N,N],[5,"SDL_HapticGetEffectStatus","","\\brief Gets the status of the current effect on the haptic device.",N,N],[5,"SDL_HapticSetGain","","\\brief Sets the global gain of the device.",N,N],[5,"SDL_HapticSetAutocenter","","\\brief Sets the global autocenter of the device.",N,N],[5,"SDL_HapticPause","","\\brief Pauses a haptic device.",N,N],[5,"SDL_HapticUnpause","","\\brief Unpauses a haptic device.",N,N],[5,"SDL_HapticStopAll","","\\brief Stops all the currently playing effects on a haptic device.",N,N],[5,"SDL_HapticRumbleSupported","","\\brief Checks to see if rumble is supported on a haptic device.",N,N],[5,"SDL_HapticRumbleInit","","\\brief Initializes the haptic device for simple rumble playback.",N,N],[5,"SDL_HapticRumblePlay","","\\brief Runs simple rumble on a haptic device",N,N],[5,"SDL_HapticRumbleStop","","\\brief Stops the simple rumble on a haptic device.",N,N],[5,"SDL_SetHintWithPriority","","\\brief Set a hint with a specific priority",N,N],[5,"SDL_SetHint","","\\brief Set a hint with normal priority",N,N],[5,"SDL_GetHint","","\\brief Get a hint",N,N],[5,"SDL_GetHintBoolean","","\\brief Get a hint",N,N],[5,"SDL_AddHintCallback","","\\brief Add a function to watch a particular hint",N,N],[5,"SDL_DelHintCallback","","\\brief Remove a function watching a particular hint",N,N],[5,"SDL_ClearHints","","\\brief  Clear all hints",N,N],[5,"SDL_LoadObject","","This function dynamically loads a shared object and returns a pointer to the object handle (or NULL if there was an error). The 'sofile' parameter is a system dependent name of the object file.",N,N],[5,"SDL_LoadFunction","","Given an object handle, this function looks up the address of the named function in the shared object and returns it.  This address is no longer valid after calling SDL_UnloadObject().",N,N],[5,"SDL_UnloadObject","","Unload a shared object from memory.",N,N],[5,"SDL_LogSetAllPriority","","\\brief Set the priority of all log categories",N,N],[5,"SDL_LogSetPriority","","\\brief Set the priority of a particular log category",N,N],[5,"SDL_LogGetPriority","","\\brief Get the priority of a particular log category",N,N],[5,"SDL_LogResetPriorities","","\\brief Reset all priorities to default.",N,N],[5,"SDL_Log","","\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION and SDL_LOG_PRIORITY_INFO",N,N],[5,"SDL_LogVerbose","","\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE",N,N],[5,"SDL_LogDebug","","\\brief Log a message with SDL_LOG_PRIORITY_DEBUG",N,N],[5,"SDL_LogInfo","","\\brief Log a message with SDL_LOG_PRIORITY_INFO",N,N],[5,"SDL_LogWarn","","\\brief Log a message with SDL_LOG_PRIORITY_WARN",N,N],[5,"SDL_LogError","","\\brief Log a message with SDL_LOG_PRIORITY_ERROR",N,N],[5,"SDL_LogCritical","","\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL",N,N],[5,"SDL_LogMessage","","\\brief Log a message with the specified category and priority.",N,N],[5,"SDL_LogMessageV","","\\brief Log a message with the specified category and priority.",N,N],[5,"SDL_LogGetOutputFunction","","\\brief Get the current log output function.",N,N],[5,"SDL_LogSetOutputFunction","","\\brief This function allows you to replace the default log output function with one of your own.",N,N],[5,"SDL_ShowMessageBox","","\\brief Create a modal message box.",N,N],[5,"SDL_ShowSimpleMessageBox","","\\brief Create a simple modal message box",N,N],[5,"SDL_GetPowerInfo","","\\brief Get the current power supply details.",N,N],[5,"SDL_GetNumRenderDrivers","","\\brief Get the number of 2D rendering drivers available for the current display.",N,N],[5,"SDL_GetRenderDriverInfo","","\\brief Get information about a specific 2D rendering driver for the current display.",N,N],[5,"SDL_CreateWindowAndRenderer","","\\brief Create a window and default renderer",N,N],[5,"SDL_CreateRenderer","","\\brief Create a 2D rendering context for a window.",N,N],[5,"SDL_CreateSoftwareRenderer","","\\brief Create a 2D software rendering context for a surface.",N,N],[5,"SDL_GetRenderer","","\\brief Get the renderer associated with a window.",N,N],[5,"SDL_GetRendererInfo","","\\brief Get information about a rendering context.",N,N],[5,"SDL_GetRendererOutputSize","","\\brief Get the output size in pixels of a rendering context.",N,N],[5,"SDL_CreateTexture","","\\brief Create a texture for a rendering context.",N,N],[5,"SDL_CreateTextureFromSurface","","\\brief Create a texture from an existing surface.",N,N],[5,"SDL_QueryTexture","","\\brief Query the attributes of a texture",N,N],[5,"SDL_SetTextureColorMod","","\\brief Set an additional color value used in render copy operations.",N,N],[5,"SDL_GetTextureColorMod","","\\brief Get the additional color value used in render copy operations.",N,N],[5,"SDL_SetTextureAlphaMod","","\\brief Set an additional alpha value used in render copy operations.",N,N],[5,"SDL_GetTextureAlphaMod","","\\brief Get the additional alpha value used in render copy operations.",N,N],[5,"SDL_SetTextureBlendMode","","\\brief Set the blend mode used for texture copy operations.",N,N],[5,"SDL_GetTextureBlendMode","","\\brief Get the blend mode used for texture copy operations.",N,N],[5,"SDL_UpdateTexture","","\\brief Update the given texture rectangle with new pixel data.",N,N],[5,"SDL_UpdateYUVTexture","","\\brief Update a rectangle within a planar YV12 or IYUV texture with new pixel data.",N,N],[5,"SDL_LockTexture","","\\brief Lock a portion of the texture for write-only pixel access.",N,N],[5,"SDL_UnlockTexture","","\\brief Unlock a texture, uploading the changes to video memory, if needed.",N,N],[5,"SDL_RenderTargetSupported","","\\brief Determines whether a window supports the use of render targets",N,N],[5,"SDL_SetRenderTarget","","\\brief Set a texture as the current rendering target.",N,N],[5,"SDL_GetRenderTarget","","\\brief Get the current render target or NULL for the default render target.",N,N],[5,"SDL_RenderSetLogicalSize","","\\brief Set device independent resolution for rendering",N,N],[5,"SDL_RenderGetLogicalSize","","\\brief Get device independent resolution for rendering",N,N],[5,"SDL_RenderSetIntegerScale","","\\brief Set whether to force integer scales for resolution-independent rendering",N,N],[5,"SDL_RenderGetIntegerScale","","\\brief Get whether integer scales are forced for resolution-independent rendering",N,N],[5,"SDL_RenderSetViewport","","\\brief Set the drawing area for rendering on the current target.",N,N],[5,"SDL_RenderGetViewport","","\\brief Get the drawing area for the current target.",N,N],[5,"SDL_RenderSetClipRect","","\\brief Set the clip rectangle for the current target.",N,N],[5,"SDL_RenderGetClipRect","","\\brief Get the clip rectangle for the current target.",N,N],[5,"SDL_RenderIsClipEnabled","","\\brief Get whether clipping is enabled on the given renderer.",N,N],[5,"SDL_RenderSetScale","","\\brief Set the drawing scale for rendering on the current target.",N,N],[5,"SDL_RenderGetScale","","\\brief Get the drawing scale for the current target.",N,N],[5,"SDL_SetRenderDrawColor","","\\brief Set the color used for drawing operations (Rect, Line and Clear).",N,N],[5,"SDL_GetRenderDrawColor","","\\brief Get the color used for drawing operations (Rect, Line and Clear).",N,N],[5,"SDL_SetRenderDrawBlendMode","","\\brief Set the blend mode used for drawing operations (Fill and Line).",N,N],[5,"SDL_GetRenderDrawBlendMode","","\\brief Get the blend mode used for drawing operations.",N,N],[5,"SDL_RenderClear","","\\brief Clear the current rendering target with the drawing color",N,N],[5,"SDL_RenderDrawPoint","","\\brief Draw a point on the current rendering target.",N,N],[5,"SDL_RenderDrawPoints","","\\brief Draw multiple points on the current rendering target.",N,N],[5,"SDL_RenderDrawLine","","\\brief Draw a line on the current rendering target.",N,N],[5,"SDL_RenderDrawLines","","\\brief Draw a series of connected lines on the current rendering target.",N,N],[5,"SDL_RenderDrawRect","","\\brief Draw a rectangle on the current rendering target.",N,N],[5,"SDL_RenderDrawRects","","\\brief Draw some number of rectangles on the current rendering target.",N,N],[5,"SDL_RenderFillRect","","\\brief Fill a rectangle on the current rendering target with the drawing color.",N,N],[5,"SDL_RenderFillRects","","\\brief Fill some number of rectangles on the current rendering target with the drawing color.",N,N],[5,"SDL_RenderCopy","","\\brief Copy a portion of the texture to the current rendering target.",N,N],[5,"SDL_RenderCopyEx","","\\brief Copy a portion of the source texture to the current rendering target, rotating it by angle around the given center",N,N],[5,"SDL_RenderReadPixels","","\\brief Read pixels from the current rendering target.",N,N],[5,"SDL_RenderPresent","","\\brief Update the screen with rendering performed.",N,N],[5,"SDL_DestroyTexture","","\\brief Destroy the specified texture.",N,N],[5,"SDL_DestroyRenderer","","\\brief Destroy the rendering context for a window and free associated textures.",N,N],[5,"SDL_GL_BindTexture","","\\brief Bind the texture to the current OpenGL/ES/ES2 context for use with OpenGL instructions.",N,N],[5,"SDL_GL_UnbindTexture","","\\brief Unbind a texture from the current OpenGL/ES/ES2 context.",N,N],[5,"SDL_CreateShapedWindow","","\\brief Create a window that can be shaped with the specified position, dimensions, and flags.",N,N],[5,"SDL_IsShapedWindow","","\\brief Return whether the given window is a shaped window.",N,N],[5,"SDL_SetWindowShape","","\\brief Set the shape and parameters of a shaped window.",N,N],[5,"SDL_GetShapedWindowMode","","\\brief Get the shape parameters of a shaped window.",N,N],[5,"SDL_GetTicks","","\\brief Get the number of milliseconds since the SDL library initialization.",N,N],[5,"SDL_GetPerformanceCounter","","\\brief Get the current value of the high resolution counter",N,N],[5,"SDL_GetPerformanceFrequency","","\\brief Get the count per second of the high resolution counter",N,N],[5,"SDL_Delay","","\\brief Wait a specified number of milliseconds before returning.",N,N],[5,"SDL_AddTimer","","\\brief Add a new timer to the pool of timers already running.",N,N],[5,"SDL_RemoveTimer","","\\brief Remove a timer knowing its ID.",N,N],[5,"SDL_GetVersion","","\\brief Get the version of SDL that is linked against your program.",N,N],[5,"SDL_GetRevision","","\\brief Get the code revision of SDL that is linked against your program.",N,N],[5,"SDL_GetRevisionNumber","","\\brief Get the revision number of SDL that is linked against your program.",N,N],[5,"SDL_Init","","This function initializes  the subsystems specified by \\c flags",N,N],[5,"SDL_InitSubSystem","","This function initializes specific SDL subsystems",N,N],[5,"SDL_QuitSubSystem","","This function cleans up specific SDL subsystems",N,N],[5,"SDL_WasInit","","This function returns a mask of the specified subsystems which have previously been initialized.",N,N],[5,"SDL_Quit","","This function cleans up all initialized subsystems. You should call it upon all exit conditions.",N,N],[6,"wchar_t","","",N,N],[6,"va_list","","",N,N],[6,"__gnuc_va_list","","",N,N],[6,"__u_char","","",N,N],[6,"__u_short","","",N,N],[6,"__u_int","","",N,N],[6,"__u_long","","",N,N],[6,"__int8_t","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__int32_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__uint64_t","","",N,N],[6,"__quad_t","","",N,N],[6,"__u_quad_t","","",N,N],[6,"__intmax_t","","",N,N],[6,"__uintmax_t","","",N,N],[6,"__dev_t","","",N,N],[6,"__uid_t","","",N,N],[6,"__gid_t","","",N,N],[6,"__ino_t","","",N,N],[6,"__ino64_t","","",N,N],[6,"__mode_t","","",N,N],[6,"__nlink_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"__pid_t","","",N,N],[6,"__clock_t","","",N,N],[6,"__rlim_t","","",N,N],[6,"__rlim64_t","","",N,N],[6,"__id_t","","",N,N],[6,"__time_t","","",N,N],[6,"__useconds_t","","",N,N],[6,"__suseconds_t","","",N,N],[6,"__daddr_t","","",N,N],[6,"__key_t","","",N,N],[6,"__clockid_t","","",N,N],[6,"__timer_t","","",N,N],[6,"__blksize_t","","",N,N],[6,"__blkcnt_t","","",N,N],[6,"__blkcnt64_t","","",N,N],[6,"__fsblkcnt_t","","",N,N],[6,"__fsblkcnt64_t","","",N,N],[6,"__fsfilcnt_t","","",N,N],[6,"__fsfilcnt64_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"__ssize_t","","",N,N],[6,"__syscall_slong_t","","",N,N],[6,"__syscall_ulong_t","","",N,N],[6,"__loff_t","","",N,N],[6,"__qaddr_t","","",N,N],[6,"__caddr_t","","",N,N],[6,"__intptr_t","","",N,N],[6,"__socklen_t","","",N,N],[6,"__sig_atomic_t","","",N,N],[6,"int_least8_t","","",N,N],[6,"int_least16_t","","",N,N],[6,"int_least32_t","","",N,N],[6,"int_least64_t","","",N,N],[6,"uint_least8_t","","",N,N],[6,"uint_least16_t","","",N,N],[6,"uint_least32_t","","",N,N],[6,"uint_least64_t","","",N,N],[6,"int_fast8_t","","",N,N],[6,"int_fast16_t","","",N,N],[6,"int_fast32_t","","",N,N],[6,"int_fast64_t","","",N,N],[6,"uint_fast8_t","","",N,N],[6,"uint_fast16_t","","",N,N],[6,"uint_fast32_t","","",N,N],[6,"uint_fast64_t","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"Sint8","","\\brief A signed 8-bit integer type.",N,N],[6,"Uint8","","\\brief An unsigned 8-bit integer type.",N,N],[6,"Sint16","","\\brief A signed 16-bit integer type.",N,N],[6,"Uint16","","\\brief An unsigned 16-bit integer type.",N,N],[6,"Sint32","","\\brief A signed 32-bit integer type.",N,N],[6,"Uint32","","\\brief An unsigned 32-bit integer type.",N,N],[6,"Sint64","","\\brief A signed 64-bit integer type.",N,N],[6,"Uint64","","\\brief An unsigned 64-bit integer type.",N,N],[6,"SDL_compile_time_assert_uint8","","",N,N],[6,"SDL_compile_time_assert_sint8","","",N,N],[6,"SDL_compile_time_assert_uint16","","",N,N],[6,"SDL_compile_time_assert_sint16","","",N,N],[6,"SDL_compile_time_assert_uint32","","",N,N],[6,"SDL_compile_time_assert_sint32","","",N,N],[6,"SDL_compile_time_assert_uint64","","",N,N],[6,"SDL_compile_time_assert_sint64","","",N,N],[6,"SDL_compile_time_assert_enum","","",N,N],[6,"SDL_iconv_t","","",N,N],[6,"SDL_AssertionHandler","","",N,N],[6,"SDL_SpinLock","","",N,N],[6,"SDL_sem","","",N,N],[6,"SDL_threadID","","",N,N],[6,"SDL_TLSID","","",N,N],[6,"SDL_ThreadFunction","","The function passed to SDL_CreateThread(). It is passed a void* user context parameter and returns an int.",N,N],[6,"SDL_AudioFormat","","\\brief Audio format flags.",N,N],[6,"SDL_AudioCallback","","This function is called when the audio device needs more data.",N,N],[6,"SDL_AudioFilter","","",N,N],[6,"SDL_AudioDeviceID","","SDL Audio Device IDs.",N,N],[6,"__m64","","",N,N],[6,"__v1di","","",N,N],[6,"__v2si","","",N,N],[6,"__v4hi","","",N,N],[6,"__v8qi","","",N,N],[6,"__v4si","","",N,N],[6,"__v4sf","","",N,N],[6,"__m128","","",N,N],[6,"__v4su","","",N,N],[6,"u_char","","",N,N],[6,"u_short","","",N,N],[6,"u_int","","",N,N],[6,"u_long","","",N,N],[6,"quad_t","","",N,N],[6,"u_quad_t","","",N,N],[6,"fsid_t","","",N,N],[6,"loff_t","","",N,N],[6,"ino_t","","",N,N],[6,"dev_t","","",N,N],[6,"gid_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"uid_t","","",N,N],[6,"off_t","","",N,N],[6,"pid_t","","",N,N],[6,"id_t","","",N,N],[6,"daddr_t","","",N,N],[6,"caddr_t","","",N,N],[6,"key_t","","",N,N],[6,"clock_t","","",N,N],[6,"clockid_t","","",N,N],[6,"time_t","","",N,N],[6,"timer_t","","",N,N],[6,"ulong","","",N,N],[6,"ushort","","",N,N],[6,"uint","","",N,N],[6,"u_int8_t","","",N,N],[6,"u_int16_t","","",N,N],[6,"u_int32_t","","",N,N],[6,"u_int64_t","","",N,N],[6,"register_t","","",N,N],[6,"sigset_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__fd_mask","","",N,N],[6,"fd_mask","","",N,N],[6,"blksize_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"__pthread_list_t","","",N,N],[6,"pthread_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"pthread_once_t","","",N,N],[6,"pthread_spinlock_t","","",N,N],[6,"__compar_fn_t","","",N,N],[6,"__m128d","","",N,N],[6,"__m128i","","",N,N],[6,"__v2df","","",N,N],[6,"__v2di","","",N,N],[6,"__v8hi","","",N,N],[6,"__v16qi","","",N,N],[6,"__v2du","","",N,N],[6,"__v8hu","","",N,N],[6,"__v16qu","","",N,N],[6,"__v16qs","","",N,N],[6,"SDL_blit","","\\brief The type of function used for surface blitting functions.",N,N],[6,"SDL_GLContext","","\\brief An opaque handle to an OpenGL context.",N,N],[6,"SDL_HitTest","","\\brief Callback used for hit-testing.",N,N],[6,"SDL_Keycode","","\\brief The SDL virtual key representation.",N,N],[6,"SDL_Joystick","","",N,N],[6,"SDL_JoystickID","","This is a unique ID for a joystick for the time it is connected to the system, and is never reused for the lifetime of the application. If the joystick is disconnected and reconnected, it will get a new ID.",N,N],[6,"SDL_GameController","","",N,N],[6,"SDL_TouchID","","",N,N],[6,"SDL_FingerID","","",N,N],[6,"SDL_GestureID","","",N,N],[6,"SDL_EventFilter","","",N,N],[6,"SDL_Haptic","","",N,N],[6,"SDL_HintCallback","","\\brief type definition of the hint callback function.",N,N],[6,"SDL_LogOutputFunction","","\\brief The prototype for the log output function",N,N],[6,"SDL_TimerCallback","","Function prototype for the timer callback function.",N,N],[6,"SDL_TimerID","","Definition of the timer ID type.",N,N],[6,"__builtin_va_list","","",N,N],[17,"__LINUX__","","",N,N],[17,"HAVE_STDARG_H","","",N,N],[17,"HAVE_STDDEF_H","","",N,N],[17,"HAVE_STDINT_H","","",N,N],[17,"HAVE_GCC_SYNC_LOCK_TEST_AND_SET","","",N,N],[17,"SDL_AUDIO_DRIVER_DUMMY","","",N,N],[17,"SDL_JOYSTICK_DISABLED","","",N,N],[17,"SDL_HAPTIC_DISABLED","","",N,N],[17,"SDL_LOADSO_DISABLED","","",N,N],[17,"SDL_THREADS_DISABLED","","",N,N],[17,"SDL_TIMERS_DISABLED","","",N,N],[17,"SDL_VIDEO_DRIVER_DUMMY","","",N,N],[17,"SDL_FILESYSTEM_DUMMY","","",N,N],[17,"__GNUC_VA_LIST","","",N,N],[17,"_STDINT_H","","",N,N],[17,"_FEATURES_H","","",N,N],[17,"_DEFAULT_SOURCE","","",N,N],[17,"__USE_ISOC11","","",N,N],[17,"__USE_ISOC99","","",N,N],[17,"__USE_ISOC95","","",N,N],[17,"__USE_POSIX_IMPLICITLY","","",N,N],[17,"_POSIX_SOURCE","","",N,N],[17,"_POSIX_C_SOURCE","","",N,N],[17,"__USE_POSIX","","",N,N],[17,"__USE_POSIX2","","",N,N],[17,"__USE_POSIX199309","","",N,N],[17,"__USE_POSIX199506","","",N,N],[17,"__USE_XOPEN2K","","",N,N],[17,"__USE_XOPEN2K8","","",N,N],[17,"_ATFILE_SOURCE","","",N,N],[17,"__USE_MISC","","",N,N],[17,"__USE_ATFILE","","",N,N],[17,"__USE_FORTIFY_LEVEL","","",N,N],[17,"__GLIBC_USE_DEPRECATED_GETS","","",N,N],[17,"_STDC_PREDEF_H","","",N,N],[17,"__STDC_IEC_559__","","",N,N],[17,"__STDC_IEC_559_COMPLEX__","","",N,N],[17,"__STDC_ISO_10646__","","",N,N],[17,"__STDC_NO_THREADS__","","",N,N],[17,"__GNU_LIBRARY__","","",N,N],[17,"__GLIBC__","","",N,N],[17,"__GLIBC_MINOR__","","",N,N],[17,"_SYS_CDEFS_H","","",N,N],[17,"__glibc_c99_flexarr_available","","",N,N],[17,"__WORDSIZE","","",N,N],[17,"__WORDSIZE_TIME64_COMPAT32","","",N,N],[17,"__SYSCALL_WORDSIZE","","",N,N],[17,"__HAVE_GENERIC_SELECTION","","",N,N],[17,"__GLIBC_USE_LIB_EXT2","","",N,N],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",N,N],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",N,N],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",N,N],[17,"_BITS_TYPES_H","","",N,N],[17,"_BITS_TYPESIZES_H","","",N,N],[17,"__OFF_T_MATCHES_OFF64_T","","",N,N],[17,"__INO_T_MATCHES_INO64_T","","",N,N],[17,"__RLIM_T_MATCHES_RLIM64_T","","",N,N],[17,"__FD_SETSIZE","","",N,N],[17,"_BITS_WCHAR_H","","",N,N],[17,"_BITS_STDINT_INTN_H","","",N,N],[17,"_BITS_STDINT_UINTN_H","","",N,N],[17,"INT8_MIN","","",N,N],[17,"INT16_MIN","","",N,N],[17,"INT32_MIN","","",N,N],[17,"INT8_MAX","","",N,N],[17,"INT16_MAX","","",N,N],[17,"INT32_MAX","","",N,N],[17,"UINT8_MAX","","",N,N],[17,"UINT16_MAX","","",N,N],[17,"UINT32_MAX","","",N,N],[17,"INT_LEAST8_MIN","","",N,N],[17,"INT_LEAST16_MIN","","",N,N],[17,"INT_LEAST32_MIN","","",N,N],[17,"INT_LEAST8_MAX","","",N,N],[17,"INT_LEAST16_MAX","","",N,N],[17,"INT_LEAST32_MAX","","",N,N],[17,"UINT_LEAST8_MAX","","",N,N],[17,"UINT_LEAST16_MAX","","",N,N],[17,"UINT_LEAST32_MAX","","",N,N],[17,"INT_FAST8_MIN","","",N,N],[17,"INT_FAST16_MIN","","",N,N],[17,"INT_FAST32_MIN","","",N,N],[17,"INT_FAST8_MAX","","",N,N],[17,"INT_FAST16_MAX","","",N,N],[17,"INT_FAST32_MAX","","",N,N],[17,"UINT_FAST8_MAX","","",N,N],[17,"UINT_FAST16_MAX","","",N,N],[17,"UINT_FAST32_MAX","","",N,N],[17,"INTPTR_MIN","","",N,N],[17,"INTPTR_MAX","","",N,N],[17,"UINTPTR_MAX","","",N,N],[17,"PTRDIFF_MIN","","",N,N],[17,"PTRDIFF_MAX","","",N,N],[17,"SIG_ATOMIC_MIN","","",N,N],[17,"SIG_ATOMIC_MAX","","",N,N],[17,"SIZE_MAX","","",N,N],[17,"WINT_MIN","","",N,N],[17,"WINT_MAX","","",N,N],[17,"SDL_PRIs64","","",N,N],[17,"SDL_PRIu64","","",N,N],[17,"SDL_PRIx64","","",N,N],[17,"SDL_PRIX64","","",N,N],[17,"M_PI","","",N,N],[17,"SDL_ASSERT_LEVEL","","",N,N],[17,"SDL_NULL_WHILE_LOOP_CONDITION","","",N,N],[17,"SDL_LIL_ENDIAN","","",N,N],[17,"SDL_BIG_ENDIAN","","",N,N],[17,"_ENDIAN_H","","",N,N],[17,"__LITTLE_ENDIAN","","",N,N],[17,"__BIG_ENDIAN","","",N,N],[17,"__PDP_ENDIAN","","",N,N],[17,"__BYTE_ORDER","","",N,N],[17,"__FLOAT_WORD_ORDER","","",N,N],[17,"LITTLE_ENDIAN","","",N,N],[17,"BIG_ENDIAN","","",N,N],[17,"PDP_ENDIAN","","",N,N],[17,"BYTE_ORDER","","",N,N],[17,"_BITS_BYTESWAP_H","","",N,N],[17,"_BITS_UINTN_IDENTITY_H","","",N,N],[17,"SDL_BYTEORDER","","",N,N],[17,"SDL_MUTEX_TIMEDOUT","","",N,N],[17,"SDL_RWOPS_UNKNOWN","","",N,N],[17,"SDL_RWOPS_WINFILE","","",N,N],[17,"SDL_RWOPS_STDFILE","","",N,N],[17,"SDL_RWOPS_JNIFILE","","",N,N],[17,"SDL_RWOPS_MEMORY","","",N,N],[17,"SDL_RWOPS_MEMORY_RO","","",N,N],[17,"RW_SEEK_SET","","",N,N],[17,"RW_SEEK_CUR","","",N,N],[17,"RW_SEEK_END","","",N,N],[17,"SDL_AUDIO_MASK_BITSIZE","","",N,N],[17,"SDL_AUDIO_MASK_DATATYPE","","",N,N],[17,"SDL_AUDIO_MASK_ENDIAN","","",N,N],[17,"SDL_AUDIO_MASK_SIGNED","","",N,N],[17,"AUDIO_U8","","",N,N],[17,"AUDIO_S8","","",N,N],[17,"AUDIO_U16LSB","","",N,N],[17,"AUDIO_S16LSB","","",N,N],[17,"AUDIO_U16MSB","","",N,N],[17,"AUDIO_S16MSB","","",N,N],[17,"AUDIO_U16","","",N,N],[17,"AUDIO_S16","","",N,N],[17,"AUDIO_S32LSB","","",N,N],[17,"AUDIO_S32MSB","","",N,N],[17,"AUDIO_S32","","",N,N],[17,"AUDIO_F32LSB","","",N,N],[17,"AUDIO_F32MSB","","",N,N],[17,"AUDIO_F32","","",N,N],[17,"AUDIO_U16SYS","","",N,N],[17,"AUDIO_S16SYS","","",N,N],[17,"AUDIO_S32SYS","","",N,N],[17,"AUDIO_F32SYS","","",N,N],[17,"SDL_AUDIO_ALLOW_FREQUENCY_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_FORMAT_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_CHANNELS_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_ANY_CHANGE","","",N,N],[17,"SDL_AUDIOCVT_MAX_FILTERS","","",N,N],[17,"SDL_MIX_MAXVOLUME","","",N,N],[17,"_STDLIB_H","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"__W_CONTINUED","","",N,N],[17,"__WCOREFLAG","","",N,N],[17,"__HAVE_FLOAT128","","",N,N],[17,"__HAVE_DISTINCT_FLOAT128","","",N,N],[17,"__ldiv_t_defined","","",N,N],[17,"__lldiv_t_defined","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"_SYS_TYPES_H","","",N,N],[17,"__clock_t_defined","","",N,N],[17,"__clockid_t_defined","","",N,N],[17,"__time_t_defined","","",N,N],[17,"__timer_t_defined","","",N,N],[17,"__BIT_TYPES_DEFINED__","","",N,N],[17,"_SYS_SELECT_H","","",N,N],[17,"__FD_ZERO_STOS","","",N,N],[17,"__sigset_t_defined","","",N,N],[17,"__timeval_defined","","",N,N],[17,"__timespec_defined","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"_SYS_SYSMACROS_H","","",N,N],[17,"_BITS_SYSMACROS_H","","",N,N],[17,"_BITS_PTHREADTYPES_COMMON_H","","",N,N],[17,"_THREAD_SHARED_TYPES_H","","",N,N],[17,"_BITS_PTHREADTYPES_ARCH_H","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_ATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"__SIZEOF_PTHREAD_BARRIER_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T","","",N,N],[17,"__PTHREAD_MUTEX_LOCK_ELISION","","",N,N],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED","","",N,N],[17,"__PTHREAD_MUTEX_HAVE_PREV","","",N,N],[17,"__have_pthread_attr_t","","",N,N],[17,"_ALLOCA_H","","",N,N],[17,"_MM_HINT_T0","","",N,N],[17,"_MM_HINT_T1","","",N,N],[17,"_MM_HINT_T2","","",N,N],[17,"_MM_HINT_NTA","","",N,N],[17,"_MM_EXCEPT_INVALID","","",N,N],[17,"_MM_EXCEPT_DENORM","","",N,N],[17,"_MM_EXCEPT_DIV_ZERO","","",N,N],[17,"_MM_EXCEPT_OVERFLOW","","",N,N],[17,"_MM_EXCEPT_UNDERFLOW","","",N,N],[17,"_MM_EXCEPT_INEXACT","","",N,N],[17,"_MM_EXCEPT_MASK","","",N,N],[17,"_MM_MASK_INVALID","","",N,N],[17,"_MM_MASK_DENORM","","",N,N],[17,"_MM_MASK_DIV_ZERO","","",N,N],[17,"_MM_MASK_OVERFLOW","","",N,N],[17,"_MM_MASK_UNDERFLOW","","",N,N],[17,"_MM_MASK_INEXACT","","",N,N],[17,"_MM_MASK_MASK","","",N,N],[17,"_MM_ROUND_NEAREST","","",N,N],[17,"_MM_ROUND_DOWN","","",N,N],[17,"_MM_ROUND_UP","","",N,N],[17,"_MM_ROUND_TOWARD_ZERO","","",N,N],[17,"_MM_ROUND_MASK","","",N,N],[17,"_MM_FLUSH_ZERO_MASK","","",N,N],[17,"_MM_FLUSH_ZERO_ON","","",N,N],[17,"_MM_FLUSH_ZERO_OFF","","",N,N],[17,"_MM_DENORMALS_ZERO_ON","","",N,N],[17,"_MM_DENORMALS_ZERO_OFF","","",N,N],[17,"_MM_DENORMALS_ZERO_MASK","","",N,N],[17,"SDL_CACHELINE_SIZE","","",N,N],[17,"SDL_ALPHA_OPAQUE","","",N,N],[17,"SDL_ALPHA_TRANSPARENT","","",N,N],[17,"SDL_SWSURFACE","","",N,N],[17,"SDL_PREALLOC","","",N,N],[17,"SDL_RLEACCEL","","",N,N],[17,"SDL_DONTFREE","","",N,N],[17,"SDL_WINDOWPOS_UNDEFINED_MASK","","",N,N],[17,"SDL_WINDOWPOS_CENTERED_MASK","","",N,N],[17,"SDLK_SCANCODE_MASK","","",N,N],[17,"SDL_BUTTON_LEFT","","",N,N],[17,"SDL_BUTTON_MIDDLE","","",N,N],[17,"SDL_BUTTON_RIGHT","","",N,N],[17,"SDL_BUTTON_X1","","",N,N],[17,"SDL_BUTTON_X2","","",N,N],[17,"SDL_JOYSTICK_AXIS_MAX","","",N,N],[17,"SDL_JOYSTICK_AXIS_MIN","","",N,N],[17,"SDL_HAT_CENTERED","","",N,N],[17,"SDL_HAT_UP","","",N,N],[17,"SDL_HAT_RIGHT","","",N,N],[17,"SDL_HAT_DOWN","","",N,N],[17,"SDL_HAT_LEFT","","",N,N],[17,"SDL_HAT_RIGHTUP","","",N,N],[17,"SDL_HAT_RIGHTDOWN","","",N,N],[17,"SDL_HAT_LEFTUP","","",N,N],[17,"SDL_HAT_LEFTDOWN","","",N,N],[17,"SDL_RELEASED","","",N,N],[17,"SDL_PRESSED","","",N,N],[17,"SDL_TEXTEDITINGEVENT_TEXT_SIZE","","",N,N],[17,"SDL_TEXTINPUTEVENT_TEXT_SIZE","","",N,N],[17,"SDL_QUERY","","",N,N],[17,"SDL_IGNORE","","",N,N],[17,"SDL_DISABLE","","",N,N],[17,"SDL_ENABLE","","",N,N],[17,"SDL_HAPTIC_CONSTANT","","",N,N],[17,"SDL_HAPTIC_SINE","","",N,N],[17,"SDL_HAPTIC_LEFTRIGHT","","",N,N],[17,"SDL_HAPTIC_TRIANGLE","","",N,N],[17,"SDL_HAPTIC_SAWTOOTHUP","","",N,N],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",N,N],[17,"SDL_HAPTIC_RAMP","","",N,N],[17,"SDL_HAPTIC_SPRING","","",N,N],[17,"SDL_HAPTIC_DAMPER","","",N,N],[17,"SDL_HAPTIC_INERTIA","","",N,N],[17,"SDL_HAPTIC_FRICTION","","",N,N],[17,"SDL_HAPTIC_CUSTOM","","",N,N],[17,"SDL_HAPTIC_GAIN","","",N,N],[17,"SDL_HAPTIC_AUTOCENTER","","",N,N],[17,"SDL_HAPTIC_STATUS","","",N,N],[17,"SDL_HAPTIC_PAUSE","","",N,N],[17,"SDL_HAPTIC_POLAR","","",N,N],[17,"SDL_HAPTIC_CARTESIAN","","",N,N],[17,"SDL_HAPTIC_SPHERICAL","","",N,N],[17,"SDL_HAPTIC_INFINITY","","",N,N],[17,"SDL_HINT_FRAMEBUFFER_ACCELERATION","","",N,N],[17,"SDL_HINT_RENDER_DRIVER","","",N,N],[17,"SDL_HINT_RENDER_OPENGL_SHADERS","","",N,N],[17,"SDL_HINT_RENDER_DIRECT3D_THREADSAFE","","",N,N],[17,"SDL_HINT_RENDER_DIRECT3D11_DEBUG","","",N,N],[17,"SDL_HINT_RENDER_LOGICAL_SIZE_MODE","","",N,N],[17,"SDL_HINT_RENDER_SCALE_QUALITY","","",N,N],[17,"SDL_HINT_RENDER_VSYNC","","",N,N],[17,"SDL_HINT_VIDEO_ALLOW_SCREENSAVER","","",N,N],[17,"SDL_HINT_VIDEO_X11_XVIDMODE","","",N,N],[17,"SDL_HINT_VIDEO_X11_XINERAMA","","",N,N],[17,"SDL_HINT_VIDEO_X11_XRANDR","","",N,N],[17,"SDL_HINT_VIDEO_X11_NET_WM_PING","","",N,N],[17,"SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN","","",N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON","","",N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL","","",N,N],[17,"SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP","","",N,N],[17,"SDL_HINT_GRAB_KEYBOARD","","",N,N],[17,"SDL_HINT_MOUSE_NORMAL_SPEED_SCALE","","",N,N],[17,"SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE","","",N,N],[17,"SDL_HINT_MOUSE_RELATIVE_MODE_WARP","","",N,N],[17,"SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH","","",N,N],[17,"SDL_HINT_TOUCH_MOUSE_EVENTS","","",N,N],[17,"SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS","","",N,N],[17,"SDL_HINT_IDLE_TIMER_DISABLED","","",N,N],[17,"SDL_HINT_ORIENTATIONS","","",N,N],[17,"SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS","","",N,N],[17,"SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION","","",N,N],[17,"SDL_HINT_ACCELEROMETER_AS_JOYSTICK","","",N,N],[17,"SDL_HINT_XINPUT_ENABLED","","",N,N],[17,"SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING","","",N,N],[17,"SDL_HINT_GAMECONTROLLERCONFIG","","",N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES","","",N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT","","",N,N],[17,"SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS","","",N,N],[17,"SDL_HINT_ALLOW_TOPMOST","","",N,N],[17,"SDL_HINT_TIMER_RESOLUTION","","",N,N],[17,"SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION","","",N,N],[17,"SDL_HINT_QTWAYLAND_WINDOW_FLAGS","","",N,N],[17,"SDL_HINT_THREAD_STACK_SIZE","","",N,N],[17,"SDL_HINT_VIDEO_HIGHDPI_DISABLED","","",N,N],[17,"SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK","","",N,N],[17,"SDL_HINT_VIDEO_WIN_D3DCOMPILER","","",N,N],[17,"SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT","","",N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_URL","","",N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_LABEL","","",N,N],[17,"SDL_HINT_WINRT_HANDLE_BACK_BUTTON","","",N,N],[17,"SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES","","",N,N],[17,"SDL_HINT_MAC_BACKGROUND_APP","","",N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION","","",N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION","","",N,N],[17,"SDL_HINT_IME_INTERNAL_EDITING","","",N,N],[17,"SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH","","",N,N],[17,"SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT","","",N,N],[17,"SDL_HINT_NO_SIGNAL_HANDLERS","","",N,N],[17,"SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4","","",N,N],[17,"SDL_HINT_BMP_SAVE_LEGACY_FORMAT","","",N,N],[17,"SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING","","",N,N],[17,"SDL_HINT_RPI_VIDEO_LAYER","","",N,N],[17,"SDL_HINT_OPENGL_ES_DRIVER","","",N,N],[17,"SDL_HINT_AUDIO_RESAMPLING_MODE","","",N,N],[17,"SDL_HINT_AUDIO_CATEGORY","","",N,N],[17,"SDL_MAX_LOG_MESSAGE","","",N,N],[17,"SDL_NONSHAPEABLE_WINDOW","","",N,N],[17,"SDL_INVALID_SHAPE_ARGUMENT","","",N,N],[17,"SDL_WINDOW_LACKS_SHAPE","","",N,N],[17,"SDL_MAJOR_VERSION","","",N,N],[17,"SDL_MINOR_VERSION","","",N,N],[17,"SDL_PATCHLEVEL","","",N,N],[17,"SDL_INIT_TIMER","","",N,N],[17,"SDL_INIT_AUDIO","","",N,N],[17,"SDL_INIT_VIDEO","","",N,N],[17,"SDL_INIT_JOYSTICK","","",N,N],[17,"SDL_INIT_HAPTIC","","",N,N],[17,"SDL_INIT_GAMECONTROLLER","","",N,N],[17,"SDL_INIT_EVENTS","","",N,N],[17,"SDL_INIT_NOPARACHUTE","","",N,N],[17,"SDL_INIT_EVERYTHING","","",N,N],[17,"SDL_PIXELTYPE_UNKNOWN","","",N,N],[17,"SDL_PIXELTYPE_INDEX1","","",N,N],[17,"SDL_PIXELTYPE_INDEX4","","",N,N],[17,"SDL_PIXELTYPE_INDEX8","","",N,N],[17,"SDL_PIXELTYPE_PACKED8","","",N,N],[17,"SDL_PIXELTYPE_PACKED16","","",N,N],[17,"SDL_PIXELTYPE_PACKED32","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU8","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU16","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU32","","",N,N],[17,"SDL_PIXELTYPE_ARRAYF16","","",N,N],[17,"SDL_PIXELTYPE_ARRAYF32","","",N,N],[17,"SDL_BITMAPORDER_NONE","","",N,N],[17,"SDL_BITMAPORDER_4321","","",N,N],[17,"SDL_BITMAPORDER_1234","","",N,N],[17,"SDL_PACKEDORDER_NONE","","",N,N],[17,"SDL_PACKEDORDER_XRGB","","",N,N],[17,"SDL_PACKEDORDER_RGBX","","",N,N],[17,"SDL_PACKEDORDER_ARGB","","",N,N],[17,"SDL_PACKEDORDER_RGBA","","",N,N],[17,"SDL_PACKEDORDER_XBGR","","",N,N],[17,"SDL_PACKEDORDER_BGRX","","",N,N],[17,"SDL_PACKEDORDER_ABGR","","",N,N],[17,"SDL_PACKEDORDER_BGRA","","",N,N],[17,"SDL_ARRAYORDER_NONE","","",N,N],[17,"SDL_ARRAYORDER_RGB","","",N,N],[17,"SDL_ARRAYORDER_RGBA","","",N,N],[17,"SDL_ARRAYORDER_ARGB","","",N,N],[17,"SDL_ARRAYORDER_BGR","","",N,N],[17,"SDL_ARRAYORDER_BGRA","","",N,N],[17,"SDL_ARRAYORDER_ABGR","","",N,N],[17,"SDL_PACKEDLAYOUT_NONE","","",N,N],[17,"SDL_PACKEDLAYOUT_332","","",N,N],[17,"SDL_PACKEDLAYOUT_4444","","",N,N],[17,"SDL_PACKEDLAYOUT_1555","","",N,N],[17,"SDL_PACKEDLAYOUT_5551","","",N,N],[17,"SDL_PACKEDLAYOUT_565","","",N,N],[17,"SDL_PACKEDLAYOUT_8888","","",N,N],[17,"SDL_PACKEDLAYOUT_2101010","","",N,N],[17,"SDL_PACKEDLAYOUT_1010102","","",N,N],[17,"SDL_PIXELFORMAT_UNKNOWN","","",N,N],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX8","","",N,N],[17,"SDL_PIXELFORMAT_RGB332","","",N,N],[17,"SDL_PIXELFORMAT_RGB444","","",N,N],[17,"SDL_PIXELFORMAT_RGB555","","",N,N],[17,"SDL_PIXELFORMAT_BGR555","","",N,N],[17,"SDL_PIXELFORMAT_ARGB4444","","",N,N],[17,"SDL_PIXELFORMAT_RGBA4444","","",N,N],[17,"SDL_PIXELFORMAT_ABGR4444","","",N,N],[17,"SDL_PIXELFORMAT_BGRA4444","","",N,N],[17,"SDL_PIXELFORMAT_ARGB1555","","",N,N],[17,"SDL_PIXELFORMAT_RGBA5551","","",N,N],[17,"SDL_PIXELFORMAT_ABGR1555","","",N,N],[17,"SDL_PIXELFORMAT_BGRA5551","","",N,N],[17,"SDL_PIXELFORMAT_RGB565","","",N,N],[17,"SDL_PIXELFORMAT_BGR565","","",N,N],[17,"SDL_PIXELFORMAT_RGB24","","",N,N],[17,"SDL_PIXELFORMAT_BGR24","","",N,N],[17,"SDL_PIXELFORMAT_RGB888","","",N,N],[17,"SDL_PIXELFORMAT_RGBX8888","","",N,N],[17,"SDL_PIXELFORMAT_BGR888","","",N,N],[17,"SDL_PIXELFORMAT_BGRX8888","","",N,N],[17,"SDL_PIXELFORMAT_ARGB8888","","",N,N],[17,"SDL_PIXELFORMAT_RGBA8888","","",N,N],[17,"SDL_PIXELFORMAT_ABGR8888","","",N,N],[17,"SDL_PIXELFORMAT_BGRA8888","","",N,N],[17,"SDL_PIXELFORMAT_ARGB2101010","","",N,N],[17,"SDL_PIXELFORMAT_RGBA32","","",N,N],[17,"SDL_PIXELFORMAT_ARGB32","","",N,N],[17,"SDL_PIXELFORMAT_BGRA32","","",N,N],[17,"SDL_PIXELFORMAT_ABGR32","","",N,N],[17,"SDL_PIXELFORMAT_YV12","","",N,N],[17,"SDL_PIXELFORMAT_IYUV","","",N,N],[17,"SDL_PIXELFORMAT_YUY2","","",N,N],[17,"SDL_PIXELFORMAT_UYVY","","",N,N],[17,"SDL_PIXELFORMAT_YVYU","","",N,N],[17,"SDL_PIXELFORMAT_NV12","","",N,N],[17,"SDL_PIXELFORMAT_NV21","","",N,N],[17,"SDLK_UNKNOWN","","",N,N],[17,"SDLK_RETURN","","",N,N],[17,"SDLK_ESCAPE","","",N,N],[17,"SDLK_BACKSPACE","","",N,N],[17,"SDLK_TAB","","",N,N],[17,"SDLK_SPACE","","",N,N],[17,"SDLK_EXCLAIM","","",N,N],[17,"SDLK_QUOTEDBL","","",N,N],[17,"SDLK_HASH","","",N,N],[17,"SDLK_PERCENT","","",N,N],[17,"SDLK_DOLLAR","","",N,N],[17,"SDLK_AMPERSAND","","",N,N],[17,"SDLK_QUOTE","","",N,N],[17,"SDLK_LEFTPAREN","","",N,N],[17,"SDLK_RIGHTPAREN","","",N,N],[17,"SDLK_ASTERISK","","",N,N],[17,"SDLK_PLUS","","",N,N],[17,"SDLK_COMMA","","",N,N],[17,"SDLK_MINUS","","",N,N],[17,"SDLK_PERIOD","","",N,N],[17,"SDLK_SLASH","","",N,N],[17,"SDLK_0","","",N,N],[17,"SDLK_1","","",N,N],[17,"SDLK_2","","",N,N],[17,"SDLK_3","","",N,N],[17,"SDLK_4","","",N,N],[17,"SDLK_5","","",N,N],[17,"SDLK_6","","",N,N],[17,"SDLK_7","","",N,N],[17,"SDLK_8","","",N,N],[17,"SDLK_9","","",N,N],[17,"SDLK_COLON","","",N,N],[17,"SDLK_SEMICOLON","","",N,N],[17,"SDLK_LESS","","",N,N],[17,"SDLK_EQUALS","","",N,N],[17,"SDLK_GREATER","","",N,N],[17,"SDLK_QUESTION","","",N,N],[17,"SDLK_AT","","",N,N],[17,"SDLK_LEFTBRACKET","","",N,N],[17,"SDLK_BACKSLASH","","",N,N],[17,"SDLK_RIGHTBRACKET","","",N,N],[17,"SDLK_CARET","","",N,N],[17,"SDLK_UNDERSCORE","","",N,N],[17,"SDLK_BACKQUOTE","","",N,N],[17,"SDLK_a","","",N,N],[17,"SDLK_b","","",N,N],[17,"SDLK_c","","",N,N],[17,"SDLK_d","","",N,N],[17,"SDLK_e","","",N,N],[17,"SDLK_f","","",N,N],[17,"SDLK_g","","",N,N],[17,"SDLK_h","","",N,N],[17,"SDLK_i","","",N,N],[17,"SDLK_j","","",N,N],[17,"SDLK_k","","",N,N],[17,"SDLK_l","","",N,N],[17,"SDLK_m","","",N,N],[17,"SDLK_n","","",N,N],[17,"SDLK_o","","",N,N],[17,"SDLK_p","","",N,N],[17,"SDLK_q","","",N,N],[17,"SDLK_r","","",N,N],[17,"SDLK_s","","",N,N],[17,"SDLK_t","","",N,N],[17,"SDLK_u","","",N,N],[17,"SDLK_v","","",N,N],[17,"SDLK_w","","",N,N],[17,"SDLK_x","","",N,N],[17,"SDLK_y","","",N,N],[17,"SDLK_z","","",N,N],[17,"SDLK_CAPSLOCK","","",N,N],[17,"SDLK_F1","","",N,N],[17,"SDLK_F2","","",N,N],[17,"SDLK_F3","","",N,N],[17,"SDLK_F4","","",N,N],[17,"SDLK_F5","","",N,N],[17,"SDLK_F6","","",N,N],[17,"SDLK_F7","","",N,N],[17,"SDLK_F8","","",N,N],[17,"SDLK_F9","","",N,N],[17,"SDLK_F10","","",N,N],[17,"SDLK_F11","","",N,N],[17,"SDLK_F12","","",N,N],[17,"SDLK_PRINTSCREEN","","",N,N],[17,"SDLK_SCROLLLOCK","","",N,N],[17,"SDLK_PAUSE","","",N,N],[17,"SDLK_INSERT","","",N,N],[17,"SDLK_HOME","","",N,N],[17,"SDLK_PAGEUP","","",N,N],[17,"SDLK_DELETE","","",N,N],[17,"SDLK_END","","",N,N],[17,"SDLK_PAGEDOWN","","",N,N],[17,"SDLK_RIGHT","","",N,N],[17,"SDLK_LEFT","","",N,N],[17,"SDLK_DOWN","","",N,N],[17,"SDLK_UP","","",N,N],[17,"SDLK_NUMLOCKCLEAR","","",N,N],[17,"SDLK_KP_DIVIDE","","",N,N],[17,"SDLK_KP_MULTIPLY","","",N,N],[17,"SDLK_KP_MINUS","","",N,N],[17,"SDLK_KP_PLUS","","",N,N],[17,"SDLK_KP_ENTER","","",N,N],[17,"SDLK_KP_1","","",N,N],[17,"SDLK_KP_2","","",N,N],[17,"SDLK_KP_3","","",N,N],[17,"SDLK_KP_4","","",N,N],[17,"SDLK_KP_5","","",N,N],[17,"SDLK_KP_6","","",N,N],[17,"SDLK_KP_7","","",N,N],[17,"SDLK_KP_8","","",N,N],[17,"SDLK_KP_9","","",N,N],[17,"SDLK_KP_0","","",N,N],[17,"SDLK_KP_PERIOD","","",N,N],[17,"SDLK_APPLICATION","","",N,N],[17,"SDLK_POWER","","",N,N],[17,"SDLK_KP_EQUALS","","",N,N],[17,"SDLK_F13","","",N,N],[17,"SDLK_F14","","",N,N],[17,"SDLK_F15","","",N,N],[17,"SDLK_F16","","",N,N],[17,"SDLK_F17","","",N,N],[17,"SDLK_F18","","",N,N],[17,"SDLK_F19","","",N,N],[17,"SDLK_F20","","",N,N],[17,"SDLK_F21","","",N,N],[17,"SDLK_F22","","",N,N],[17,"SDLK_F23","","",N,N],[17,"SDLK_F24","","",N,N],[17,"SDLK_EXECUTE","","",N,N],[17,"SDLK_HELP","","",N,N],[17,"SDLK_MENU","","",N,N],[17,"SDLK_SELECT","","",N,N],[17,"SDLK_STOP","","",N,N],[17,"SDLK_AGAIN","","",N,N],[17,"SDLK_UNDO","","",N,N],[17,"SDLK_CUT","","",N,N],[17,"SDLK_COPY","","",N,N],[17,"SDLK_PASTE","","",N,N],[17,"SDLK_FIND","","",N,N],[17,"SDLK_MUTE","","",N,N],[17,"SDLK_VOLUMEUP","","",N,N],[17,"SDLK_VOLUMEDOWN","","",N,N],[17,"SDLK_KP_COMMA","","",N,N],[17,"SDLK_KP_EQUALSAS400","","",N,N],[17,"SDLK_ALTERASE","","",N,N],[17,"SDLK_SYSREQ","","",N,N],[17,"SDLK_CANCEL","","",N,N],[17,"SDLK_CLEAR","","",N,N],[17,"SDLK_PRIOR","","",N,N],[17,"SDLK_RETURN2","","",N,N],[17,"SDLK_SEPARATOR","","",N,N],[17,"SDLK_OUT","","",N,N],[17,"SDLK_OPER","","",N,N],[17,"SDLK_CLEARAGAIN","","",N,N],[17,"SDLK_CRSEL","","",N,N],[17,"SDLK_EXSEL","","",N,N],[17,"SDLK_KP_00","","",N,N],[17,"SDLK_KP_000","","",N,N],[17,"SDLK_THOUSANDSSEPARATOR","","",N,N],[17,"SDLK_DECIMALSEPARATOR","","",N,N],[17,"SDLK_CURRENCYUNIT","","",N,N],[17,"SDLK_CURRENCYSUBUNIT","","",N,N],[17,"SDLK_KP_LEFTPAREN","","",N,N],[17,"SDLK_KP_RIGHTPAREN","","",N,N],[17,"SDLK_KP_LEFTBRACE","","",N,N],[17,"SDLK_KP_RIGHTBRACE","","",N,N],[17,"SDLK_KP_TAB","","",N,N],[17,"SDLK_KP_BACKSPACE","","",N,N],[17,"SDLK_KP_A","","",N,N],[17,"SDLK_KP_B","","",N,N],[17,"SDLK_KP_C","","",N,N],[17,"SDLK_KP_D","","",N,N],[17,"SDLK_KP_E","","",N,N],[17,"SDLK_KP_F","","",N,N],[17,"SDLK_KP_XOR","","",N,N],[17,"SDLK_KP_POWER","","",N,N],[17,"SDLK_KP_PERCENT","","",N,N],[17,"SDLK_KP_LESS","","",N,N],[17,"SDLK_KP_GREATER","","",N,N],[17,"SDLK_KP_AMPERSAND","","",N,N],[17,"SDLK_KP_DBLAMPERSAND","","",N,N],[17,"SDLK_KP_VERTICALBAR","","",N,N],[17,"SDLK_KP_DBLVERTICALBAR","","",N,N],[17,"SDLK_KP_COLON","","",N,N],[17,"SDLK_KP_HASH","","",N,N],[17,"SDLK_KP_SPACE","","",N,N],[17,"SDLK_KP_AT","","",N,N],[17,"SDLK_KP_EXCLAM","","",N,N],[17,"SDLK_KP_MEMSTORE","","",N,N],[17,"SDLK_KP_MEMRECALL","","",N,N],[17,"SDLK_KP_MEMCLEAR","","",N,N],[17,"SDLK_KP_MEMADD","","",N,N],[17,"SDLK_KP_MEMSUBTRACT","","",N,N],[17,"SDLK_KP_MEMMULTIPLY","","",N,N],[17,"SDLK_KP_MEMDIVIDE","","",N,N],[17,"SDLK_KP_PLUSMINUS","","",N,N],[17,"SDLK_KP_CLEAR","","",N,N],[17,"SDLK_KP_CLEARENTRY","","",N,N],[17,"SDLK_KP_BINARY","","",N,N],[17,"SDLK_KP_OCTAL","","",N,N],[17,"SDLK_KP_DECIMAL","","",N,N],[17,"SDLK_KP_HEXADECIMAL","","",N,N],[17,"SDLK_LCTRL","","",N,N],[17,"SDLK_LSHIFT","","",N,N],[17,"SDLK_LALT","","",N,N],[17,"SDLK_LGUI","","",N,N],[17,"SDLK_RCTRL","","",N,N],[17,"SDLK_RSHIFT","","",N,N],[17,"SDLK_RALT","","",N,N],[17,"SDLK_RGUI","","",N,N],[17,"SDLK_MODE","","",N,N],[17,"SDLK_AUDIONEXT","","",N,N],[17,"SDLK_AUDIOPREV","","",N,N],[17,"SDLK_AUDIOSTOP","","",N,N],[17,"SDLK_AUDIOPLAY","","",N,N],[17,"SDLK_AUDIOMUTE","","",N,N],[17,"SDLK_MEDIASELECT","","",N,N],[17,"SDLK_WWW","","",N,N],[17,"SDLK_MAIL","","",N,N],[17,"SDLK_CALCULATOR","","",N,N],[17,"SDLK_COMPUTER","","",N,N],[17,"SDLK_AC_SEARCH","","",N,N],[17,"SDLK_AC_HOME","","",N,N],[17,"SDLK_AC_BACK","","",N,N],[17,"SDLK_AC_FORWARD","","",N,N],[17,"SDLK_AC_STOP","","",N,N],[17,"SDLK_AC_REFRESH","","",N,N],[17,"SDLK_AC_BOOKMARKS","","",N,N],[17,"SDLK_BRIGHTNESSDOWN","","",N,N],[17,"SDLK_BRIGHTNESSUP","","",N,N],[17,"SDLK_DISPLAYSWITCH","","",N,N],[17,"SDLK_KBDILLUMTOGGLE","","",N,N],[17,"SDLK_KBDILLUMDOWN","","",N,N],[17,"SDLK_KBDILLUMUP","","",N,N],[17,"SDLK_EJECT","","",N,N],[17,"SDLK_SLEEP","","",N,N],[17,"SDLK_APP1","","",N,N],[17,"SDLK_APP2","","",N,N],[17,"SDLK_AUDIOREWIND","","",N,N],[17,"SDLK_AUDIOFASTFORWARD","","",N,N],[17,"SDL_LOG_CATEGORY_APPLICATION","","",N,N],[17,"SDL_LOG_CATEGORY_ERROR","","",N,N],[17,"SDL_LOG_CATEGORY_ASSERT","","",N,N],[17,"SDL_LOG_CATEGORY_SYSTEM","","",N,N],[17,"SDL_LOG_CATEGORY_AUDIO","","",N,N],[17,"SDL_LOG_CATEGORY_VIDEO","","",N,N],[17,"SDL_LOG_CATEGORY_RENDER","","",N,N],[17,"SDL_LOG_CATEGORY_INPUT","","",N,N],[17,"SDL_LOG_CATEGORY_TEST","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED1","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED2","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED3","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED4","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED5","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED6","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED7","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED8","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED9","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED10","","",N,N],[17,"SDL_LOG_CATEGORY_CUSTOM","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",92,[[["self"]],["sdl_bool"]]],[11,"clone","","",93,[[["self"]],["sdl_dummy_enum"]]],[11,"clone","","",139,[[["self"]],["_sdl_iconv_t"]]],[11,"clone","","",94,[[["self"]],["sdl_assertstate"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",95,[[["self"]],["sdl_errorcode"]]],[11,"clone","","",140,[[["self"]],["sdl_mutex"]]],[11,"clone","","",141,[[["self"]],["sdl_semaphore"]]],[11,"clone","","",142,[[["self"]],["sdl_cond"]]],[11,"clone","","",143,[[["self"]],["sdl_thread"]]],[11,"clone","","",96,[[["self"]],["sdl_threadpriority"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",76,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",7,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["sdl_audiostatus"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",77,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"clone","","",78,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"clone","","",85,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"clone","","",98,[[["self"]],["_bindgen_ty_1"]]],[11,"clone","","",99,[[["self"]],["_bindgen_ty_2"]]],[11,"clone","","",100,[[["self"]],["_bindgen_ty_3"]]],[11,"clone","","",101,[[["self"]],["_bindgen_ty_4"]]],[11,"clone","","",102,[[["self"]],["_bindgen_ty_5"]]],[11,"clone","","",103,[[["self"]],["_bindgen_ty_6"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",25,[[["self"]],["self"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",27,[[["self"]],["self"]]],[11,"clone","","",104,[[["self"]],["sdl_blendmode"]]],[11,"clone","","",105,[[["self"]],["sdl_blendoperation"]]],[11,"clone","","",106,[[["self"]],["sdl_blendfactor"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"clone","","",29,[[["self"]],["self"]]],[11,"clone","","",144,[[["self"]],["sdl_window"]]],[11,"clone","","",107,[[["self"]],["sdl_windowflags"]]],[11,"clone","","",108,[[["self"]],["sdl_windoweventid"]]],[11,"clone","","",109,[[["self"]],["sdl_glattr"]]],[11,"clone","","",110,[[["self"]],["sdl_glprofile"]]],[11,"clone","","",111,[[["self"]],["sdl_glcontextflag"]]],[11,"clone","","",112,[[["self"]],["sdl_glcontextreleaseflag"]]],[11,"clone","","",113,[[["self"]],["sdl_glcontextresetnotification"]]],[11,"clone","","",114,[[["self"]],["sdl_hittestresult"]]],[11,"clone","","",115,[[["self"]],["sdl_scancode"]]],[11,"clone","","",116,[[["self"]],["_bindgen_ty_7"]]],[11,"clone","","",117,[[["self"]],["sdl_keymod"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",145,[[["self"]],["sdl_cursor"]]],[11,"clone","","",118,[[["self"]],["sdl_systemcursor"]]],[11,"clone","","",119,[[["self"]],["sdl_mousewheeldirection"]]],[11,"clone","","",146,[[["self"]],["_sdl_joystick"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",120,[[["self"]],["sdl_joysticktype"]]],[11,"clone","","",121,[[["self"]],["sdl_joystickpowerlevel"]]],[11,"clone","","",147,[[["self"]],["_sdl_gamecontroller"]]],[11,"clone","","",122,[[["self"]],["sdl_gamecontrollerbindtype"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",88,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",123,[[["self"]],["sdl_gamecontrolleraxis"]]],[11,"clone","","",124,[[["self"]],["sdl_gamecontrollerbutton"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",125,[[["self"]],["sdl_eventtype"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",50,[[["self"]],["self"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"clone","","",53,[[["self"]],["self"]]],[11,"clone","","",54,[[["self"]],["self"]]],[11,"clone","","",55,[[["self"]],["self"]]],[11,"clone","","",56,[[["self"]],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"clone","","",58,[[["self"]],["self"]]],[11,"clone","","",148,[[["self"]],["sdl_syswmmsg"]]],[11,"clone","","",59,[[["self"]],["self"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"clone","","",126,[[["self"]],["sdl_eventaction"]]],[11,"clone","","",149,[[["self"]],["_sdl_haptic"]]],[11,"clone","","",60,[[["self"]],["self"]]],[11,"clone","","",61,[[["self"]],["self"]]],[11,"clone","","",62,[[["self"]],["self"]]],[11,"clone","","",63,[[["self"]],["self"]]],[11,"clone","","",64,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"clone","","",66,[[["self"]],["self"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","","",127,[[["self"]],["sdl_hintpriority"]]],[11,"clone","","",128,[[["self"]],["_bindgen_ty_8"]]],[11,"clone","","",129,[[["self"]],["sdl_logpriority"]]],[11,"clone","","",130,[[["self"]],["sdl_messageboxflags"]]],[11,"clone","","",131,[[["self"]],["sdl_messageboxbuttonflags"]]],[11,"clone","","",67,[[["self"]],["self"]]],[11,"clone","","",68,[[["self"]],["self"]]],[11,"clone","","",132,[[["self"]],["sdl_messageboxcolortype"]]],[11,"clone","","",69,[[["self"]],["self"]]],[11,"clone","","",70,[[["self"]],["self"]]],[11,"clone","","",133,[[["self"]],["sdl_powerstate"]]],[11,"clone","","",134,[[["self"]],["sdl_rendererflags"]]],[11,"clone","","",71,[[["self"]],["self"]]],[11,"clone","","",135,[[["self"]],["sdl_textureaccess"]]],[11,"clone","","",136,[[["self"]],["sdl_texturemodulate"]]],[11,"clone","","",137,[[["self"]],["sdl_rendererflip"]]],[11,"clone","","",150,[[["self"]],["sdl_renderer"]]],[11,"clone","","",151,[[["self"]],["sdl_texture"]]],[11,"clone","","",138,[[["self"]],["windowshapemode"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"clone","","",72,[[["self"]],["self"]]],[11,"clone","","",73,[[["self"]],["self"]]],[11,"clone","","",74,[[["self"]],["self"]]],[11,"clone","","",75,[[["self"]],["self"]]],[11,"eq","","",92,[[["self"],["sdl_bool"]],["bool"]]],[11,"eq","","",93,[[["self"],["sdl_dummy_enum"]],["bool"]]],[11,"eq","","",94,[[["self"],["sdl_assertstate"]],["bool"]]],[11,"eq","","",95,[[["self"],["sdl_errorcode"]],["bool"]]],[11,"eq","","",96,[[["self"],["sdl_threadpriority"]],["bool"]]],[11,"eq","","",97,[[["self"],["sdl_audiostatus"]],["bool"]]],[11,"eq","","",98,[[["self"],["_bindgen_ty_1"]],["bool"]]],[11,"eq","","",99,[[["self"],["_bindgen_ty_2"]],["bool"]]],[11,"eq","","",100,[[["self"],["_bindgen_ty_3"]],["bool"]]],[11,"eq","","",101,[[["self"],["_bindgen_ty_4"]],["bool"]]],[11,"eq","","",102,[[["self"],["_bindgen_ty_5"]],["bool"]]],[11,"eq","","",103,[[["self"],["_bindgen_ty_6"]],["bool"]]],[11,"eq","","",104,[[["self"],["sdl_blendmode"]],["bool"]]],[11,"eq","","",105,[[["self"],["sdl_blendoperation"]],["bool"]]],[11,"eq","","",106,[[["self"],["sdl_blendfactor"]],["bool"]]],[11,"eq","","",107,[[["self"],["sdl_windowflags"]],["bool"]]],[11,"eq","","",108,[[["self"],["sdl_windoweventid"]],["bool"]]],[11,"eq","","",109,[[["self"],["sdl_glattr"]],["bool"]]],[11,"eq","","",110,[[["self"],["sdl_glprofile"]],["bool"]]],[11,"eq","","",111,[[["self"],["sdl_glcontextflag"]],["bool"]]],[11,"eq","","",112,[[["self"],["sdl_glcontextreleaseflag"]],["bool"]]],[11,"eq","","",113,[[["self"],["sdl_glcontextresetnotification"]],["bool"]]],[11,"eq","","",114,[[["self"],["sdl_hittestresult"]],["bool"]]],[11,"eq","","",115,[[["self"],["sdl_scancode"]],["bool"]]],[11,"eq","","",116,[[["self"],["_bindgen_ty_7"]],["bool"]]],[11,"eq","","",117,[[["self"],["sdl_keymod"]],["bool"]]],[11,"eq","","",118,[[["self"],["sdl_systemcursor"]],["bool"]]],[11,"eq","","",119,[[["self"],["sdl_mousewheeldirection"]],["bool"]]],[11,"eq","","",120,[[["self"],["sdl_joysticktype"]],["bool"]]],[11,"eq","","",121,[[["self"],["sdl_joystickpowerlevel"]],["bool"]]],[11,"eq","","",122,[[["self"],["sdl_gamecontrollerbindtype"]],["bool"]]],[11,"eq","","",123,[[["self"],["sdl_gamecontrolleraxis"]],["bool"]]],[11,"eq","","",124,[[["self"],["sdl_gamecontrollerbutton"]],["bool"]]],[11,"eq","","",125,[[["self"],["sdl_eventtype"]],["bool"]]],[11,"eq","","",126,[[["self"],["sdl_eventaction"]],["bool"]]],[11,"eq","","",127,[[["self"],["sdl_hintpriority"]],["bool"]]],[11,"eq","","",128,[[["self"],["_bindgen_ty_8"]],["bool"]]],[11,"eq","","",129,[[["self"],["sdl_logpriority"]],["bool"]]],[11,"eq","","",130,[[["self"],["sdl_messageboxflags"]],["bool"]]],[11,"eq","","",131,[[["self"],["sdl_messageboxbuttonflags"]],["bool"]]],[11,"eq","","",132,[[["self"],["sdl_messageboxcolortype"]],["bool"]]],[11,"eq","","",133,[[["self"],["sdl_powerstate"]],["bool"]]],[11,"eq","","",134,[[["self"],["sdl_rendererflags"]],["bool"]]],[11,"eq","","",135,[[["self"],["sdl_textureaccess"]],["bool"]]],[11,"eq","","",136,[[["self"],["sdl_texturemodulate"]],["bool"]]],[11,"eq","","",137,[[["self"],["sdl_rendererflip"]],["bool"]]],[11,"eq","","",138,[[["self"],["windowshapemode"]],["bool"]]],[11,"hash","","",92,N],[11,"hash","","",93,N],[11,"hash","","",94,N],[11,"hash","","",95,N],[11,"hash","","",96,N],[11,"hash","","",97,N],[11,"hash","","",98,N],[11,"hash","","",99,N],[11,"hash","","",100,N],[11,"hash","","",101,N],[11,"hash","","",102,N],[11,"hash","","",103,N],[11,"hash","","",104,N],[11,"hash","","",105,N],[11,"hash","","",106,N],[11,"hash","","",107,N],[11,"hash","","",108,N],[11,"hash","","",109,N],[11,"hash","","",110,N],[11,"hash","","",111,N],[11,"hash","","",112,N],[11,"hash","","",113,N],[11,"hash","","",114,N],[11,"hash","","",115,N],[11,"hash","","",116,N],[11,"hash","","",117,N],[11,"hash","","",118,N],[11,"hash","","",119,N],[11,"hash","","",120,N],[11,"hash","","",121,N],[11,"hash","","",122,N],[11,"hash","","",123,N],[11,"hash","","",124,N],[11,"hash","","",125,N],[11,"hash","","",126,N],[11,"hash","","",127,N],[11,"hash","","",128,N],[11,"hash","","",129,N],[11,"hash","","",130,N],[11,"hash","","",131,N],[11,"hash","","",132,N],[11,"hash","","",133,N],[11,"hash","","",134,N],[11,"hash","","",135,N],[11,"hash","","",136,N],[11,"hash","","",137,N],[11,"hash","","",138,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"__fsid_t"],[3,"SDL_AssertData"],[3,"SDL_atomic_t"],[3,"SDL_RWops"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2"],[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_internal_list"],[3,"__pthread_mutex_s"],[3,"__pthread_cond_s"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"random_data"],[3,"drand48_data"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_Point"],[3,"SDL_Rect"],[3,"SDL_Surface"],[3,"SDL_DisplayMode"],[3,"SDL_Keysym"],[3,"SDL_JoystickGUID"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_Finger"],[3,"SDL_CommonEvent"],[3,"SDL_WindowEvent"],[3,"SDL_KeyboardEvent"],[3,"SDL_TextEditingEvent"],[3,"SDL_TextInputEvent"],[3,"SDL_MouseMotionEvent"],[3,"SDL_MouseButtonEvent"],[3,"SDL_MouseWheelEvent"],[3,"SDL_JoyAxisEvent"],[3,"SDL_JoyBallEvent"],[3,"SDL_JoyHatEvent"],[3,"SDL_JoyButtonEvent"],[3,"SDL_JoyDeviceEvent"],[3,"SDL_ControllerAxisEvent"],[3,"SDL_ControllerButtonEvent"],[3,"SDL_ControllerDeviceEvent"],[3,"SDL_AudioDeviceEvent"],[3,"SDL_TouchFingerEvent"],[3,"SDL_MultiGestureEvent"],[3,"SDL_DollarGestureEvent"],[3,"SDL_DropEvent"],[3,"SDL_QuitEvent"],[3,"SDL_OSEvent"],[3,"SDL_UserEvent"],[3,"SDL_SysWMEvent"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[3,"SDL_RendererInfo"],[3,"SDL_WindowShapeMode"],[3,"SDL_version"],[3,"__va_list_tag"],[3,"SDL_BlitMap"],[19,"SDL_RWops__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[19,"SDL_GameControllerButtonBind__bindgen_ty_1"],[19,"SDL_Event"],[19,"SDL_HapticEffect"],[19,"SDL_WindowShapeParams"],[4,"SDL_bool"],[4,"SDL_DUMMY_ENUM"],[4,"SDL_AssertState"],[4,"SDL_errorcode"],[4,"SDL_ThreadPriority"],[4,"SDL_AudioStatus"],[4,"_bindgen_ty_1"],[4,"_bindgen_ty_2"],[4,"_bindgen_ty_3"],[4,"_bindgen_ty_4"],[4,"_bindgen_ty_5"],[4,"_bindgen_ty_6"],[4,"SDL_BlendMode"],[4,"SDL_BlendOperation"],[4,"SDL_BlendFactor"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_GLcontextFlag"],[4,"SDL_GLcontextReleaseFlag"],[4,"SDL_GLContextResetNotification"],[4,"SDL_HitTestResult"],[4,"SDL_Scancode"],[4,"_bindgen_ty_7"],[4,"SDL_Keymod"],[4,"SDL_SystemCursor"],[4,"SDL_MouseWheelDirection"],[4,"SDL_JoystickType"],[4,"SDL_JoystickPowerLevel"],[4,"SDL_GameControllerBindType"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[4,"SDL_EventType"],[4,"SDL_eventaction"],[4,"SDL_HintPriority"],[4,"_bindgen_ty_8"],[4,"SDL_LogPriority"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[4,"SDL_MessageBoxColorType"],[4,"SDL_PowerState"],[4,"SDL_RendererFlags"],[4,"SDL_TextureAccess"],[4,"SDL_TextureModulate"],[4,"SDL_RendererFlip"],[4,"WindowShapeMode"],[3,"_SDL_iconv_t"],[3,"SDL_mutex"],[3,"SDL_semaphore"],[3,"SDL_cond"],[3,"SDL_Thread"],[3,"SDL_Window"],[3,"SDL_Cursor"],[3,"_SDL_Joystick"],[3,"_SDL_GameController"],[3,"SDL_SysWMmsg"],[3,"_SDL_Haptic"],[3,"SDL_Renderer"],[3,"SDL_Texture"]]};
searchIndex["sdl2_window"]={"doc":"A SDL2 window back-end for the Piston game engine.","items":[[4,"OpenGL","sdl2_window","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[3,"Sdl2Window","","A window implemented by SDL2 back-end.",N,N],[12,"window","","SDL window handle.",1,N],[12,"context","","Allow dead code because this keeps track of the OpenGL context. Will be released on drop.",1,N],[12,"sdl_context","","SDL context.",1,N],[12,"video_subsystem","","Video subsystem.",1,N],[5,"sdl2_map_key","","Maps a SDL2 key to piston-input key.",N,[[["keycode"]],["key"]]],[5,"sdl2_map_mouse","","Maps a SDL2 mouse button to piston-input button.",N,[[["mousebutton"]],["mousebutton"]]],[11,"new","","Creates a new game window for SDL2. This will initialize SDL and the video subsystem. You can retrieve both via the public fields on the `Sdl2Window` struct.",1,[[["windowsettings"]],["result",["string"]]]],[11,"with_subsystem","","Creates a window with the supplied SDL Video subsystem.",1,[[["videosubsystem"],["windowsettings"]],["result",["string"]]]],[11,"init_joysticks","","Initialize the joystick subsystem. Required before joystick input events will be returned. Returns the number available or error.",1,[[["self"]],["result",["u32","string"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["opengl"]]],[11,"partial_cmp","","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["opengl"]],["ordering"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_str","","",0,[[["str"]],["result",["opengl"]]]],[11,"eq","","",0,[[["self"],["opengl"]],["bool"]]],[11,"drop","","",1,[[["self"]]]],[11,"build_from_window_settings","","",1,[[["windowsettings"]],["result",["string"]]]],[11,"should_close","","",1,[[["self"]],["bool"]]],[11,"set_should_close","","",1,[[["self"],["bool"]]]],[11,"swap_buffers","","",1,[[["self"]]]],[11,"size","","",1,[[["self"]],["size"]]],[11,"wait_event","","",1,[[["self"]],["input"]]],[11,"wait_event_timeout","","",1,[[["self"],["duration"]],["option",["input"]]]],[11,"poll_event","","",1,[[["self"]],["option",["input"]]]],[11,"draw_size","","",1,[[["self"]],["size"]]],[11,"get_title","","",1,[[["self"]],["string"]]],[11,"set_title","","",1,[[["self"],["string"]]]],[11,"get_exit_on_esc","","",1,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","",1,[[["self"],["bool"]]]],[11,"set_capture_cursor","","",1,[[["self"],["bool"]]]],[11,"show","","",1,[[["self"]]]],[11,"hide","","",1,[[["self"]]]],[11,"get_position","","",1,[[["self"]],["option",["position"]]]],[11,"set_position","","",1,[[["self"],["p"]]]],[11,"set_size","","",1,[[["self"],["s"]]]],[11,"get_proc_address","","",1,[[["self"],["str"]],["procaddress"]]],[11,"is_current","","",1,[[["self"]],["bool"]]],[11,"make_current","","",1,[[["self"]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]]],"paths":[[4,"OpenGL"],[3,"Sdl2Window"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not expected.",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",0,N],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte slice.",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",N,N],[10,"custom","","Raised when there is general error when deserializing a type.",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",N,N],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",15,N],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to deserialize.",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is built with support for 128-bit integers.",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["shader_version"]={"doc":"A helper library for detecting and picking compatible shaders.","items":[[3,"Shaders","shader_version","Shader picker.",N,N],[0,"opengl","","Models versions of OpenGL",N,N],[3,"ParseOpenGLError","shader_version::opengl","Represents an error while trying to get `OpenGL` from `&str`.",N,N],[4,"OpenGL","","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",N,N],[3,"ParseGLSLError","shader_version::glsl","Represents an error while trying to get `GLSL` from `&str`.",N,N],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the same as the OpenGL version.",N,N],[13,"V1_10","","",1,N],[13,"V1_20","","",1,N],[13,"V1_30","","",1,N],[13,"V1_40","","",1,N],[13,"V1_50","","",1,N],[13,"V3_30","","",1,N],[13,"V4_00","","",1,N],[13,"V4_10","","",1,N],[13,"V4_20","","",1,N],[13,"V4_30","","",1,N],[13,"V4_40","","",1,N],[13,"V4_50","","",1,N],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,[[["self"]],["opengl"]]],[8,"PickShader","shader_version","Implemented by shader version enums.",N,N],[10,"pick_shader","","Pick shader.",2,[[["self"],["shaders"]],["option"]]],[11,"new","","Creates a new shader picker.",3,[[],["self"]]],[11,"set","","Sets source for a shader version.",3,[[["self"],["v"],["s"]],["self"]]],[11,"get","","Get the closest shader to a shader version.",3,[[["self"],["v"]],["option"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","shader_version::opengl","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","shader_version::glsl","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"pick_shader","","",1,[[["self"],["shaders"]],["option"]]],[11,"clone","shader_version::opengl","",0,[[["self"]],["opengl"]]],[11,"clone","shader_version::glsl","",1,[[["self"]],["glsl"]]],[11,"partial_cmp","shader_version::opengl","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"partial_cmp","shader_version::glsl","",1,[[["self"],["glsl"]],["option",["ordering"]]]],[11,"eq","shader_version::opengl","",0,[[["self"],["opengl"]],["bool"]]],[11,"eq","shader_version::glsl","",1,[[["self"],["glsl"]],["bool"]]],[11,"cmp","shader_version::opengl","",0,[[["self"],["opengl"]],["ordering"]]],[11,"cmp","shader_version::glsl","",1,[[["self"],["glsl"]],["ordering"]]],[11,"fmt","shader_version::opengl","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","shader_version::glsl","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","shader_version::opengl","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","shader_version::glsl","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from_str","shader_version::opengl","",0,[[["str"]],["result"]]],[11,"from_str","shader_version::glsl","",1,[[["str"]],["result"]]],[11,"description","shader_version::opengl","",4,[[["self"]],["str"]]],[11,"description","shader_version::glsl","",5,[[["self"]],["str"]]]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"PickShader"],[3,"Shaders"],[3,"ParseOpenGLError"],[3,"ParseGLSLError"]]};
searchIndex["shaders_graphics2d"]={"doc":"Shaders for 2D graphics backends.","items":[[0,"colored","shaders_graphics2d","Shaders for colored rendering.",N,N],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE","","Fragmentshader for GLSL 1.50",N,N],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20 WebGL",N,N],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50 WebGL",N,N],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20 WebGL",N,N],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragmentshader for GLSL 1.50 WebGL",N,N],[0,"textured","shaders_graphics2d","Shaders for textured rendering.",N,N],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE","","Fragment shader for GLSL 1.50",N,N],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragment shader for GLSL 1.50",N,N]],"paths":[]};
searchIndex["sorting_visualization"]={"doc":"sorting-visualization","items":[[5,"main","sorting_visualization","",N,[[]]],[5,"run","","",N,[[],["result",["error"]]]],[0,"algorithms","","Different sorting algorithms as well as the general `Algorithm` trait.",N,N],[0,"bubble","sorting_visualization::algorithms","Bubble sort",N,N],[3,"BubbleSort","sorting_visualization::algorithms::bubble","Bubble sort",N,N],[0,"cycle","sorting_visualization::algorithms","Cycle sort",N,N],[3,"CycleSort","sorting_visualization::algorithms::cycle","Cycle sort",N,N],[11,"find_sorted_index","","",0,[[["self"],["array"],["usize"],["u32"]],["usize"]]],[0,"gnome","sorting_visualization::algorithms","Gnome sort",N,N],[3,"GnomeSort","sorting_visualization::algorithms::gnome","Gnome sort",N,N],[0,"insertion","sorting_visualization::algorithms","Insertion sort",N,N],[3,"InsertionSort","sorting_visualization::algorithms::insertion","Insertion sort",N,N],[0,"quicksort","sorting_visualization::algorithms","Quicksort",N,N],[3,"Quicksort","sorting_visualization::algorithms::quicksort","Quicksort",N,N],[11,"sort_slice","","",1,[[["self"],["array"],["isize"],["isize"]]]],[11,"partition","","",1,[[["self"],["array"],["isize"],["isize"]],["isize"]]],[0,"selection","sorting_visualization::algorithms","Selection sort",N,N],[3,"SelectionSort","sorting_visualization::algorithms::selection","Selection sort",N,N],[0,"shell","sorting_visualization::algorithms","Shell sort",N,N],[3,"Shellsort","sorting_visualization::algorithms::shell","Shell sort",N,N],[8,"Algorithm","sorting_visualization::algorithms","The general trait for all sorting algorithms.",N,N],[10,"sort","","Sorts a given array. This method is called in a so called \"algorithm thread\".",2,[[["self"],["array"]]]],[10,"name","","Returns the name of the algorithm that will be displayed to the user. Returned value is an owned [String] so it can be generated at runtime.",2,[[["self"]],["string"]]],[0,"app","sorting_visualization","The [`App`] struct and some constants.",N,N],[3,"App","sorting_visualization::app","This struct contains all rendering, updating and input handling logic.",N,N],[12,"state","","",3,N],[12,"algorithm_thread","","",3,N],[17,"BACKGROUND_COLOR","","Color that is used to clear the window before drawing.",N,N],[17,"VALUE_COLOR","","Color of rectangles that represent the array values.",N,N],[17,"ACCESSSED_VALUE_COLOR","","Color of the values that were recently accessed.",N,N],[17,"ACCESSED_VALUE_TIMEOUT","","Time in seconds after which array accesses get removed.",N,N],[17,"STATUS_TEXT_FONT_SIZE","","Font size of the status text in pixels.",N,N],[17,"STATUS_TEXT_MARGIN","","Margins between the status text and window borders.",N,N],[11,"init","","Creates a new app (with a state constructed from the given `array`) and starts an algorithm thread. This function is called `init` instead of `new` because it has side effects.",3,[[["box",["algorithm"]],["vec",["u32"]],["f64"]],["self"]]],[11,"render","","Draws the current state.",3,[[["self"],["renderargs"],["glgraphics"],["glyphcache"]]]],[11,"update","","Advances the state by a given amount of time.",3,[[["self"],["updateargs"]]]],[11,"button","","Handles user input and updates the state.",3,[[["self"],["buttonargs"]]]],[0,"array","sorting_visualization","The `Array` struct.",N,N],[3,"Array","sorting_visualization::array","A convenient wrapper around [`SharedState`] for algorithms that handles concurrency and all that stuff. All methods in this struct lock the state for as short as possible so that the rendering thread can lock it when it wants.",N,N],[12,"0","","",4,N],[11,"new","","Creates a new array from a copy of [`SharedState`].",4,[[["sharedstate"]],["self"]]],[11,"wait","","Puts the current thread to sleep for the specified amount of time and blocks it if the animation is paused.",4,[[["self"],["u64"]]]],[11,"len","","Returns the length of the underlying vector.",4,[[["self"]],["usize"]]],[11,"get","","Returns a value at a given index.",4,[[["self"],["usize"]],["u32"]]],[11,"set","","Sets a value of the at a given index.",4,[[["self"],["usize"],["u32"]]]],[11,"swap","","Swaps two values at given indices.",4,[[["self"],["usize"],["usize"]]]],[11,"reset_color","","Resets color of the value at a given index (sets it to the transparent color).",4,[[["self"],["usize"]]]],[11,"set_color","","Sets color of the value at a given index.",4,[[["self"],["usize"],["color"]]]],[0,"cli","sorting_visualization","Command-line interface and command-line argument parsing. Uses [clap] under the hood.",N,N],[3,"Options","sorting_visualization::cli","Contains all options that can be provided by a user using the CLI.",N,N],[12,"algorithm","","Instance of a sorting algorithm struct.",5,N],[12,"length","","Number of elements in the array.",5,N],[12,"order","","Order of elements in the array.",5,N],[12,"speed","","Speed factor.",5,N],[4,"Order","","Order of elements in the array.",N,N],[13,"Sorted","","Sorted in the ascending order.",6,N],[13,"Reversed","","Sorted in the descending order.",6,N],[13,"Shuffled","","Shuffled.",6,N],[5,"parse_options","","Parses command-line arguments into [`Options`]. If the help/version is printed or an error occurs, it will be displayed to the user and the process will exit.",N,[[],["options"]]],[17,"ALGORITHM_ARG","","Internal name of the algorithm argument which is used to get its value.",N,N],[17,"LENGTH_OPT","","Internal name of the `--length`/`-l` option which is used to get its value.",N,N],[17,"ORDER_OPT","","Internal name of the `--order`/`-o` option which is used to get its value.",N,N],[17,"SPEED_OPT","","Internal name of the `--speed`/`-s` option which is used to get its value.",N,N],[0,"state","sorting_visualization","Structs and type definitions that describe the app state.",N,N],[3,"SharedState","sorting_visualization::state","A wrapper around [`State`] that can be safely shared between threads.",N,N],[12,"0","","",7,N],[3,"State","","Contains the state of the whole app.",N,N],[12,"time","","Current time in seconds. Updated if the animation is not paused.",8,N],[12,"speed","","Speed factor (e.g. 1.0 - normal, 2.0 - 2x faster, 0.5 - 2x slower, etc). Affects the animation time and delays in algorithms.",8,N],[12,"paused","","Is the animation paused?",8,N],[12,"array","","An array which is being sorted.",8,N],[12,"colors","","Colored overlays of each value. Overlay means that these colors are not used to draw the values, instead they're drawn over the values. These colors can be used by an algorithm to highlight important array elements.",8,N],[12,"array_accesses","","Contains indexes and timestamps of recent array accesses which are drawn as colored overlays. When an algorithm reads a value from the array a new [`ArrayAccess`] with index and the current time is pushed to this vector.",8,N],[3,"ArrayAccess","","",N,N],[12,"time","","",9,N],[12,"index","","",9,N],[11,"new","","",7,[[["state"]],["self"]]],[11,"get","","",7,[[["self"]],["mutexguard",["state"]]]],[17,"OPENGL_VERSION","sorting_visualization","Required version of OpenGL.",N,N],[17,"WINDOW_TITLE","","Title of the main window.",N,N],[17,"WINDOW_SIZE","","Initial size of the main window.",N,N],[11,"from","sorting_visualization::algorithms::bubble","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::cycle","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::gnome","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::insertion","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::quicksort","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::selection","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::algorithms::shell","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::app","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::array","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::cli","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","sorting_visualization::state","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"sort","sorting_visualization::algorithms::bubble","",10,[[["self"],["array"]]]],[11,"name","","",10,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::cycle","",0,[[["self"],["array"]]]],[11,"name","","",0,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::gnome","",11,[[["self"],["array"]]]],[11,"name","","",11,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::insertion","",12,[[["self"],["array"]]]],[11,"name","","",12,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::quicksort","",1,[[["self"],["array"]]]],[11,"name","","",1,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::selection","",13,[[["self"],["array"]]]],[11,"name","","",13,[[["self"]],["string"]]],[11,"sort","sorting_visualization::algorithms::shell","",14,[[["self"],["array"]]]],[11,"name","","",14,[[["self"]],["string"]]],[11,"clone","sorting_visualization::state","",7,[[["self"]],["sharedstate"]]],[11,"fmt","sorting_visualization::app","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","sorting_visualization::array","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","sorting_visualization::state","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"CycleSort"],[3,"Quicksort"],[8,"Algorithm"],[3,"App"],[3,"Array"],[3,"Options"],[4,"Order"],[3,"SharedState"],[3,"State"],[3,"ArrayAccess"],[3,"BubbleSort"],[3,"GnomeSort"],[3,"InsertionSort"],[3,"SelectionSort"],[3,"Shellsort"]]};
searchIndex["stb_truetype"]={"doc":"","items":[[3,"FontInfo","stb_truetype","",N,N],[3,"Vertex","","",N,N],[12,"x","","",0,N],[12,"y","","",0,N],[12,"cx","","",0,N],[12,"cy","","",0,N],[3,"Rect","","",N,N],[12,"x0","","",1,N],[12,"y0","","",1,N],[12,"x1","","",1,N],[12,"y1","","",1,N],[3,"HMetrics","","",N,N],[12,"advance_width","","",2,N],[12,"left_side_bearing","","",2,N],[3,"VMetrics","","",N,N],[12,"ascent","","",3,N],[12,"descent","","",3,N],[12,"line_gap","","",3,N],[3,"FontNameIter","","",N,N],[4,"VertexType","","",N,N],[13,"MoveTo","","",4,N],[13,"LineTo","","",4,N],[13,"CurveTo","","",4,N],[4,"PlatformId","","",N,N],[13,"Unicode","","",5,N],[13,"Mac","","",5,N],[13,"Iso","","",5,N],[13,"Microsoft","","",5,N],[4,"UnicodeEid","","",N,N],[13,"Unicode_1_0","","",6,N],[13,"Unicode_1_1","","",6,N],[13,"Iso_10646","","",6,N],[13,"Unicode_2_0_Bmp","","",6,N],[13,"Unicode_2_0_Full","","",6,N],[4,"MicrosoftEid","","",N,N],[13,"Symbol","","",7,N],[13,"UnicodeBMP","","",7,N],[13,"Shiftjis","","",7,N],[13,"UnicodeFull","","",7,N],[4,"MacEid","","",N,N],[13,"Roman","","",8,N],[13,"Arabic","","",8,N],[13,"Japanese","","",8,N],[13,"Hebrew","","",8,N],[13,"ChineseTrad","","",8,N],[13,"Greek","","",8,N],[13,"Korean","","",8,N],[13,"Russian","","",8,N],[4,"MicrosoftLang","","",N,N],[13,"English","","",9,N],[13,"Italian","","",9,N],[13,"Chinese","","",9,N],[13,"Japanese","","",9,N],[13,"Dutch","","",9,N],[13,"Korean","","",9,N],[13,"French","","",9,N],[13,"Russian","","",9,N],[13,"German","","",9,N],[13,"Hebrew","","",9,N],[13,"Swedish","","",9,N],[4,"MacLang","","",N,N],[13,"English","","",10,N],[13,"Japanese","","",10,N],[13,"Arabic","","",10,N],[13,"Korean","","",10,N],[13,"Dutch","","",10,N],[13,"Russian","","",10,N],[13,"French","","",10,N],[13,"Spanish","","",10,N],[13,"German","","",10,N],[13,"Swedish","","",10,N],[13,"Hebrew","","",10,N],[13,"ChineseSimplified","","",10,N],[13,"Italian","","",10,N],[13,"ChineseTrad","","",10,N],[4,"PlatformEncodingLanguageId","","",N,N],[13,"Unicode","","",11,N],[13,"Mac","","",11,N],[13,"Iso","","",11,N],[13,"Microsoft","","",11,N],[5,"is_font","","Return `true` if `data` holds a font stored in a format this crate recognizes, according to its signature in the initial bytes.",N,N],[5,"is_collection","","Return `true` if `data` holds a TrueType Collection, according to its signature in the initial bytes. A TrueType Collection stores several fonts in a single file, allowing them to share data for glyphs they have in common.",N,N],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font has a sequential index number starting from 0. Call this function to get the font offset for a given index; it returns None if the index is out of range. A regular .ttf file will only define one font and it always be at offset 0, so it will return Some(0) for index 0, and None for all other indices. You can just skip this step if you know it's that kind of font.",N,N],[11,"vertex_type","","",0,[[["self"]],["vertextype"]]],[11,"new","","Given an offset into the file that defines a font, this function builds the necessary cached info for the rest of the system.",12,[[["data"],["usize"]],["option",["fontinfo"]]]],[11,"get_num_glyphs","","",12,[[["self"]],["u32"]]],[11,"find_glyph_index","","If you're going to perform multiple operations on the same character and you want a speed-up, call this function with the character you're going to process, then use glyph-based functions instead of the codepoint-based functions.",12,[[["self"],["u32"]],["u32"]]],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the glyph for this codepoint.",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in unscaled coordinates",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",12,[[["self"],["u32"]],["bool"]]],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices instead. Use this if you have cached the glyph indices for the codepoints.",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_kern_advance","","an additional amount to add to the 'advance' value between cp1 and cp2",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current horizontal position to the left edge of the character `advance_width` is the offset from the current horizontal position to the next horizontal position these are expressed in unscaled coordinates",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font extends; descent is the coordinate below the baseline the font extends (i.e. it is typically negative) `line_gap` is the spacing between one row's descent and the next row's ascent... so you should advance the vertical position by `ascent - descent + line_gap` these are expressed in unscaled coordinates, so you must multiply by the scale factor for a given size",12,[[["self"]],["vmetrics"]]],[11,"get_bounding_box","","the bounding box around all possible characters",12,[[["self"]],["rect",["i16"]]]],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose \"height\" is 'pixels' tall. Height is measured as the distance from the highest ascender to the lowest descender; in other words, it's equivalent to calling GetFontVMetrics and computing:       scale = pixels / (ascent - descent) so if you prefer to measure height by the ascent only, use a similar calculation.",12,[[["self"],["f32"]],["f32"]]],[11,"units_per_em","","Returns the units per EM square of this font.",12,[[["self"]],["u16"]]],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is mapped to `pixels` tall. This is probably what traditional APIs compute, but I'm not positive.",12,[[["self"],["f32"]],["f32"]]],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index instead of a codepoint.",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index instead of a codepoint.",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a subpixel shift for the character",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the glyph origin; so the bitmap width is x1-x0, height is y1-y0, and location to place the bitmap top left is (left_side_bearing*scale, y0). (Note that the bitmap uses y-increases-down, but the shape uses y-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_font_name_strings","","",12,[[["self"]],["fontnameiter"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"clone","","",12,[[["self"]],["fontinfo"]]],[11,"clone","","",0,[[["self"]],["vertex"]]],[11,"clone","","",4,[[["self"]],["vertextype"]]],[11,"clone","","",1,[[["self"]],["rect"]]],[11,"clone","","",2,[[["self"]],["hmetrics"]]],[11,"clone","","",3,[[["self"]],["vmetrics"]]],[11,"clone","","",5,[[["self"]],["platformid"]]],[11,"clone","","",6,[[["self"]],["unicodeeid"]]],[11,"clone","","",7,[[["self"]],["microsofteid"]]],[11,"clone","","",8,[[["self"]],["maceid"]]],[11,"clone","","",9,[[["self"]],["microsoftlang"]]],[11,"clone","","",10,[[["self"]],["maclang"]]],[11,"clone","","",11,[[["self"]],["platformencodinglanguageid"]]],[11,"clone","","",13,[[["self"]],["fontnameiter"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"partial_cmp","","",5,[[["self"],["platformid"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["unicodeeid"]],["option",["ordering"]]]],[11,"partial_cmp","","",7,[[["self"],["microsofteid"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["maceid"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["microsoftlang"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["maclang"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["platformencodinglanguageid"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"le","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"gt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ge","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"eq","","",4,[[["self"],["vertextype"]],["bool"]]],[11,"eq","","",5,[[["self"],["platformid"]],["bool"]]],[11,"eq","","",6,[[["self"],["unicodeeid"]],["bool"]]],[11,"eq","","",7,[[["self"],["microsofteid"]],["bool"]]],[11,"eq","","",8,[[["self"],["maceid"]],["bool"]]],[11,"eq","","",9,[[["self"],["microsoftlang"]],["bool"]]],[11,"eq","","",10,[[["self"],["maclang"]],["bool"]]],[11,"eq","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ne","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"cmp","","",5,[[["self"],["platformid"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["unicodeeid"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["microsofteid"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["maceid"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["microsoftlang"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["maclang"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["platformencodinglanguageid"]],["ordering"]]],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","","",11,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[4,"PlatformId"],[4,"UnicodeEid"],[4,"MicrosoftEid"],[4,"MacEid"],[4,"MicrosoftLang"],[4,"MacLang"],[4,"PlatformEncodingLanguageId"],[3,"FontInfo"],[3,"FontNameIter"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",N,N],[13,"DifferentLengthArgs","","",0,N],[5,"hamming","","Calculates the number of positions in the two strings where the characters differ. Returns an error if the strings have different lengths.",N,[[["str"],["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The returned value is between 0.0 and 1.0 (higher value means more similar).",N,[[["str"],["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common prefix.",N,[[["str"],["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, and substitutions required to change one string into the other.",N,[[["str"],["str"]],["usize"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. Each substring can only be edited once.",N,[[["str"],["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be edited an unlimited number of times, and the triangle inequality holds.",N,[[["str"],["str"]],["usize"]]],[6,"HammingResult","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"StrSimError"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional expression.",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",N,[[["str"]],["result",["error"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"Const","","`const`",N,N],[12,"span","","",95,N],[3,"Continue","","`continue`",N,N],[12,"span","","",96,N],[3,"Crate","","`crate`",N,N],[12,"span","","",97,N],[3,"Default","","`default`",N,N],[12,"span","","",98,N],[3,"Do","","`do`",N,N],[12,"span","","",99,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",100,N],[3,"Else","","`else`",N,N],[12,"span","","",101,N],[3,"Enum","","`enum`",N,N],[12,"span","","",102,N],[3,"Existential","","`existential`",N,N],[12,"span","","",103,N],[3,"Extern","","`extern`",N,N],[12,"span","","",104,N],[3,"Final","","`final`",N,N],[12,"span","","",105,N],[3,"Fn","","`fn`",N,N],[12,"span","","",106,N],[3,"For","","`for`",N,N],[12,"span","","",107,N],[3,"If","","`if`",N,N],[12,"span","","",108,N],[3,"Impl","","`impl`",N,N],[12,"span","","",109,N],[3,"In","","`in`",N,N],[12,"span","","",110,N],[3,"Let","","`let`",N,N],[12,"span","","",111,N],[3,"Loop","","`loop`",N,N],[12,"span","","",112,N],[3,"Macro","","`macro`",N,N],[12,"span","","",113,N],[3,"Match","","`match`",N,N],[12,"span","","",114,N],[3,"Mod","","`mod`",N,N],[12,"span","","",115,N],[3,"Move","","`move`",N,N],[12,"span","","",116,N],[3,"Mut","","`mut`",N,N],[12,"span","","",117,N],[3,"Override","","`override`",N,N],[12,"span","","",118,N],[3,"Priv","","`priv`",N,N],[12,"span","","",119,N],[3,"Pub","","`pub`",N,N],[12,"span","","",120,N],[3,"Ref","","`ref`",N,N],[12,"span","","",121,N],[3,"Return","","`return`",N,N],[12,"span","","",122,N],[3,"SelfType","","`Self`",N,N],[12,"span","","",123,N],[3,"SelfValue","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta item.",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["itermut",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string literal.",191,[[["self"]],["result",["error"]]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,N],[11,"value","","",192,[[["self"]],["vec",["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["u8"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["char"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"new","","",196,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+` character, to disambiguate them. For example in the expression `1 as T`, T may not contain a `+` character.",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its segments.",60,[[["parsestream"]],["result"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",198,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",198,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along with a cursor pointing at the next `TokenTree`.",198,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along with a cursor pointing at the next `TokenTree`.",198,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",198,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it along with a cursor pointing at the next `TokenTree`.",198,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",198,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",198,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",198,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign types.",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",N,N],[13,"Punctuated","","",200,N],[13,"End","","",200,N],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",201,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",201,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, with optional trailing punctuation.",201,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by punctuation of type `P`, not accepting trailing punctuation.",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, not accepting trailing punctuation.",201,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",200,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",200,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",200,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",200,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[11,"visit_abi","","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax tree node.",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input tokens.",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide how to parse.",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",N,N],[10,"parse","","",204,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",N,N],[16,"Output","","",205,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",205,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse stream.",206,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the position of our parse stream past it.",207,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree node of type `T` from this stream.",207,N],[11,"peek","","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",207,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",207,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this stream and building an error message if it is not one of a set of expected tokens.",207,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either the original or the fork does not advance the position of the other.",207,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse stream.",207,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream, advancing the position of this stream only if parsing succeeds.",207,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation underlying this parse stream.",207,[[["self"]],["cursor"]]],[11,"new","","Usually the [`ParseStream::error`] method will be used instead, which automatically uses the correct span from the current position of the parse stream.",208,[[["span"],["t"]],["self"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",208,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","syn","Conventional argument type associated with an invocation of an attribute macro.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to subsequent parsers.",N,N],[14,"braced","","Parse a set of curly braces and expose their content to subsequent parsers.",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to subsequent parsers.",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a compile error if the tokens fail to parse.",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given identifier as if it were a keyword.",N,N],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"not_found","","",209,[[["str"],["str"]],["e"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"not_found","","",6,[[["str"],["str"]],["e"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"not_found","","",7,[[["str"],["str"]],["e"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"not_found","","",8,[[["str"],["str"]],["e"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"not_found","","",9,[[["str"],["str"]],["e"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"not_found","","",210,[[["str"],["str"]],["e"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"not_found","","",211,[[["str"],["str"]],["e"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"not_found","","",212,[[["str"],["str"]],["e"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"not_found","","",213,[[["str"],["str"]],["e"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"not_found","","",10,[[["str"],["str"]],["e"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"not_found","","",214,[[["str"],["str"]],["e"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"not_found","","",215,[[["str"],["str"]],["e"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"not_found","","",216,[[["str"],["str"]],["e"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"not_found","","",11,[[["str"],["str"]],["e"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"not_found","","",12,[[["str"],["str"]],["e"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"not_found","","",217,[[["str"],["str"]],["e"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"not_found","","",218,[[["str"],["str"]],["e"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"not_found","","",13,[[["str"],["str"]],["e"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"not_found","","",219,[[["str"],["str"]],["e"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"not_found","","",220,[[["str"],["str"]],["e"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"not_found","","",221,[[["str"],["str"]],["e"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"not_found","","",222,[[["str"],["str"]],["e"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"not_found","","",14,[[["str"],["str"]],["e"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"not_found","","",223,[[["str"],["str"]],["e"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"not_found","","",15,[[["str"],["str"]],["e"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"not_found","","",224,[[["str"],["str"]],["e"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"not_found","","",225,[[["str"],["str"]],["e"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"not_found","","",226,[[["str"],["str"]],["e"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"not_found","","",227,[[["str"],["str"]],["e"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"not_found","","",16,[[["str"],["str"]],["e"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"not_found","","",17,[[["str"],["str"]],["e"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"not_found","","",228,[[["str"],["str"]],["e"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"not_found","","",229,[[["str"],["str"]],["e"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"not_found","","",230,[[["str"],["str"]],["e"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"not_found","","",231,[[["str"],["str"]],["e"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"not_found","","",232,[[["str"],["str"]],["e"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"not_found","","",233,[[["str"],["str"]],["e"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"not_found","","",234,[[["str"],["str"]],["e"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"not_found","","",235,[[["str"],["str"]],["e"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"not_found","","",236,[[["str"],["str"]],["e"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"not_found","","",18,[[["str"],["str"]],["e"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"not_found","","",237,[[["str"],["str"]],["e"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"not_found","","",19,[[["str"],["str"]],["e"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"not_found","","",238,[[["str"],["str"]],["e"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"not_found","","",239,[[["str"],["str"]],["e"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"not_found","","",20,[[["str"],["str"]],["e"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"not_found","","",21,[[["str"],["str"]],["e"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"not_found","","",22,[[["str"],["str"]],["e"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"not_found","","",23,[[["str"],["str"]],["e"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"not_found","","",24,[[["str"],["str"]],["e"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"not_found","","",25,[[["str"],["str"]],["e"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"not_found","","",26,[[["str"],["str"]],["e"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"not_found","","",27,[[["str"],["str"]],["e"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"not_found","","",28,[[["str"],["str"]],["e"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"not_found","","",29,[[["str"],["str"]],["e"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"not_found","","",30,[[["str"],["str"]],["e"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"not_found","","",240,[[["str"],["str"]],["e"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"not_found","","",241,[[["str"],["str"]],["e"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"not_found","","",190,[[["str"],["str"]],["e"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"not_found","","",31,[[["str"],["str"]],["e"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"not_found","","",32,[[["str"],["str"]],["e"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"not_found","","",193,[[["str"],["str"]],["e"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"not_found","","",192,[[["str"],["str"]],["e"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"not_found","","",194,[[["str"],["str"]],["e"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"not_found","","",196,[[["str"],["str"]],["e"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"not_found","","",195,[[["str"],["str"]],["e"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"not_found","","",191,[[["str"],["str"]],["e"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"not_found","","",33,[[["str"],["str"]],["e"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"not_found","","",34,[[["str"],["str"]],["e"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"not_found","","",35,[[["str"],["str"]],["e"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"not_found","","",36,[[["str"],["str"]],["e"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"not_found","","",37,[[["str"],["str"]],["e"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"not_found","","",38,[[["str"],["str"]],["e"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"not_found","","",39,[[["str"],["str"]],["e"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"not_found","","",40,[[["str"],["str"]],["e"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"not_found","","",41,[[["str"],["str"]],["e"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"not_found","","",42,[[["str"],["str"]],["e"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"not_found","","",43,[[["str"],["str"]],["e"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"not_found","","",44,[[["str"],["str"]],["e"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"not_found","","",45,[[["str"],["str"]],["e"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"not_found","","",46,[[["str"],["str"]],["e"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"not_found","","",47,[[["str"],["str"]],["e"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"not_found","","",48,[[["str"],["str"]],["e"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"not_found","","",49,[[["str"],["str"]],["e"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"not_found","","",50,[[["str"],["str"]],["e"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"not_found","","",51,[[["str"],["str"]],["e"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"not_found","","",52,[[["str"],["str"]],["e"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"not_found","","",53,[[["str"],["str"]],["e"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"not_found","","",54,[[["str"],["str"]],["e"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"not_found","","",55,[[["str"],["str"]],["e"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"not_found","","",56,[[["str"],["str"]],["e"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"not_found","","",57,[[["str"],["str"]],["e"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"not_found","","",58,[[["str"],["str"]],["e"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"not_found","","",59,[[["str"],["str"]],["e"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"not_found","","",60,[[["str"],["str"]],["e"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"not_found","","",61,[[["str"],["str"]],["e"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"not_found","","",62,[[["str"],["str"]],["e"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"not_found","","",63,[[["str"],["str"]],["e"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"not_found","","",64,[[["str"],["str"]],["e"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"not_found","","",65,[[["str"],["str"]],["e"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"not_found","","",66,[[["str"],["str"]],["e"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"not_found","","",67,[[["str"],["str"]],["e"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"not_found","","",68,[[["str"],["str"]],["e"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"not_found","","",69,[[["str"],["str"]],["e"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"not_found","","",70,[[["str"],["str"]],["e"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"not_found","","",71,[[["str"],["str"]],["e"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"not_found","","",72,[[["str"],["str"]],["e"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"not_found","","",73,[[["str"],["str"]],["e"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"not_found","","",74,[[["str"],["str"]],["e"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"not_found","","",75,[[["str"],["str"]],["e"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"not_found","","",76,[[["str"],["str"]],["e"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"not_found","","",77,[[["str"],["str"]],["e"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"not_found","","",78,[[["str"],["str"]],["e"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"not_found","","",79,[[["str"],["str"]],["e"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"not_found","","",80,[[["str"],["str"]],["e"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"not_found","","",81,[[["str"],["str"]],["e"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"not_found","","",82,[[["str"],["str"]],["e"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"not_found","","",83,[[["str"],["str"]],["e"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"not_found","","",84,[[["str"],["str"]],["e"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"not_found","","",85,[[["str"],["str"]],["e"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"not_found","","",86,[[["str"],["str"]],["e"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"not_found","","",87,[[["str"],["str"]],["e"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"not_found","","",88,[[["str"],["str"]],["e"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"not_found","","",89,[[["str"],["str"]],["e"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"not_found","","",90,[[["str"],["str"]],["e"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"not_found","","",91,[[["str"],["str"]],["e"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"not_found","","",92,[[["str"],["str"]],["e"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"not_found","","",93,[[["str"],["str"]],["e"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"not_found","","",94,[[["str"],["str"]],["e"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"not_found","","",95,[[["str"],["str"]],["e"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"not_found","","",96,[[["str"],["str"]],["e"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"not_found","","",97,[[["str"],["str"]],["e"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"not_found","","",98,[[["str"],["str"]],["e"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"not_found","","",99,[[["str"],["str"]],["e"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"not_found","","",100,[[["str"],["str"]],["e"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"not_found","","",101,[[["str"],["str"]],["e"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"not_found","","",102,[[["str"],["str"]],["e"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"not_found","","",103,[[["str"],["str"]],["e"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"not_found","","",104,[[["str"],["str"]],["e"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"not_found","","",105,[[["str"],["str"]],["e"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"not_found","","",106,[[["str"],["str"]],["e"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"not_found","","",107,[[["str"],["str"]],["e"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"not_found","","",108,[[["str"],["str"]],["e"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"not_found","","",109,[[["str"],["str"]],["e"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"not_found","","",110,[[["str"],["str"]],["e"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"not_found","","",111,[[["str"],["str"]],["e"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"not_found","","",112,[[["str"],["str"]],["e"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"not_found","","",113,[[["str"],["str"]],["e"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"not_found","","",114,[[["str"],["str"]],["e"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"not_found","","",115,[[["str"],["str"]],["e"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"not_found","","",116,[[["str"],["str"]],["e"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"not_found","","",117,[[["str"],["str"]],["e"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"not_found","","",118,[[["str"],["str"]],["e"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"not_found","","",119,[[["str"],["str"]],["e"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"not_found","","",120,[[["str"],["str"]],["e"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"not_found","","",121,[[["str"],["str"]],["e"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"not_found","","",122,[[["str"],["str"]],["e"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"not_found","","",123,[[["str"],["str"]],["e"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"not_found","","",124,[[["str"],["str"]],["e"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"not_found","","",125,[[["str"],["str"]],["e"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"not_found","","",126,[[["str"],["str"]],["e"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"not_found","","",127,[[["str"],["str"]],["e"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"not_found","","",128,[[["str"],["str"]],["e"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"not_found","","",129,[[["str"],["str"]],["e"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"not_found","","",130,[[["str"],["str"]],["e"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"not_found","","",131,[[["str"],["str"]],["e"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"not_found","","",132,[[["str"],["str"]],["e"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"not_found","","",133,[[["str"],["str"]],["e"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"not_found","","",134,[[["str"],["str"]],["e"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"not_found","","",135,[[["str"],["str"]],["e"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"not_found","","",136,[[["str"],["str"]],["e"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"not_found","","",137,[[["str"],["str"]],["e"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"not_found","","",138,[[["str"],["str"]],["e"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"not_found","","",139,[[["str"],["str"]],["e"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"not_found","","",140,[[["str"],["str"]],["e"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"not_found","","",141,[[["str"],["str"]],["e"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"not_found","","",142,[[["str"],["str"]],["e"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"not_found","","",143,[[["str"],["str"]],["e"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"not_found","","",144,[[["str"],["str"]],["e"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"not_found","","",145,[[["str"],["str"]],["e"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"not_found","","",146,[[["str"],["str"]],["e"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"not_found","","",147,[[["str"],["str"]],["e"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"not_found","","",148,[[["str"],["str"]],["e"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"not_found","","",149,[[["str"],["str"]],["e"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"not_found","","",150,[[["str"],["str"]],["e"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"not_found","","",151,[[["str"],["str"]],["e"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"not_found","","",152,[[["str"],["str"]],["e"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"not_found","","",153,[[["str"],["str"]],["e"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"not_found","","",154,[[["str"],["str"]],["e"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"not_found","","",155,[[["str"],["str"]],["e"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"not_found","","",156,[[["str"],["str"]],["e"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"not_found","","",157,[[["str"],["str"]],["e"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"not_found","","",158,[[["str"],["str"]],["e"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"not_found","","",159,[[["str"],["str"]],["e"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"not_found","","",160,[[["str"],["str"]],["e"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"not_found","","",161,[[["str"],["str"]],["e"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"not_found","","",162,[[["str"],["str"]],["e"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"not_found","","",163,[[["str"],["str"]],["e"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"not_found","","",164,[[["str"],["str"]],["e"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"not_found","","",165,[[["str"],["str"]],["e"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"not_found","","",166,[[["str"],["str"]],["e"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"not_found","","",167,[[["str"],["str"]],["e"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"not_found","","",168,[[["str"],["str"]],["e"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"not_found","","",169,[[["str"],["str"]],["e"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"not_found","","",170,[[["str"],["str"]],["e"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"not_found","","",171,[[["str"],["str"]],["e"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"not_found","","",172,[[["str"],["str"]],["e"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"not_found","","",173,[[["str"],["str"]],["e"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"not_found","","",174,[[["str"],["str"]],["e"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"not_found","","",175,[[["str"],["str"]],["e"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"not_found","","",176,[[["str"],["str"]],["e"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"not_found","","",177,[[["str"],["str"]],["e"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"not_found","","",178,[[["str"],["str"]],["e"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"not_found","","",179,[[["str"],["str"]],["e"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"not_found","","",180,[[["str"],["str"]],["e"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"not_found","","",181,[[["str"],["str"]],["e"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"not_found","","",182,[[["str"],["str"]],["e"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"not_found","","",183,[[["str"],["str"]],["e"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"not_found","","",184,[[["str"],["str"]],["e"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"not_found","","",185,[[["str"],["str"]],["e"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"not_found","","",186,[[["str"],["str"]],["e"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"not_found","","",187,[[["str"],["str"]],["e"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"not_found","","",188,[[["str"],["str"]],["e"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"not_found","","",189,[[["str"],["str"]],["e"]]],[11,"from","syn::buffer","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"not_found","","",197,[[["str"],["str"]],["e"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"not_found","","",198,[[["str"],["str"]],["e"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"not_found","","",201,[[["str"],["str"]],["e"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"not_found","","",242,[[["str"],["str"]],["e"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"not_found","","",243,[[["str"],["str"]],["e"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"not_found","","",244,[[["str"],["str"]],["e"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"not_found","","",245,[[["str"],["str"]],["e"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"not_found","","",246,[[["str"],["str"]],["e"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"not_found","","",247,[[["str"],["str"]],["e"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"not_found","","",200,[[["str"],["str"]],["e"]]],[11,"from","syn::parse","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"not_found","","",248,[[["str"],["str"]],["e"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"not_found","","",208,[[["str"],["str"]],["e"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"to_string","","",207,[[["self"]],["string"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"not_found","","",207,[[["str"],["str"]],["e"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"not_found","","",206,[[["str"],["str"]],["e"]]],[11,"clone","syn","",209,[[["self"]],["ident"]]],[11,"partial_cmp","","",209,[[["self"],["ident"]],["option",["ordering"]]]],[11,"cmp","","",209,[[["self"],["ident"]],["ordering"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",209,N],[11,"eq","","",209,[[["self"],["ident"]],["bool"]]],[11,"eq","","",209,[[["self"],["t"]],["bool"]]],[11,"to_tokens","","",209,N],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"parse_any","","",209,[[["parsestream"]],["result"]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",209,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["const"]]],[11,"clone","","",96,[[["self"]],["continue"]]],[11,"clone","","",97,[[["self"]],["crate"]]],[11,"clone","","",98,[[["self"]],["default"]]],[11,"clone","","",99,[[["self"]],["do"]]],[11,"clone","","",100,[[["self"]],["dyn"]]],[11,"clone","","",101,[[["self"]],["else"]]],[11,"clone","","",102,[[["self"]],["enum"]]],[11,"clone","","",103,[[["self"]],["existential"]]],[11,"clone","","",104,[[["self"]],["extern"]]],[11,"clone","","",105,[[["self"]],["final"]]],[11,"clone","","",106,[[["self"]],["fn"]]],[11,"clone","","",107,[[["self"]],["for"]]],[11,"clone","","",108,[[["self"]],["if"]]],[11,"clone","","",109,[[["self"]],["impl"]]],[11,"clone","","",110,[[["self"]],["in"]]],[11,"clone","","",111,[[["self"]],["let"]]],[11,"clone","","",112,[[["self"]],["loop"]]],[11,"clone","","",113,[[["self"]],["macro"]]],[11,"clone","","",114,[[["self"]],["match"]]],[11,"clone","","",115,[[["self"]],["mod"]]],[11,"clone","","",116,[[["self"]],["move"]]],[11,"clone","","",117,[[["self"]],["mut"]]],[11,"clone","","",118,[[["self"]],["override"]]],[11,"clone","","",119,[[["self"]],["priv"]]],[11,"clone","","",120,[[["self"]],["pub"]]],[11,"clone","","",121,[[["self"]],["ref"]]],[11,"clone","","",122,[[["self"]],["return"]]],[11,"clone","","",123,[[["self"]],["selftype"]]],[11,"clone","","",124,[[["self"]],["selfvalue"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprbox"]]],[11,"clone","","",222,[[["self"]],["exprinplace"]]],[11,"clone","","",210,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",227,[[["self"]],["exprmethodcall"]]],[11,"clone","","",235,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",236,[[["self"]],["exprtype"]]],[11,"clone","","",223,[[["self"]],["exprlet"]]],[11,"clone","","",221,[[["self"]],["exprif"]]],[11,"clone","","",238,[[["self"]],["exprwhile"]]],[11,"clone","","",219,[[["self"]],["exprforloop"]]],[11,"clone","","",224,[[["self"]],["exprloop"]]],[11,"clone","","",226,[[["self"]],["exprmatch"]]],[11,"clone","","",217,[[["self"]],["exprclosure"]]],[11,"clone","","",237,[[["self"]],["exprunsafe"]]],[11,"clone","","",214,[[["self"]],["exprblock"]]],[11,"clone","","",211,[[["self"]],["exprassign"]]],[11,"clone","","",212,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",228,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",229,[[["self"]],["exprreference"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"clone","","",218,[[["self"]],["exprcontinue"]]],[11,"clone","","",231,[[["self"]],["exprreturn"]]],[11,"clone","","",225,[[["self"]],["exprmacro"]]],[11,"clone","","",232,[[["self"]],["exprstruct"]]],[11,"clone","","",230,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",220,[[["self"]],["exprgroup"]]],[11,"clone","","",233,[[["self"]],["exprtry"]]],[11,"clone","","",213,[[["self"]],["exprasync"]]],[11,"clone","","",234,[[["self"]],["exprtryblock"]]],[11,"clone","","",239,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",240,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",241,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","syn::parse","",206,[[["self"]],["stepcursor"]]],[11,"clone","","",208,[[["self"]],["error"]]],[11,"extend","syn::punctuated","",201,[[["self"],["i"]]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"from","syn","",209,[[["selfvalue"]],["ident"]]],[11,"from","","",209,[[["selftype"]],["ident"]]],[11,"from","","",209,[[["super"]],["ident"]]],[11,"from","","",209,[[["crate"]],["ident"]]],[11,"from","","",209,[[["extern"]],["ident"]]],[11,"from","","",209,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","syn::parse","",208,[[["lexerror"]],["self"]]],[11,"drop","","",207,[[["self"]]]],[11,"next","syn::punctuated","",242,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"partial_cmp","syn","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"eq","syn::token","",87,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",88,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",89,[[["self"],["as"]],["bool"]]],[11,"eq","","",90,[[["self"],["async"]],["bool"]]],[11,"eq","","",91,[[["self"],["auto"]],["bool"]]],[11,"eq","","",92,[[["self"],["become"]],["bool"]]],[11,"eq","","",93,[[["self"],["box"]],["bool"]]],[11,"eq","","",94,[[["self"],["break"]],["bool"]]],[11,"eq","","",95,[[["self"],["const"]],["bool"]]],[11,"eq","","",96,[[["self"],["continue"]],["bool"]]],[11,"eq","","",97,[[["self"],["crate"]],["bool"]]],[11,"eq","","",98,[[["self"],["default"]],["bool"]]],[11,"eq","","",99,[[["self"],["do"]],["bool"]]],[11,"eq","","",100,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",101,[[["self"],["else"]],["bool"]]],[11,"eq","","",102,[[["self"],["enum"]],["bool"]]],[11,"eq","","",103,[[["self"],["existential"]],["bool"]]],[11,"eq","","",104,[[["self"],["extern"]],["bool"]]],[11,"eq","","",105,[[["self"],["final"]],["bool"]]],[11,"eq","","",106,[[["self"],["fn"]],["bool"]]],[11,"eq","","",107,[[["self"],["for"]],["bool"]]],[11,"eq","","",108,[[["self"],["if"]],["bool"]]],[11,"eq","","",109,[[["self"],["impl"]],["bool"]]],[11,"eq","","",110,[[["self"],["in"]],["bool"]]],[11,"eq","","",111,[[["self"],["let"]],["bool"]]],[11,"eq","","",112,[[["self"],["loop"]],["bool"]]],[11,"eq","","",113,[[["self"],["macro"]],["bool"]]],[11,"eq","","",114,[[["self"],["match"]],["bool"]]],[11,"eq","","",115,[[["self"],["mod"]],["bool"]]],[11,"eq","","",116,[[["self"],["move"]],["bool"]]],[11,"eq","","",117,[[["self"],["mut"]],["bool"]]],[11,"eq","","",118,[[["self"],["override"]],["bool"]]],[11,"eq","","",119,[[["self"],["priv"]],["bool"]]],[11,"eq","","",120,[[["self"],["pub"]],["bool"]]],[11,"eq","","",121,[[["self"],["ref"]],["bool"]]],[11,"eq","","",122,[[["self"],["return"]],["bool"]]],[11,"eq","","",123,[[["self"],["selftype"]],["bool"]]],[11,"eq","","",124,[[["self"],["selfvalue"]],["bool"]]],[11,"eq","","",125,[[["self"],["static"]],["bool"]]],[11,"eq","","",126,[[["self"],["struct"]],["bool"]]],[11,"eq","","",127,[[["self"],["super"]],["bool"]]],[11,"eq","","",128,[[["self"],["trait"]],["bool"]]],[11,"eq","","",129,[[["self"],["try"]],["bool"]]],[11,"eq","","",130,[[["self"],["type"]],["bool"]]],[11,"eq","","",131,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",132,[[["self"],["union"]],["bool"]]],[11,"eq","","",133,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",134,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",135,[[["self"],["use"]],["bool"]]],[11,"eq","","",136,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",137,[[["self"],["where"]],["bool"]]],[11,"eq","","",138,[[["self"],["while"]],["bool"]]],[11,"eq","","",139,[[["self"],["yield"]],["bool"]]],[11,"eq","","",140,[[["self"],["add"]],["bool"]]],[11,"eq","","",141,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",142,[[["self"],["and"]],["bool"]]],[11,"eq","","",143,[[["self"],["andand"]],["bool"]]],[11,"eq","","",144,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",145,[[["self"],["at"]],["bool"]]],[11,"eq","","",146,[[["self"],["bang"]],["bool"]]],[11,"eq","","",147,[[["self"],["caret"]],["bool"]]],[11,"eq","","",148,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",149,[[["self"],["colon"]],["bool"]]],[11,"eq","","",150,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",151,[[["self"],["comma"]],["bool"]]],[11,"eq","","",152,[[["self"],["div"]],["bool"]]],[11,"eq","","",153,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",154,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",155,[[["self"],["dot"]],["bool"]]],[11,"eq","","",156,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",157,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",159,[[["self"],["eq"]],["bool"]]],[11,"eq","","",160,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",161,[[["self"],["ge"]],["bool"]]],[11,"eq","","",162,[[["self"],["gt"]],["bool"]]],[11,"eq","","",163,[[["self"],["le"]],["bool"]]],[11,"eq","","",164,[[["self"],["lt"]],["bool"]]],[11,"eq","","",165,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",166,[[["self"],["ne"]],["bool"]]],[11,"eq","","",167,[[["self"],["or"]],["bool"]]],[11,"eq","","",168,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",169,[[["self"],["oror"]],["bool"]]],[11,"eq","","",170,[[["self"],["pound"]],["bool"]]],[11,"eq","","",171,[[["self"],["question"]],["bool"]]],[11,"eq","","",172,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",173,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",174,[[["self"],["rem"]],["bool"]]],[11,"eq","","",175,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",177,[[["self"],["semi"]],["bool"]]],[11,"eq","","",178,[[["self"],["shl"]],["bool"]]],[11,"eq","","",179,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",180,[[["self"],["shr"]],["bool"]]],[11,"eq","","",181,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",182,[[["self"],["star"]],["bool"]]],[11,"eq","","",183,[[["self"],["sub"]],["bool"]]],[11,"eq","","",184,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",185,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",186,[[["self"],["brace"]],["bool"]]],[11,"eq","","",187,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",188,[[["self"],["paren"]],["bool"]]],[11,"eq","","",189,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",64,[[["self"],["meta"]],["bool"]]],[11,"ne","","",64,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",66,[[["self"],["fields"]],["bool"]]],[11,"ne","","",66,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",67,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",67,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",68,[[["self"],["expr"]],["bool"]]],[11,"ne","","",68,[[["self"],["expr"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",221,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",221,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",239,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",239,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",19,[[["self"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["member"]],["bool"]]],[11,"ne","","",69,[[["self"],["member"]],["bool"]]],[11,"eq","","",20,[[["self"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["generics"]],["bool"]]],[11,"ne","","",23,[[["self"],["generics"]],["bool"]]],[11,"eq","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",22,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",22,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",76,[[["self"],["lit"]],["bool"]]],[11,"ne","","",76,[[["self"],["lit"]],["bool"]]],[11,"eq","","",191,[[["self"],["self"]],["bool"]]],[11,"eq","","",192,[[["self"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["self"]],["bool"]]],[11,"eq","","",195,[[["self"],["self"]],["bool"]]],[11,"eq","","",196,[[["self"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",75,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",74,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",34,[[["self"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",79,[[["self"],["data"]],["bool"]]],[11,"ne","","",79,[[["self"],["data"]],["bool"]]],[11,"eq","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",80,[[["self"],["binop"]],["bool"]]],[11,"ne","","",80,[[["self"],["binop"]],["bool"]]],[11,"eq","","",81,[[["self"],["unop"]],["bool"]]],[11,"ne","","",81,[[["self"],["unop"]],["bool"]]],[11,"eq","","",84,[[["self"],["type"]],["bool"]]],[11,"ne","","",84,[[["self"],["type"]],["bool"]]],[11,"eq","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",41,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",41,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",51,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",51,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",47,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",47,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",49,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",49,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",55,[[["self"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["abi"]],["bool"]]],[11,"ne","","",39,[[["self"],["abi"]],["bool"]]],[11,"eq","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",83,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",83,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",60,[[["self"],["path"]],["bool"]]],[11,"ne","","",60,[[["self"],["path"]],["bool"]]],[11,"eq","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",57,[[["self"],["binding"]],["bool"]]],[11,"ne","","",57,[[["self"],["binding"]],["bool"]]],[11,"eq","","",58,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",58,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",62,[[["self"],["qself"]],["bool"]]],[11,"ne","","",62,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",198,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",201,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",201,[[["self"],["punctuated"]],["bool"]]],[11,"into_iter","","",201,N],[11,"cmp","syn","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"hash","syn::token","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",63,N],[11,"hash","","",64,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",65,N],[11,"hash","","",6,N],[11,"hash","","",66,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",67,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",68,N],[11,"hash","","",215,N],[11,"hash","","",222,N],[11,"hash","","",210,N],[11,"hash","","",11,N],[11,"hash","","",227,N],[11,"hash","","",235,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",15,N],[11,"hash","","",12,N],[11,"hash","","",236,N],[11,"hash","","",223,N],[11,"hash","","",221,N],[11,"hash","","",238,N],[11,"hash","","",219,N],[11,"hash","","",224,N],[11,"hash","","",226,N],[11,"hash","","",217,N],[11,"hash","","",237,N],[11,"hash","","",214,N],[11,"hash","","",211,N],[11,"hash","","",212,N],[11,"hash","","",13,N],[11,"hash","","",14,N],[11,"hash","","",228,N],[11,"hash","","",17,N],[11,"hash","","",229,N],[11,"hash","","",216,N],[11,"hash","","",218,N],[11,"hash","","",231,N],[11,"hash","","",225,N],[11,"hash","","",232,N],[11,"hash","","",230,N],[11,"hash","","",16,N],[11,"hash","","",220,N],[11,"hash","","",233,N],[11,"hash","","",213,N],[11,"hash","","",234,N],[11,"hash","","",239,N],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",69,N],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",23,N],[11,"hash","","",70,N],[11,"hash","","",29,N],[11,"hash","","",24,N],[11,"hash","","",22,N],[11,"hash","","",240,N],[11,"hash","","",190,N],[11,"hash","","",241,N],[11,"hash","","",21,N],[11,"hash","","",72,N],[11,"hash","","",28,N],[11,"hash","","",71,N],[11,"hash","","",30,N],[11,"hash","","",73,N],[11,"hash","","",27,N],[11,"hash","","",26,N],[11,"hash","","",25,N],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",76,N],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",33,[[["self"],["h"]]]],[11,"hash","","",77,N],[11,"hash","","",75,N],[11,"hash","","",74,N],[11,"hash","","",78,N],[11,"hash","","",34,[[["self"],["h"]]]],[11,"hash","","",38,N],[11,"hash","","",79,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",80,N],[11,"hash","","",81,N],[11,"hash","","",84,N],[11,"hash","","",52,N],[11,"hash","","",41,N],[11,"hash","","",50,N],[11,"hash","","",51,N],[11,"hash","","",42,N],[11,"hash","","",47,N],[11,"hash","","",54,N],[11,"hash","","",49,N],[11,"hash","","",53,N],[11,"hash","","",44,N],[11,"hash","","",48,N],[11,"hash","","",43,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",82,N],[11,"hash","","",83,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","","",86,N],[11,"hash","","",85,N],[11,"hash","","",56,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",62,N],[11,"hash","syn::punctuated","",201,N],[11,"fmt","syn","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::token","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"deref","","",206,N],[11,"index","syn::punctuated","",201,N],[11,"index_mut","","",201,N],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"description","syn::parse","",208,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as the specified `span`.",209,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",209,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",209,N],[11,"visit_abi","syn::visit","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse stream.",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum variants, and extracting bindings to each of the fields in the deriving Struct or Enum in a generic way.","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both an `Ident` reference to the given field, and the syn `&'a Field` descriptor for that field.",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however each of the fields are references rather than owned. When this is used as the AST for a real variant, this struct simply borrows the fields of the `syn::Variant`, however this type may also be used as the sole variant for a struct.",N,N],[12,"attrs","","",1,N],[12,"ident","","",1,N],[12,"fields","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which provides utilities for destructuring `Variant`s with `match` expressions.",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides utilities for creating custom derive trait implementations.",N,N],[4,"AddBounds","","Changes how bounds are added",N,N],[13,"Both","","Add for fields and generics",3,N],[13,"Fields","","Fields only",3,N],[13,"Generics","","Generics only",3,N],[13,"None","","None",3,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",4,N],[13,"MoveMut","","`mut x`",4,N],[13,"Ref","","`ref x`",4,N],[13,"RefMut","","`ref mut x`",4,N],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type which implements `Display`.",N,[[["t"]],["string"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `BindingInfo` references",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to the underlying `syn` AST node which this `Variant` was created from.",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to match against this Variant.",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the current variant.",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating a `match` arm which evaluates the returned tokens.",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating a `match` arm which evaluates to the resulting tokens.",2,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This has 2 effects:",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced in this field's type.",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from the passed-in `DeriveInput`.",5,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",5,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",5,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which this `Structure` was created from.",5,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a `filter_variants` call.",5,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field, passing in a `BindingInfo`. and generating `match` arms which evaluate the returned tokens.",5,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field, passing in the result of the previous call, and a `BindingInfo`. generating `match` arms which evaluate to the resulting tokens.",5,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing in a `VariantInfo`. and generating `match` arms which evaluate the returned tokens.",5,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object. This has 2 effects:",5,[[["self"],["f"]],["self"]]],[11,"add_bounds","","Specify which bounds should be generated by impl-generating functions such as `gen_impl`, `bound_impl`, and `unsafe_bound_impl`.",5,[[["self"],["addbounds"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object. This has 2 effects:",5,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",5,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields by calling the passed-in function for each `BindingInfo`.",5,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields by calling the passed-in function for each `BindingInfo`.",5,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced in the types of non-filtered fields / variants.",5,[[["self"]],["vec",["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when the trait to be derived needs some extra generic parameters.",5,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each type parmaeter referenced in the types of non-filtered fields.",5,[[["self"],["traitbound"],["option"],["addbounds"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by `Structure::gen_impl`.",5,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl block will automatically use hygiene tricks to avoid polluting the caller's namespace, and will automatically add trait bounds for generic type parameters.",5,[[["self"],["tokenstream"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper. It will parse the incoming `TokenStream` into a `synstructure::Structure` object, and pass it into the inner function.",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the original struct and the expansion to ensure that they compile correctly, and confirms that feeding the original struct into the named derive will produce the written output.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"clone","","",3,[[["self"]],["addbounds"]]],[11,"clone","","",4,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",5,[[["self"]],["structure"]]],[11,"eq","","",3,[[["self"],["addbounds"]],["bool"]]],[11,"eq","","",4,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",5,[[["self"],["structure"]],["bool"]]],[11,"ne","","",5,[[["self"],["structure"]],["bool"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",5,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["texture"]={"doc":"A generic library for textures.","items":[[3,"TextureSettings","texture","Texture creation parameters.",N,N],[4,"Format","","Texture format.",N,N],[13,"Rgba8","","`(red, green, blue, alpha)` with values 0-255.",0,N],[4,"Filter","","Sampling filter",N,N],[13,"Linear","","A Weighted Linear Blend",1,N],[13,"Nearest","","Nearest Texel",1,N],[0,"ops","","Image operations for textures.",N,N],[5,"flip_vertical","texture::ops","Flips the image vertically.",N,N],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",N,N],[8,"ImageSize","texture","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",2,N],[11,"get_width","","Gets the image width.",2,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",2,[[["self"]],["u32"]]],[8,"CreateTexture","","Implemented by textures for creation.",N,N],[16,"Error","","The error when creating texture.",3,N],[10,"create","","Create texture from memory.",3,N],[8,"UpdateTexture","","Implemented by textures for updating.",N,N],[16,"Error","","The error when updating texture.",4,N],[10,"update","","Update the texture.",4,N],[11,"new","","Create default settings.",5,[[],["texturesettings"]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",5,[[["self"]],["bool"]]],[11,"set_convert_gamma","","Sets convert gamma.",5,[[["self"],["bool"]]]],[11,"convert_gamma","","Sets convert gamma.",5,[[["self"],["bool"]],["self"]]],[11,"get_compress","","Gets wheter compress on the GPU.",5,[[["self"]],["bool"]]],[11,"set_compress","","Sets compress.",5,[[["self"],["bool"]]]],[11,"compress","","Sets compress.",5,[[["self"],["bool"]],["self"]]],[11,"get_generate_mipmap","","Gets generate mipmap.",5,[[["self"]],["bool"]]],[11,"set_generate_mipmap","","Sets generate mipmap.",5,[[["self"],["bool"]]]],[11,"generate_mipmap","","Sets generate mipmap.",5,[[["self"],["bool"]],["self"]]],[11,"get_min","","Gets minify filter.",5,[[["self"]],["filter"]]],[11,"set_min","","Sets minify filter.",5,[[["self"],["filter"]]]],[11,"min","","Sets minify filter.",5,[[["self"],["filter"]],["self"]]],[11,"get_mag","","Gets magnify filter",5,[[["self"]],["filter"]]],[11,"set_mag","","Sets magnify filter",5,[[["self"],["filter"]]]],[11,"mag","","Sets magnify filter",5,[[["self"],["filter"]],["self"]]],[11,"get_mipmap","","Gets minify mipmap filter",5,[[["self"]],["filter"]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true.",5,[[["self"],["filter"]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true",5,[[["self"],["filter"]],["self"]]],[11,"get_filter","","Returns the min and mag filter",5,N],[11,"set_filter","","Sets the min and mag filter",5,[[["self"],["filter"]]]],[11,"filter","","Sets the min and mag filter",5,[[["self"],["filter"]],["self"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",5,[[["self"]],["texturesettings"]]],[11,"clone","","",0,[[["self"]],["format"]]],[11,"clone","","",1,[[["self"]],["filter"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Format"],[4,"Filter"],[8,"ImageSize"],[8,"CreateTexture"],[8,"UpdateTexture"],[3,"TextureSettings"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and filling text.","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of hyphenation:",N,N],[3,"HyphenSplitter","","Simple and default way to split words: splitting on existing hyphens only.",N,N],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. Use it when the convenience [`wrap_iter`], [`wrap`] and [`fill`] functions are not flexible enough.",N,N],[12,"width","","The width in columns at which the text will be wrapped.",0,N],[12,"initial_indent","","Indentation used for the first line of output.",0,N],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,N],[12,"break_words","","Allow long words to be broken if they cannot fit on a line. When set to `false`, some lines may be longer than `self.width`.",0,N],[12,"splitter","","The method for splitting words. If the `hyphenation` feature is enabled, you can use a `hyphenation::language::Corpus` here to get language-aware hyphenation.",0,N],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns a `Wrapper`. An instance of `IntoWrapIter` is typically obtained through either [`wrap_iter`] or [`Wrapper::into_wrap_iter`].",N,N],[3,"WrapIter","","An iterator over the lines of the input string which borrows a `Wrapper`. An instance of `WrapIter` is typically obtained through the [`Wrapper::wrap_iter`] method.",N,N],[5,"fill","","Fill a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["vec",["cow"]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",N,[[["str"],["usize"]],["intowrapiter",["hyphensplitter"]]]],[5,"indent","","Add prefix to each non-empty line.",N,[[["str"],["str"]],["string"]]],[5,"dedent","","Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,"WordSplitter","","An interface for splitting words.",N,N],[10,"split","","Return all possible splits of word. Each split is a triple with a head, a hyphen, and a tail where `head + &hyphen + &tail == word`. The hyphen can be empty if there is already a hyphen in the head.",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken. A [`HyphenSplitter`] will be used by default for splitting words. See the [`WordSplitter`] trait for other options.",0,[[["usize"]],["wrapper",["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for wrapping at the specified width. By default, we allow words longer than `width` to be broken.",0,[[["usize"],["s"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is used on the very first line of output.",0,[[["self"],["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent indentation is used on lines following the first line of output.",0,[[["self"],["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer than `self.width` can be broken, or if they will be left sticking out into the right margin.",0,[[["self"],["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["vec",["cow"]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters. Strings are wrapped based on their displayed width, not their size in bytes.",0,[[["self"],["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"clone","","",2,[[["self"]],["nohyphenation"]]],[11,"clone","","",3,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"next","","",4,[[["self"]],["option",["cow"]]]],[11,"next","","",5,[[["self"]],["option",["cow"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules.","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width is based on.",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode characters.",N,N],[10,"width","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or `None` if the character is a control character other than `'\\x00'`.",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"]={"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",N,N],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",N,N],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,[[["self"]],["t"]]],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,[[["self"]]]],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",N,N],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,[[["self"]],["t"]]],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,[[["self"]],["e"]]]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys. Space requirements are O(highest integer key).","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,"VacantEntry","","A vacant Entry.",N,N],[3,"OccupiedEntry","","An occupied Entry.",N,N],[3,"Iter","","An iterator over the key-value pairs of a map.",N,N],[3,"IterMut","","An iterator over the key-value pairs of a map, with the values being mutable.",N,N],[3,"Keys","","An iterator over the keys of a map.",N,N],[3,"Values","","An iterator over the values of a map.",N,N],[3,"ValuesMut","","An iterator over the values of a map.",N,N],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain","","A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",N,N],[13,"Vacant","","A vacant Entry",0,N],[13,"Occupied","","An occupied Entry",0,N],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity` elements before resizing.",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold without reallocating.",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys. In the case of `VecMap` this means reallocations will not occur as long as all inserted keys are less than `len`.",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys. The iterator's element type is `usize`.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r V`.",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order of the keys. The iterator's element type is `&'r mut V`.",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys. The iterator's element type is `(usize, &'r V)`.",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys, with mutable references to the values. The iterator's element type is `(usize, &'r mut V)`.",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",1,[[["self"],["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of the keys, emptying (but not consuming) the original `VecMap`. The iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified key.",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value present in the map, that value is returned. Otherwise, `None` is returned.",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",0,[[["self"],["f"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",2,[[["self"],["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key, and returns the entry's old value.",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[["self"]],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"default","","",1,[[],["self"]]],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option",["usize"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys, consuming the original `VecMap`. The iterator's element type is `(usize, &'r V)`.",1,[[["self"]],["intoiter"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["vecmath"]={"doc":"A simple and generic library for vector math.","items":[[5,"col_mat3x2_mul_col","vecmath","Computes column vector in column matrix product.",N,[[["matrix3x2"],["matrix3x2"],["usize"]],["vector2"]]],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",N,[[["matrix3"],["matrix3"],["usize"]],["vector3"]]],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",N,[[["matrix4x3"],["matrix4x3"],["usize"]],["vector3"]]],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",N,[[["matrix4"],["matrix4"],["usize"]],["vector4"]]],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",N,[[["matrix2x3"],["matrix2x3"],["usize"]],["vector3"]]],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",N,[[["matrix3"],["matrix3"],["usize"]],["vector3"]]],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",N,[[["matrix3x4"],["matrix3x4"],["usize"]],["vector4"]]],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",N,[[["matrix4"],["matrix4"],["usize"]],["vector4"]]],[5,"col_mat3x2_mul","","Multiplies two matrices.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"col_mat3_mul","","Multiplies two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"col_mat4x3_mul","","Multiplies two matrices.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"col_mat4_mul","","Multiplies two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"row_mat2x3_mul","","Multiplies two matrices.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"row_mat3_mul","","Multiplies two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"row_mat3x4_mul","","Multiplies two matrices.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"row_mat4_mul","","Multiplies two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"mat2x3_id","","Constructs identity matrix.",N,[[],["matrix2x3"]]],[5,"mat3x2_id","","Constructs identity matrix.",N,[[],["matrix3x2"]]],[5,"mat3_id","","Constructs identity matrix.",N,[[],["matrix3"]]],[5,"mat3x4_id","","Constructs identity matrix.",N,[[],["matrix3x4"]]],[5,"mat4x3_id","","Constructs identity matrix.",N,[[],["matrix4x3"]]],[5,"mat4_id","","Constructs identity matrix.",N,[[],["matrix4"]]],[5,"vec2_cast","","Converts to another vector type.",N,[[["vector2"]],["vector2"]]],[5,"vec3_cast","","Converts to another vector type.",N,[[["vector3"]],["vector3"]]],[5,"vec4_cast","","Converts to another vector type.",N,[[["vector4"]],["vector4"]]],[5,"mat2x3_cast","","Converts to another matrix type.",N,[[["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_cast","","Converts to another matrix type.",N,[[["matrix3x2"]],["matrix3x2"]]],[5,"mat3_cast","","Converts to another matrix type.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_cast","","Converts to another matrix type.",N,[[["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_cast","","Converts to another matrix type.",N,[[["matrix4x3"]],["matrix4x3"]]],[5,"mat4_cast","","Converts to another matrix type.",N,[[["matrix4"]],["matrix4"]]],[5,"vec2_sub","","Subtracts 'b' from 'a'.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_sub","","Subtracts 'b' from 'a'.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_sub","","Subtracts 'b' from 'a'.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"mat2x3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"mat3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"mat3x4_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"mat4_sub","","Subtracts 'b' from 'a'.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"vec2_add","","Adds two vectors.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_add","","Adds two vectors.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_add","","Adds two vectors.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"mat2x3_add","","Adds two matrices.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_add","","Adds two matrices.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"mat3_add","","Adds two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"mat3x4_add","","Adds two matrices.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_add","","Adds two matrices.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"mat4_add","","Adds two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"vec2_mul","","Multiplies two vectors component wise.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_mul","","Multiplies two vectors component wise.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_mul","","Multiplies two vectors component wise.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"vec2_dot","","Computes the dot product.",N,[[["vector2"],["vector2"]],["t"]]],[5,"vec3_dot","","Computes the dot product.",N,[[["vector3"],["vector3"]],["t"]]],[5,"vec4_dot","","Computes the dot product.",N,[[["vector4"],["vector4"]],["t"]]],[5,"vec2_square_len","","Computes the square length of a vector.",N,[[["vector2"]],["t"]]],[5,"vec3_square_len","","Computes the square length of a vector.",N,[[["vector3"]],["t"]]],[5,"vec4_square_len","","Computes the square length of a vector.",N,[[["vector4"]],["t"]]],[5,"vec2_cross","","Computes the cross product.",N,[[["vector2"],["vector2"]],["t"]]],[5,"vec3_cross","","Computes the cross product.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec2_scale","","Multiplies the vector with a scalar.",N,[[["vector2"],["t"]],["vector2"]]],[5,"vec3_scale","","Multiplies the vector with a scalar.",N,[[["vector3"],["t"]],["vector3"]]],[5,"vec4_scale","","Multiplies the vector with a scalar.",N,[[["vector4"],["t"]],["vector4"]]],[5,"vec2_neg","","Negates the vector.",N,[[["vector2"]],["vector2"]]],[5,"vec3_neg","","Negates the vector.",N,[[["vector3"]],["vector3"]]],[5,"vec4_neg","","Negates the vector.",N,[[["vector4"]],["vector4"]]],[5,"vec2_len","","Computes the length of vector.",N,[[["vector2"]],["t"]]],[5,"vec3_len","","Computes the length of vector.",N,[[["vector3"]],["t"]]],[5,"vec4_len","","Computes the length of vector.",N,[[["vector4"]],["t"]]],[5,"vec2_inv_len","","Computes the inverse length of a vector.",N,[[["vector2"]],["t"]]],[5,"vec3_inv_len","","Computes the inverse length of a vector.",N,[[["vector3"]],["t"]]],[5,"vec4_inv_len","","Computes the inverse length of a vector.",N,[[["vector4"]],["t"]]],[5,"vec2_normalized","","Computes the normalized.",N,[[["vector2"]],["vector2"]]],[5,"vec3_normalized","","Computes the normalized.",N,[[["vector3"]],["vector3"]]],[5,"vec4_normalized","","Computes the normalized.",N,[[["vector4"]],["vector4"]]],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"vec3_dot_vec2","","Computes transformed vector component.",N,[[["vector3"],["vector2"]],["t"]]],[5,"vec4_dot_vec3","","Computes transformed vector component.",N,[[["vector4"],["vector3"]],["t"]]],[5,"vec3_dot_pos2","","Computes transformed position component.",N,[[["vector3"],["vector2"]],["t"]]],[5,"vec4_dot_pos3","","Computes transformed position component.",N,[[["vector4"],["vector3"]],["t"]]],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",N,[[["matrix2x3"],["usize"]],["vector2"]]],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",N,[[["matrix2x3"],["usize"]],["vector2"]]],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",N,[[["matrix3x2"],["usize"]],["vector3"]]],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",N,[[["matrix3x2"],["usize"]],["vector3"]]],[5,"row_mat3_col","","Returns a column vector of a row matrix.",N,[[["matrix3"],["usize"]],["vector3"]]],[5,"col_mat3_row","","Returns a row vector of a column matrix.",N,[[["matrix3"],["usize"]],["vector3"]]],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",N,[[["matrix3x4"],["usize"]],["vector3"]]],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",N,[[["matrix3x4"],["usize"]],["vector3"]]],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",N,[[["matrix4x3"],["usize"]],["vector4"]]],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",N,[[["matrix4x3"],["usize"]],["vector4"]]],[5,"row_mat4_col","","Returns a column vector of a row matrix.",N,[[["matrix4"],["usize"]],["vector4"]]],[5,"col_mat4_row","","Returns a row vector of a column matrix.",N,[[["matrix4"],["usize"]],["vector4"]]],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix2x3"]],["matrix3x2"]]],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3x2"]],["matrix2x3"]]],[5,"mat3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3x4"]],["matrix4x3"]]],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix4x3"]],["matrix3x4"]]],[5,"mat4_transposed","","Constructs the transpose of a matrix.",N,[[["matrix4"]],["matrix4"]]],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",N,[[["matrix3"],["vector3"]],["vector3"]]],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",N,[[["matrix4"],["vector4"]],["vector4"]]],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",N,[[["matrix3"],["vector3"]],["vector3"]]],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",N,[[["matrix4"],["vector4"]],["vector4"]]],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",N,[[["matrix2x3"],["vector2"]],["vector2"]]],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",N,[[["matrix3x2"],["vector2"]],["vector2"]]],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",N,[[["matrix3x4"],["vector3"]],["vector3"]]],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",N,[[["matrix4x3"],["vector3"]],["vector3"]]],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",N,[[["matrix2x3"],["vector2"]],["vector2"]]],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",N,[[["matrix3x2"],["vector2"]],["vector2"]]],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",N,[[["matrix3x4"],["vector3"]],["vector3"]]],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",N,[[["matrix4x3"],["vector3"]],["vector3"]]],[5,"mat2x3_det","","Computes the determinant of a matrix.",N,[[["matrix2x3"]],["t"]]],[5,"mat3x2_det","","Computes the determinant of a matrix.",N,[[["matrix3x2"]],["t"]]],[5,"mat3_det","","Computes the determinant of a matrix.",N,[[["matrix3"]],["t"]]],[5,"mat3x4_det","","Computes the determinant of a matrix.",N,[[["matrix3x4"]],["t"]]],[5,"mat4x3_det","","Computes the determinant of a matrix.",N,[[["matrix4x3"]],["t"]]],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",N,[[["matrix4"]],["t"]]],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",N,[[["matrix2x3"]],["t"]]],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",N,[[["matrix3x2"]],["t"]]],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",N,[[["matrix3"]],["t"]]],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",N,[[["matrix3x4"]],["t"]]],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",N,[[["matrix4x3"]],["t"]]],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",N,[[["matrix4"]],["t"]]],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",N,[[["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",N,[[["matrix3x2"]],["matrix3x2"]]],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",N,[[["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",N,[[["matrix4x3"]],["matrix4x3"]]],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",N,[[["matrix4"]],["matrix4"]]],[0,"traits","","Various useful traits",N,N],[8,"Float","vecmath::traits","Convenience trait for floats.",N,N],[8,"Min","","Minimum value.",N,N],[10,"min","","Returns the minimum value of self or other.",0,[[["self"],["self"]],["self"]]],[8,"Max","","Maximum value.",N,N],[10,"max","","Returns the maximum value of self or other.",1,[[["self"],["self"]],["self"]]],[8,"Signum","","The sign of the number.",N,N],[10,"signum","","Returns number representing the sign of self",2,[[["self"]],["self"]]],[8,"Powf","","Floating number power.",N,N],[10,"powf","","Returns floating power of the number.",3,[[["self"],["self"]],["self"]]],[8,"Radians","","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",4,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",4,[[["self"]],["self"]]],[8,"One","","Number 1.",N,N],[10,"one","","Returns 1.",5,[[],["self"]]],[8,"Zero","","Number 0.",N,N],[10,"zero","","Returns 0.",6,[[],["self"]]],[8,"Sqrt","","Square root.",N,N],[10,"sqrt","","Returns square root.",7,[[["self"]],["self"]]],[8,"Trig","","Basic trigonometry functions",N,N],[10,"sin","","Returns sine of self.",8,[[["self"]],["self"]]],[10,"cos","","Returns cosine of self.",8,[[["self"]],["self"]]],[10,"tan","","Returns tangent of self.",8,[[["self"]],["self"]]],[10,"asin","","Returns inverse sine of self.",8,[[["self"]],["self"]]],[10,"acos","","Returns inverse cosine of self.",8,[[["self"]],["self"]]],[10,"atan","","Returns inverse tangent of self.",8,[[["self"]],["self"]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other (x).",8,[[["self"],["self"]],["self"]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[["self"]],["self"]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[["self"]],["self"]]],[8,"Cast","","Casts into another type.",N,N],[10,"cast","","Casts into other type.",9,[[["self"]],["t"]]],[8,"FromPrimitive","","Trait for converting from different numeric types",N,N],[10,"from_f64","","from a f64",10,[[["f64"]],["self"]]],[10,"from_f32","","from a f32",10,[[["f32"]],["self"]]],[10,"from_isize","","from a isze",10,[[["isize"]],["self"]]],[10,"from_u32","","from a u32",10,[[["u32"]],["self"]]],[10,"from_i32","","from a i32",10,[[["i32"]],["self"]]],[6,"Vector2","vecmath","A 2D vector.",N,N],[6,"Vector3","","A 3D vector.",N,N],[6,"Vector4","","A 4D vector.",N,N],[6,"Matrix2x3","","A 2x3 matrix.",N,N],[6,"Matrix3x2","","A 3x2 matrix.",N,N],[6,"Matrix3","","A 3x3 matrix.",N,N],[6,"Matrix3x4","","A 3x4 matrix.",N,N],[6,"Matrix4x3","","A 4x3 matrix.",N,N],[6,"Matrix4","","A 4x4 matrix.",N,N]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["viewport"]={"doc":"A library for storing viewport information","items":[[3,"Viewport","viewport","Stores viewport information.",N,N],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)` is lower left corner.",0,N],[12,"draw_size","","The size of frame buffer in pixels.",0,N],[12,"window_size","","The size of window in points.",0,N],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a row major 2x3 matrix. The origin is in the upper left corner of the viewport rectangle. The x axis points to the right, and the y axis points down. The units are in points (window coordinates).",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["viewport"]]]],"paths":[[3,"Viewport"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"clone","","",2,[[["self"]],["void"]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["window"]={"doc":"Window storage and interfacing traits.","items":[[3,"NoWindow","window","A window without user interface, often used in server event loops.",N,N],[3,"Size","","Structure to store the window size.",N,N],[12,"width","","The width.",0,N],[12,"height","","The height.",0,N],[3,"Position","","Structure to store the window position.",N,N],[12,"x","","The x coordinate.",1,N],[12,"y","","The y coordinate.",1,N],[3,"WindowSettings","","Settings structure for window behavior.",N,N],[11,"new","","Creates a new `NoWindow`.",2,[[["windowsettings"]],["nowindow"]]],[6,"ProcAddress","","The type of an OpenGL function address.",N,N],[8,"BuildFromWindowSettings","","Constructs a window from a `WindowSettings` object.",N,N],[10,"build_from_window_settings","","Builds the window from a `WindowSettings` object.",3,[[["windowsettings"]],["result",["string"]]]],[8,"Window","","Trait representing the minimum requirements for defining a window.",N,N],[10,"set_should_close","","Tells the window to close or stay open.",4,[[["self"],["bool"]]]],[10,"should_close","","Returns true if the window should close.",4,[[["self"]],["bool"]]],[10,"size","","Gets the size of the window.",4,[[["self"]],["size"]]],[10,"swap_buffers","","Swaps render buffers.",4,[[["self"]]]],[10,"wait_event","","Wait indefinitely for an input event to be available from the window.",4,[[["self"]],["input"]]],[10,"wait_event_timeout","","Wait for an input event to be available from the window or for the specified timeout to be reached.",4,[[["self"],["duration"]],["option",["input"]]]],[10,"poll_event","","Polls an input event from the window.",4,[[["self"]],["option",["input"]]]],[10,"draw_size","","Gets the draw size of the window.",4,[[["self"]],["size"]]],[8,"AdvancedWindow","","Trait representing a window with the most features that are still generic.",N,N],[10,"get_title","","Gets a copy of the title of the window.",5,[[["self"]],["string"]]],[10,"set_title","","Sets the title of the window.",5,[[["self"],["string"]]]],[11,"title","","Sets title on window.",5,[[["self"],["string"]],["self"]]],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",5,[[["self"]],["bool"]]],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",5,[[["self"],["bool"]]]],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",5,[[["self"],["bool"]],["self"]]],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",5,[[["self"],["bool"]]]],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",5,[[["self"],["bool"]],["self"]]],[10,"show","","Shows the window.",5,[[["self"]]]],[10,"hide","","Hides the window.",5,[[["self"]]]],[10,"get_position","","Gets the position of window.",5,[[["self"]],["option",["position"]]]],[10,"set_position","","Sets the position of window.",5,[[["self"],["p"]]]],[10,"set_size","","Sets the window size.",5,[[["self"],["s"]]]],[11,"position","","Sets the position of window.",5,[[["self"],["p"]],["self"]]],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",N,N],[10,"get_proc_address","","Returns the address of the specified OpenGL function if it exists.",6,[[["self"],["str"]],["procaddress"]]],[10,"is_current","","Returns true if this window's gl context is the current gl context.",6,[[["self"]],["bool"]]],[10,"make_current","","Make the window's gl context the current gl context.",6,[[["self"]]]],[11,"new","","Creates window settings with defaults.",7,[[["t"],["s"]],["windowsettings"]]],[11,"build","","Builds window from the given settings.",7,[[["self"]],["result",["string"]]]],[11,"get_title","","Gets the title of built windows.",7,[[["self"]],["string"]]],[11,"set_title","","Sets the title of built windows.",7,[[["self"],["string"]]]],[11,"title","","Sets the title of built windows.",7,[[["self"],["string"]],["self"]]],[11,"get_size","","Gets the size of built windows.",7,[[["self"]],["size"]]],[11,"set_size","","Sets the size of built windows.",7,[[["self"],["size"]]]],[11,"size","","Sets the size of built windows.",7,[[["self"],["size"]],["self"]]],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",7,[[["self"]],["bool"]]],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",7,[[["self"],["bool"]]]],[11,"fullscreen","","Sets whether built windows will be fullscreen.",7,[[["self"],["bool"]],["self"]]],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key is pressed.",7,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,[[["self"],["bool"]]]],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,[[["self"],["bool"]],["self"]]],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",7,[[["self"]],["u8"]]],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",7,[[["self"],["u8"]]]],[11,"samples","","Sets the number of samples to use for anti-aliasing.",7,[[["self"],["u8"]],["self"]]],[11,"get_vsync","","Gets whether built windows should use vsync.",7,[[["self"]],["bool"]]],[11,"set_vsync","","Sets whether built windows should use vsync.",7,[[["self"],["bool"]]]],[11,"vsync","","Sets whether built windows should use vsync.",7,[[["self"],["bool"]],["self"]]],[11,"get_maybe_opengl","","Gets the OpenGL version of built windows.",7,[[["self"]],["option",["opengl"]]]],[11,"set_maybe_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["option",["opengl"]]]]],[11,"maybe_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["option",["opengl"]]],["self"]]],[11,"set_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["opengl"]]]],[11,"opengl","","Sets the OpenGL version of built windows.",7,[[["self"],["opengl"]],["self"]]],[11,"get_srgb","","Gets whether built windows should use hardware accelerated color conversion.",7,[[["self"]],["bool"]]],[11,"set_srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,[[["self"],["bool"]]]],[11,"srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,[[["self"],["bool"]],["self"]]],[11,"get_resizable","","Gets whether built windows should be resizable.",7,[[["self"]],["bool"]]],[11,"set_resizable","","Sets whether built windows should be resizable.",7,[[["self"],["bool"]]]],[11,"resizable","","Sets whether built windows should be resizable.",7,[[["self"],["bool"]],["self"]]],[11,"get_decorated","","Gets whether built windows should be decorated.",7,[[["self"]],["bool"]]],[11,"set_decorated","","Sets whether built windows should be decorated.",7,[[["self"],["bool"]]]],[11,"decorated","","Sets whether built windows should be decorated.",7,[[["self"],["bool"]],["self"]]],[11,"get_controllers","","Gets whether built windows should listen to controller input.",7,[[["self"]],["bool"]]],[11,"set_controllers","","Sets whether built windows should listen to controller input.",7,[[["self"],["bool"]]]],[11,"controllers","","Sets whether build windows should listen to controller input.",7,[[["self"],["bool"]],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"build_from_window_settings","","Errors",2,[[["windowsettings"]],["result",["string"]]]],[11,"should_close","","",2,[[["self"]],["bool"]]],[11,"set_should_close","","",2,[[["self"],["bool"]]]],[11,"size","","",2,[[["self"]],["size"]]],[11,"swap_buffers","","",2,[[["self"]]]],[11,"wait_event","","",2,[[["self"]],["input"]]],[11,"wait_event_timeout","","",2,[[["self"],["duration"]],["option",["input"]]]],[11,"poll_event","","",2,[[["self"]],["option",["input"]]]],[11,"draw_size","","",2,[[["self"]],["size"]]],[11,"get_title","","",2,[[["self"]],["string"]]],[11,"set_title","","",2,[[["self"],["string"]]]],[11,"get_exit_on_esc","","",2,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","",2,[[["self"],["bool"]]]],[11,"set_capture_cursor","","",2,[[["self"],["bool"]]]],[11,"show","","",2,[[["self"]]]],[11,"hide","","",2,[[["self"]]]],[11,"get_position","","",2,[[["self"]],["option",["position"]]]],[11,"set_position","","",2,[[["self"],["p"]]]],[11,"set_size","","",2,[[["self"],["s"]]]],[11,"clone","","",0,[[["self"]],["size"]]],[11,"clone","","",1,[[["self"]],["position"]]],[11,"clone","","",7,[[["self"]],["windowsettings"]]],[11,"from","","",0,N],[11,"from","","",0,N],[11,"from","","",1,N],[11,"from","","",1,N],[11,"eq","","",0,[[["self"],["size"]],["bool"]]],[11,"ne","","",0,[[["self"],["size"]],["bool"]]],[11,"eq","","",1,[[["self"],["position"]],["bool"]]],[11,"ne","","",1,[[["self"],["position"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Size"],[3,"Position"],[3,"NoWindow"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"]]};
initSearch(searchIndex);
